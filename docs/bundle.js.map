{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/classes/Color.ts","src/classes/IsThisColourSimilar/Colour.ts","src/classes/Options.ts","src/classes/Preview.ts","src/classes/Results.ts","src/classes/Selection.ts","src/classes/Util.ts","src/index.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","obj","_Colour","__esModule","default","_Util","Color","squaredValues","Array","keys","map","value","namedColorsLab","name","getMeanMedian","colors","options","averagingMethod","numberOfPixels","mean","median","colorChannels","let","channel","values","push","sortedValues","sort","totalSquaredValue","meanSquaredValue","meanValue","Math","sqrt","totalValue","medianIndex","floor","getLightestDarkest","sRGBtoLinear","pow","lightnessValues","color","luminance","g","b","lightnestValue","reduce","max","v","darkestValue","min","lightestIndex","indexOf","darkestIndex","lightestColor","darkestColor","blendColors","background","foreground","normalFgAlpha","normalBgAlpha","rgb","constructor","d","arguments","hex","this","parseInt","alpha","getClosedNamedColor","labA","rgb2lab","smallestDeltaE","closestColorName","forEach","namedColor","labB","deltaE","deltaE00","rgba","toRgb","round","join","toRgba","toString","slice","toHex6","toHex8","getHsl","nR","nG","nB","delta","hue","lightness","saturation","abs","toHsl","toHsla","Colour","x","y","z","rgb2xyz","xyz2lab","l","l1","a1","b1","l2","a2","b2","rad2deg","rad","PI","deg2rad","deg","avgL","avgC","a1p","a2p","c1p","c2p","avgCp","h1p","atan2","h2p","avghp","cos","deltahp","deltalp","deltacp","sin","sl","sc","sh","deltaro","exp","rt","Proxy","get","target","field","fieldHashmap","optionFields","callback","super","fieldArray","fieldToBeforeChangeCallback","onChange","restore","onBeforeChange","newBeforeChangeCallback","beforeChangeCallback","removeEventListener","addEventListener","triggerAllBeforeChangeCallbacks","save","optionsString","optionsObject","type","localStorage","setItem","JSON","stringify","getItem","parse","removeItem","newCallback","previewElement","uploaderElement","image","Image","context","imageValues","handleUpdateImage","handleReadUpload","preview","uploader","getContext","internalCanvas","OffscreenCanvas","internalContext","loadingToast","toast","files","src","URL","createObjectURL","_handleUpdateImage","debounce","resolve","opacity","backgroundColor","width","height","done","imageData","requestAnimationFrame","_imageData","getImageData","data","clearRect","isNil","drawImage","_imageValues","Uint8ClampedArray","putImageData","ImageData","fillStyle","fillRect","Promise","loadExampleImage","getColorsAt","async","startX","startY","resolvedColors","await","targetColors","setBackgroundColor","setOpacity","resultFields","resultElementArray","resultElementHashmap","resultField","textElement","querySelector","foregroundElement","backgroundElement","copyButton","proxiedTextElement","preventDefault","navigator","clipboard","writeText","set","style","split","info","setResult","resultFormat","hideAlphaChannel","includeAlpha","isInProgress","startPosition","endPosition","borderElement","targetElement","onmousedown","handleSelect","onmouseup","onmousemove","onmouseleave","ontouchstart","handleTouch","ontouchend","ontouchmove","outline","onSelectionEnd","updateInfo","updateOutline","x2","targetTouches","changedTouches","touches","boundingRect","getBoundingClientRect","x1","clientX","left","y1","clientY","top","y2","button","bottom","right","cssText","clear","func","timeout","undefined","timer","_len","args","_key","clearTimeout","setTimeout","apply","decimalPlaces","clamp","message","persist","document","createElement","toastContainer","textContent","className","setAttribute","appendChild","removeChild","_Color","_interopRequireDefault","_Options","_Preview","_Selection","_Results","init","$","selector","from","querySelectorAll","optionsForm","resultsForm","reset","calculate","selectorElement","results","selection","meanColor","medianColor","selectedColors","exampleImageButton","resetButton","saveButton","opacityPercent","opacityPercentage","handleBackgroundSettingsChanged","transparencyType","window","onload"],"mappings":"AAAA,CAAA,SAAAA,EAAAC,EAAAC,EAAAC,GAAA,SAAAC,EAAAC,EAAAC,GAAA,GAAA,CAAAJ,EAAAG,GAAA,CAAA,GAAA,CAAAJ,EAAAI,GAAA,CAAA,IAAAE,EAAA,YAAA,OAAAC,SAAAA,QAAA,GAAA,CAAAF,GAAAC,EAAA,OAAAA,EAAAF,EAAA,CAAA,CAAA,EAAA,GAAAI,EAAA,OAAAA,EAAAJ,EAAA,CAAA,CAAA,EAAA,MAAAK,EAAA,IAAAC,MAAA,uBAAAN,EAAA,GAAA,GAAAO,KAAA,mBAAAF,CAAA,CAAAG,EAAAX,EAAAG,GAAA,CAAAS,QAAA,EAAA,EAAAb,EAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,OAAAI,EAAAH,EAAAI,GAAA,GAAAL,IAAAA,CAAA,CAAA,EAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,CAAA,CAAA,CAAA,OAAAD,EAAAG,GAAAS,OAAA,CAAA,IAAA,IAAAL,EAAA,YAAA,OAAAD,SAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,CAAA,GAAAD,EAAAD,EAAAE,EAAA,EAAA,OAAAD,CAAA,EAAA,CAAAa,EAAA,CAAA,SAAAT,EAAAU,EAAAJ,G,+ECAA,IAGkCK,EAHlCC,GAGkCD,EAHlCX,EAAA,iCAAA,IAGkCW,EAAAE,WAAAF,EAAA,CAAAG,QAAAH,CAAA,EAAlCI,EAAAf,EAAA,WAAA,QAEqBgB,EACnBC,qBAAuB,CAAC,GAAGC,MAAM,GAAG,EAAEC,KAAK,GAAGC,IAAKC,GAAUA,EAAQA,CAAK,EAE1EC,sBAAwB,CACtB,CACEC,KAAM,YACNF,MAAO,CAAC,MAAO,CAAC,KAAM,CAAC,KACzB,EACA,CACEE,KAAM,eACNF,MAAO,CAAC,MAAO,KAAM,MACvB,EACA,CACEE,KAAM,OACNF,MAAO,CAAC,MAAO,CAAC,MAAO,CAAC,MAC1B,EACA,CACEE,KAAM,aACNF,MAAO,CAAC,MAAO,CAAC,MAAO,KACzB,EACA,CACEE,KAAM,QACNF,MAAO,CAAC,MAAO,CAAC,KAAM,CAAC,IACzB,EACA,CACEE,KAAM,QACNF,MAAO,CAAC,MAAO,CAAC,KAAM,MACxB,EACA,CACEE,KAAM,SACNF,MAAO,CAAC,MAAO,KAAM,GACvB,EACA,CACEE,KAAM,QACNF,MAAO,CAAC,EAAG,EAAG,EAChB,EACA,CACEE,KAAM,iBACNF,MAAO,CAAC,MAAO,KAAM,MACvB,EACA,CACEE,KAAM,OACNF,MAAO,CAAC,KAAM,KAAM,CAAC,OACvB,EACA,CACEE,KAAM,aACNF,MAAO,CAAC,MAAO,MAAO,CAAC,MACzB,EACA,CACEE,KAAM,QACNF,MAAO,CAAC,MAAO,KAAM,MACvB,EACA,CACEE,KAAM,YACNF,MAAO,CAAC,MAAO,KAAM,MACvB,EACA,CACEE,KAAM,YACNF,MAAO,CAAC,MAAO,CAAC,MAAO,CAAC,KAC1B,EACA,CACEE,KAAM,aACNF,MAAO,CAAC,MAAO,CAAC,MAAO,MACzB,EACA,CACEE,KAAM,YACNF,MAAO,CAAC,MAAO,MAAO,MACxB,EACA,CACEE,KAAM,QACNF,MAAO,CAAC,MAAO,MAAO,MACxB,EACA,CACEE,KAAM,iBACNF,MAAO,CAAC,MAAO,KAAM,CAAC,MACxB,EACA,CACEE,KAAM,WACNF,MAAO,CAAC,MAAO,CAAC,KAAM,MACxB,EACA,CACEE,KAAM,UACNF,MAAO,CAAC,MAAO,MAAO,MACxB,EACA,CACEE,KAAM,OACNF,MAAO,CAAC,MAAO,CAAC,MAAO,CAAC,MAC1B,EACA,CACEE,KAAM,WACNF,MAAO,CAAC,MAAO,MAAO,CAAC,MACzB,EACA,CACEE,KAAM,WACNF,MAAO,CAAC,MAAO,CAAC,MAAO,CAAC,EAC1B,EACA,CACEE,KAAM,gBACNF,MAAO,CAAC,MAAO,KAAM,MACvB,EACA,CACEE,KAAM,WACNF,MAAO,CAAC,MAAO,EAAG,CAAC,IACrB,EACA,CACEE,KAAM,YACNF,MAAO,CAAC,KAAM,CAAC,MAAO,MACxB,EACA,CACEE,KAAM,WACNF,MAAO,CAAC,MAAO,EAAG,CAAC,IACrB,EACA,CACEE,KAAM,YACNF,MAAO,CAAC,MAAO,CAAC,KAAM,MACxB,EACA,CACEE,KAAM,cACNF,MAAO,CAAC,KAAM,MAAO,CAAC,MACxB,EACA,CACEE,KAAM,iBACNF,MAAO,CAAC,MAAO,CAAC,MAAO,KACzB,EACA,CACEE,KAAM,aACNF,MAAO,CAAC,MAAO,MAAO,MACxB,EACA,CACEE,KAAM,aACNF,MAAO,CAAC,MAAO,MAAO,CAAC,MACzB,EACA,CACEE,KAAM,UACNF,MAAO,CAAC,MAAO,MAAO,MACxB,EACA,CACEE,KAAM,aACNF,MAAO,CAAC,MAAO,MAAO,KACxB,EACA,CACEE,KAAM,eACNF,MAAO,CAAC,MAAO,CAAC,MAAO,MACzB,EACA,CACEE,KAAM,gBACNF,MAAO,CAAC,MAAO,MAAO,CAAC,MACzB,EACA,CACEE,KAAM,gBACNF,MAAO,CAAC,MAAO,CAAC,MAAO,CAAC,KAC1B,EACA,CACEE,KAAM,gBACNF,MAAO,CAAC,MAAO,CAAC,MAAO,CAAC,KAC1B,EACA,CACEE,KAAM,gBACNF,MAAO,CAAC,MAAO,CAAC,MAAO,CAAC,MAC1B,EACA,CACEE,KAAM,aACNF,MAAO,CAAC,MAAO,MAAO,CAAC,MACzB,EACA,CACEE,KAAM,WACNF,MAAO,CAAC,MAAO,MAAO,CAAC,KACzB,EACA,CACEE,KAAM,cACNF,MAAO,CAAC,MAAO,CAAC,MAAO,CAAC,MAC1B,EACA,CACEE,KAAM,UACNF,MAAO,CAAC,MAAO,EAAG,CAAC,IACrB,EACA,CACEE,KAAM,UACNF,MAAO,CAAC,MAAO,EAAG,CAAC,IACrB,EACA,CACEE,KAAM,aACNF,MAAO,CAAC,MAAO,KAAM,CAAC,MACxB,EACA,CACEE,KAAM,YACNF,MAAO,CAAC,MAAO,MAAO,MACxB,EACA,CACEE,KAAM,cACNF,MAAO,CAAC,KAAM,CAAC,IAAM,KACvB,EACA,CACEE,KAAM,cACNF,MAAO,CAAC,MAAO,CAAC,MAAO,MACzB,EACA,CACEE,KAAM,UACNF,MAAO,CAAC,MAAO,MAAO,CAAC,MACzB,EACA,CACEE,KAAM,YACNF,MAAO,CAAC,MAAO,EAAG,CAAC,IACrB,EACA,CACEE,KAAM,aACNF,MAAO,CAAC,MAAO,KAAM,CAAC,KACxB,EACA,CACEE,KAAM,OACNF,MAAO,CAAC,MAAO,CAAC,KAAM,MACxB,EACA,CACEE,KAAM,YACNF,MAAO,CAAC,MAAO,KAAM,MACvB,EACA,CACEE,KAAM,OACNF,MAAO,CAAC,MAAO,EAAG,CAAC,IACrB,EACA,CACEE,KAAM,QACNF,MAAO,CAAC,MAAO,CAAC,KAAM,KACxB,EACA,CACEE,KAAM,cACNF,MAAO,CAAC,MAAO,CAAC,MAAO,MACzB,EACA,CACEE,KAAM,OACNF,MAAO,CAAC,MAAO,EAAG,CAAC,IACrB,EACA,CACEE,KAAM,WACNF,MAAO,CAAC,MAAO,CAAC,KAAM,KACxB,EACA,CACEE,KAAM,UACNF,MAAO,CAAC,MAAO,MAAO,CAAC,MACzB,EACA,CACEE,KAAM,YACNF,MAAO,CAAC,MAAO,MAAO,MACxB,EACA,CACEE,KAAM,SACNF,MAAO,CAAC,MAAO,MAAO,CAAC,MACzB,EACA,CACEE,KAAM,QACNF,MAAO,CAAC,MAAO,CAAC,KAAM,KACxB,EACA,CACEE,KAAM,QACNF,MAAO,CAAC,MAAO,CAAC,KAAM,MACxB,EACA,CACEE,KAAM,WACNF,MAAO,CAAC,MAAO,KAAM,CAAC,KACxB,EACA,CACEE,KAAM,gBACNF,MAAO,CAAC,MAAO,KAAM,CAAC,GACxB,EACA,CACEE,KAAM,YACNF,MAAO,CAAC,MAAO,CAAC,MAAO,MACzB,EACA,CACEE,KAAM,eACNF,MAAO,CAAC,MAAO,CAAC,KAAM,MACxB,EACA,CACEE,KAAM,YACNF,MAAO,CAAC,MAAO,CAAC,MAAO,CAAC,MAC1B,EACA,CACEE,KAAM,aACNF,MAAO,CAAC,MAAO,MAAO,MACxB,EACA,CACEE,KAAM,YACNF,MAAO,CAAC,MAAO,CAAC,KAAM,CAAC,KACzB,EACA,CACEE,KAAM,uBACNF,MAAO,CAAC,MAAO,CAAC,KAAM,MACxB,EACA,CACEE,KAAM,YACNF,MAAO,CAAC,MAAO,EAAG,CAAC,IACrB,EACA,CACEE,KAAM,aACNF,MAAO,CAAC,MAAO,CAAC,MAAO,MACzB,EACA,CACEE,KAAM,YACNF,MAAO,CAAC,MAAO,EAAG,CAAC,IACrB,EACA,CACEE,KAAM,YACNF,MAAO,CAAC,MAAO,MAAO,KACxB,EACA,CACEE,KAAM,cACNF,MAAO,CAAC,KAAM,MAAO,MACvB,EACA,CACEE,KAAM,gBACNF,MAAO,CAAC,MAAO,CAAC,MAAO,CAAC,KAC1B,EACA,CACEE,KAAM,eACNF,MAAO,CAAC,MAAO,CAAC,MAAO,CAAC,MAC1B,EACA,CACEE,KAAM,iBACNF,MAAO,CAAC,MAAO,CAAC,KAAM,CAAC,MACzB,EACA,CACEE,KAAM,iBACNF,MAAO,CAAC,MAAO,CAAC,KAAM,CAAC,MACzB,EACA,CACEE,KAAM,iBACNF,MAAO,CAAC,MAAO,CAAC,KAAM,CAAC,MACzB,EACA,CACEE,KAAM,cACNF,MAAO,CAAC,MAAO,CAAC,IAAK,MACvB,EACA,CACEE,KAAM,OACNF,MAAO,CAAC,MAAO,CAAC,MAAO,MACzB,EACA,CACEE,KAAM,YACNF,MAAO,CAAC,MAAO,CAAC,MAAO,MACzB,EACA,CACEE,KAAM,QACNF,MAAO,CAAC,MAAO,KAAM,KACvB,EACA,CACEE,KAAM,UACNF,MAAO,CAAC,MAAO,MAAO,CAAC,MACzB,EACA,CACEE,KAAM,SACNF,MAAO,CAAC,MAAO,MAAO,MACxB,EACA,CACEE,KAAM,mBACNF,MAAO,CAAC,MAAO,CAAC,MAAO,IACzB,EACA,CACEE,KAAM,aACNF,MAAO,CAAC,MAAO,MAAO,CAAC,KACzB,EACA,CACEE,KAAM,eACNF,MAAO,CAAC,MAAO,MAAO,CAAC,MACzB,EACA,CACEE,KAAM,eACNF,MAAO,CAAC,MAAO,MAAO,CAAC,KACzB,EACA,CACEE,KAAM,iBACNF,MAAO,CAAC,MAAO,CAAC,MAAO,MACzB,EACA,CACEE,KAAM,kBACNF,MAAO,CAAC,MAAO,MAAO,CAAC,MACzB,EACA,CACEE,KAAM,oBACNF,MAAO,CAAC,MAAO,CAAC,MAAO,MACzB,EACA,CACEE,KAAM,kBACNF,MAAO,CAAC,MAAO,CAAC,MAAO,CAAC,KAC1B,EACA,CACEE,KAAM,kBACNF,MAAO,CAAC,MAAO,MAAO,CAAC,MACzB,EACA,CACEE,KAAM,eACNF,MAAO,CAAC,MAAO,MAAO,CAAC,MACzB,EACA,CACEE,KAAM,YACNF,MAAO,CAAC,MAAO,CAAC,KAAM,KACxB,EACA,CACEE,KAAM,YACNF,MAAO,CAAC,MAAO,KAAM,KACvB,EACA,CACEE,KAAM,WACNF,MAAO,CAAC,MAAO,KAAM,MACvB,EACA,CACEE,KAAM,cACNF,MAAO,CAAC,KAAM,KAAM,MACtB,EACA,CACEE,KAAM,OACNF,MAAO,CAAC,MAAO,MAAO,CAAC,KACzB,EACA,CACEE,KAAM,UACNF,MAAO,CAAC,MAAO,IAAM,KACvB,EACA,CACEE,KAAM,QACNF,MAAO,CAAC,MAAO,CAAC,MAAO,MACzB,EACA,CACEE,KAAM,YACNF,MAAO,CAAC,MAAO,CAAC,MAAO,MACzB,EACA,CACEE,KAAM,SACNF,MAAO,CAAC,MAAO,MAAO,MACxB,EACA,CACEE,KAAM,YACNF,MAAO,CAAC,MAAO,KAAM,MACvB,EACA,CACEE,KAAM,SACNF,MAAO,CAAC,KAAM,MAAO,CAAC,MACxB,EACA,CACEE,KAAM,gBACNF,MAAO,CAAC,MAAO,CAAC,KAAM,MACxB,EACA,CACEE,KAAM,YACNF,MAAO,CAAC,MAAO,CAAC,KAAM,MACxB,EACA,CACEE,KAAM,gBACNF,MAAO,CAAC,MAAO,CAAC,MAAO,CAAC,KAC1B,EACA,CACEE,KAAM,gBACNF,MAAO,CAAC,MAAO,MAAO,IACxB,EACA,CACEE,KAAM,aACNF,MAAO,CAAC,MAAO,KAAM,MACvB,EACA,CACEE,KAAM,YACNF,MAAO,CAAC,MAAO,KAAM,MACvB,EACA,CACEE,KAAM,OACNF,MAAO,CAAC,MAAO,KAAM,MACvB,EACA,CACEE,KAAM,OACNF,MAAO,CAAC,MAAO,MAAO,KACxB,EACA,CACEE,KAAM,OACNF,MAAO,CAAC,MAAO,MAAO,CAAC,GACzB,EACA,CACEE,KAAM,aACNF,MAAO,CAAC,MAAO,CAAC,MAAO,CAAC,KAC1B,EACA,CACEE,KAAM,SACNF,MAAO,CAAC,MAAO,MAAO,CAAC,KACzB,EACA,CACEE,KAAM,MACNF,MAAO,CAAC,MAAO,MAAO,MACxB,EACA,CACEE,KAAM,YACNF,MAAO,CAAC,MAAO,MAAO,IACxB,EACA,CACEE,KAAM,YACNF,MAAO,CAAC,MAAO,MAAO,CAAC,MACzB,EACA,CACEE,KAAM,cACNF,MAAO,CAAC,MAAO,MAAO,MACxB,EACA,CACEE,KAAM,SACNF,MAAO,CAAC,MAAO,MAAO,MACxB,EACA,CACEE,KAAM,aACNF,MAAO,CAAC,MAAO,MAAO,MACxB,EACA,CACEE,KAAM,WACNF,MAAO,CAAC,MAAO,CAAC,MAAO,MACzB,EACA,CACEE,KAAM,WACNF,MAAO,CAAC,MAAO,KAAM,KACvB,EACA,CACEE,KAAM,SACNF,MAAO,CAAC,KAAM,MAAO,MACvB,EACA,CACEE,KAAM,SACNF,MAAO,CAAC,KAAM,EAAG,CAAC,IACpB,EACA,CACEE,KAAM,UACNF,MAAO,CAAC,MAAO,CAAC,MAAO,CAAC,MAC1B,EACA,CACEE,KAAM,YACNF,MAAO,CAAC,MAAO,MAAO,CAAC,MACzB,EACA,CACEE,KAAM,YACNF,MAAO,CAAC,MAAO,CAAC,KAAM,CAAC,MACzB,EACA,CACEE,KAAM,YACNF,MAAO,CAAC,MAAO,CAAC,KAAM,CAAC,MACzB,EACA,CACEE,KAAM,OACNF,MAAO,CAAC,MAAO,KAAM,IACvB,EACA,CACEE,KAAM,cACNF,MAAO,CAAC,MAAO,CAAC,KAAM,MACxB,EACA,CACEE,KAAM,YACNF,MAAO,CAAC,MAAO,CAAC,KAAM,CAAC,KACzB,EACA,CACEE,KAAM,MACNF,MAAO,CAAC,MAAO,KAAM,MACvB,EACA,CACEE,KAAM,OACNF,MAAO,CAAC,MAAO,CAAC,MAAO,CAAC,KAC1B,EACA,CACEE,KAAM,UACNF,MAAO,CAAC,MAAO,MAAO,CAAC,KACzB,EACA,CACEE,KAAM,SACNF,MAAO,CAAC,KAAM,MAAO,MACvB,EACA,CACEE,KAAM,YACNF,MAAO,CAAC,MAAO,CAAC,MAAO,CAAC,KAC1B,EACA,CACEE,KAAM,SACNF,MAAO,CAAC,MAAO,MAAO,CAAC,MACzB,EACA,CACEE,KAAM,QACNF,MAAO,CAAC,MAAO,KAAM,GACvB,EACA,CACEE,KAAM,QACNF,MAAO,CAAC,IAAK,IAAM,CAAC,IACtB,EACA,CACEE,KAAM,aACNF,MAAO,CAAC,MAAO,IAAM,CAAC,IACxB,EACA,CACEE,KAAM,SACNF,MAAO,CAAC,MAAO,CAAC,MAAO,MACzB,EACA,CACEE,KAAM,cACNF,MAAO,CAAC,MAAO,CAAC,MAAO,MACzB,GAGFG,qBAAuB,CAACC,EAAiBC,KACvC,IAAMC,EAAkBD,EAAQC,gBAC1BC,EAAiBH,EAAOjB,OAExBqB,EAAO,IAAIb,EACXc,EAAS,IAAId,EAEnB,GAAuB,IAAnBY,EAAJ,CAEA,IAAMG,EAAgB,CAAC,IAAK,IAAK,IAAK,KAEtC,IAAKC,IAAInC,EAAI,EAAGA,EAAIkC,EAAcvB,OAAQX,CAAC,GAAI,CAC7C,IAAMoC,EAAUF,EAAclC,GAExBqC,EAAS,GAEf,IAAKF,IAAInC,EAAI,EAAGA,EAAI4B,EAAOjB,OAAQX,CAAC,GAAIqC,EAAOC,KAAKV,EAAO5B,GAAGoC,EAAQ,EAEtE,IAAMG,EAAeF,EAAOG,KAAK,EAEjC,GAAwB,YAApBV,EAA+B,CACjCK,IAAIM,EAAoB,EAExB,IAAKN,IAAInC,EAAI,EAAGA,EAAIqC,EAAO1B,OAAQX,CAAC,GAAIyC,GAAqBtB,EAAMC,cAAciB,EAAOrC,IAExF,IAAM0C,EAAmBD,EAAoBV,EACvCY,EAAYC,KAAKC,KAAKH,CAAgB,EAE5CV,EAAKI,GAAWO,CAClB,CAEA,GAAwB,WAApBb,EAA8B,CAChCK,IAAIW,EAAa,EAEjB,IAAKX,IAAInC,EAAI,EAAGA,EAAIqC,EAAO1B,OAAQX,CAAC,GAAI8C,GAAcT,EAAOrC,GAEvD2C,EAAYG,EAAaf,EAE/BC,EAAKI,GAAWO,CAClB,CAEA,IAAMI,EAAcH,KAAKI,MAAMT,EAAa5B,OAAS,CAAC,EAEtDsB,EAAOG,GAAWG,EAAaQ,EACjC,CArC+C,CAuC/C,MAAO,CAACf,EAAMC,EAChB,EAEAgB,0BAA6BrB,IAC3B,GAAsB,IAAlBA,EAAOjB,OAAc,MAAO,CAAC,IAAIQ,EAAS,IAAIA,GAElD,MAAM+B,EAAgBd,GAChBA,GAAW,OAAgBA,EAAU,MAElCQ,KAAKO,KAAKf,EAAU,MAAS,MAAO,GAAG,EAGhD,IAAMgB,EAAkBxB,EAAOL,IAAK8B,IAK5BC,EAAY,MAJPJ,EAAaG,EAAM1D,EAAI,GAAG,EAIL,MAHrBuD,EAAaG,EAAME,EAAI,GAAG,EAGS,MAFnCL,EAAaG,EAAMG,EAAI,GAAG,EAIrC,OAAIF,GAAa,IAAM,MAA2B,MAAQ,GAArBA,EACD,IAA7BV,KAAKO,IAAIG,EAAW,EAAI,CAAC,EAAU,EAC5C,CAAC,EAEKG,EAAiBL,EAAgBM,OAAO,CAACC,EAAKC,IAAMhB,KAAKe,IAAIA,EAAKC,CAAC,EAAG,CAAC,CAAC,EACxEC,EAAeT,EAAgBM,OAAO,CAACC,EAAKC,IAAMhB,KAAKkB,IAAIH,EAAKC,CAAC,EAAG,GAAG,EAEvEG,EAAgBX,EAAgBY,QAAQP,CAAc,EACtDQ,EAAeb,EAAgBY,QAAQH,CAAY,EAEnDK,EAAgBtC,EAAOmC,GACvBI,EAAevC,EAAOqC,GAE5B,MAAO,CACL,IAAI9C,EAAM+C,EAAcvE,EAAGuE,EAAcX,EAAGW,EAAcV,EAAGU,EAAc7D,CAAC,EAC5E,IAAIc,EAAMgD,EAAaxE,EAAGwE,EAAaZ,EAAGY,EAAaX,EAAGW,EAAa9D,CAAC,EAE5E,EAEA+D,mBAAqB,CAACC,EAAmBC,KACvC,MAAMC,EAAgBD,EAAWjE,EAAI,IAC/BmE,EAAgB,EAAID,EAE1B,IAEME,EAFW,CAAC,IAAK,IAAK,KAEPlD,IAAKrB,GAAMmE,EAAWnE,GAAKsE,EAAgBF,EAAWpE,GAAKqE,CAAa,EAE7F,OAAO,IAAIpD,EAAM,GAAGsD,CAAG,CACzB,EAEA9E,EAAI,EACJ4D,EAAI,EACJC,EAAI,EACJnD,EAAI,EAEJqE,YAAYrE,EAAqBmD,EAAYtD,EAAYyE,GACvD,GAAyB,IAArBC,UAAUjE,QACK,UAAb,OAAON,GAA2B,MAATA,EAAE,GAAY,CACzC8B,IAAI0C,EAAMxE,EAEV,KAEmB,KAFGwE,EAAH,IAAfA,EAAIlE,OAAoB,IAAMkE,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAE/EA,GAAIlE,QAA+B,IAAfkE,EAAIlE,SAC1BmE,KAAKnF,EAAIoF,SAASF,EAAI,GAAKA,EAAI,GAAI,EAAE,EACrCC,KAAKvB,EAAIwB,SAASF,EAAI,GAAKA,EAAI,GAAI,EAAE,EACrCC,KAAKtB,EAAIuB,SAASF,EAAI,GAAKA,EAAI,GAAI,EAAE,EAElB,IAAfA,EAAIlE,OAAcmE,KAAKzE,EAAI0E,SAASF,EAAI,GAAKA,EAAI,GAAI,EAAE,EACtDC,KAAKzE,EAAI,KAIlB,MAGuB,IAArBuE,UAAUjE,QAAqC,IAArBiE,UAAUjE,SAChCqE,EAAa,MAALL,EAAY,IAAMA,EAEf,UAAb,OAAOtE,GAA+B,UAAb,OAAOmD,GAA+B,UAAb,OAAOtD,IAC3D4E,KAAKnF,EAAIU,EACTyE,KAAKvB,EAAIC,EACTsB,KAAKtB,EAAItD,GAGX4E,KAAKzE,EAAI2E,EAEb,CAEAC,oBAAsB,KACpB,GAAM,CAAEtF,EAAAA,EAAG4D,EAAAA,EAAGC,EAAAA,CAAE,EAAIsB,KAEpB,MAAMI,EAAOnE,EAAAE,QAAOkE,QAAQxF,EAAG4D,EAAGC,CAAC,EAEnCrB,IAAIiD,EAAiB,IACjBC,EAAmB,GAYvB,OAVAlE,EAAMM,eAAe6D,QAASC,IAC5B,IAAMC,EAAOD,EAAW/D,MAClBiE,EAAS1E,EAAAE,QAAOyE,SAASR,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIM,EAAK,GAAIA,EAAK,GAAIA,EAAK,EAAE,EAE/EC,EAASL,IACXA,EAAiBK,EACjBJ,EAAmBE,EAAW7D,KAElC,CAAC,EAEM2D,CACT,EAEAZ,UACE,GAAM,CAAE9E,EAAAA,EAAG4D,EAAAA,EAAGC,EAAAA,CAAE,EAAIsB,KAEpB,MAAO,CAACnF,EAAG4D,EAAGC,EAChB,CAEAmC,WACE,GAAM,CAAEhG,EAAAA,EAAG4D,EAAAA,EAAGC,EAAAA,EAAGnD,EAAAA,CAAE,EAAIyE,KAEvB,MAAO,CAACnF,EAAG4D,EAAGC,EAAGnD,EACnB,CAEAuF,QACE,GAAM,CAAEjG,EAAAA,EAAG4D,EAAAA,EAAGC,EAAAA,CAAE,EAAIsB,KAIpB,aAFY,CAACnF,EAAG4D,EAAGC,GAAGjC,IAAKC,GAAUoB,KAAKiD,MAAMrE,CAAK,CAAC,EAEpCsE,KAAK,IAAI,IAC7B,CAEAC,SACE,GAAM,CAAEpG,EAAAA,EAAG4D,EAAAA,EAAGC,EAAAA,EAAGnD,EAAAA,CAAE,EAAIyE,KAEjBa,EAAO,CAAChG,EAAG4D,EAAGC,GAAGjC,IAAKC,GAAUoB,KAAKiD,MAAMrE,CAAK,CAAC,EAGvD,OAFAmE,EAAKrD,MAAK,EAAApB,EAAA2E,OAAMxF,EAAI,IAAK,CAAC,CAAC,UAEZsF,EAAKG,KAAK,IAAI,IAC/B,CAEQjB,IAAOrD,IAAmB,IAAMoB,KAAKiD,MAAMrE,CAAK,EAAEwE,SAAS,EAAE,GAAGC,MAAM,CAAC,CAAC,EAEhFC,SACE,GAAM,CAAEvG,EAAAA,EAAG4D,EAAAA,EAAGC,EAAAA,EAAGqB,IAAAA,CAAI,EAAIC,KAEzB,MAAO,IAAMD,EAAIlF,CAAC,EAAIkF,EAAItB,CAAC,EAAIsB,EAAIrB,CAAC,CACtC,CAEA2C,SACE,GAAM,CAAExG,EAAAA,EAAG4D,EAAAA,EAAGC,EAAAA,EAAGnD,EAAAA,EAAGwE,IAAAA,CAAI,EAAIC,KAE5B,MAAO,IAAMD,EAAIlF,CAAC,EAAIkF,EAAItB,CAAC,EAAIsB,EAAIrB,CAAC,EAAIqB,EAAIxE,CAAC,CAC/C,CAEQ+F,OAAS,KACf,GAAM,CAAEzG,EAAAA,EAAG4D,EAAAA,EAAGC,EAAAA,CAAE,EAAIsB,KAEduB,EAAK1G,EAAI,IACT2G,EAAK/C,EAAI,IACTgD,EAAK/C,EAAI,IAETG,EAAMf,KAAKe,IAAI0C,EAAIC,EAAIC,CAAE,EACzBzC,EAAMlB,KAAKkB,IAAIuC,EAAIC,EAAIC,CAAE,EACzBC,EAAQ7C,EAAMG,EAEpB3B,IAAIsE,EAAKC,EAAWC,EAsBpB,OAnBiBF,EAAH,GAAVD,EAAmB,EACdH,IAAO1C,GAAa2C,EAAKC,GAAMC,EAAS,EACxCF,IAAO3C,GAAY4C,EAAKF,GAAMG,EAAQ,GACnCH,EAAKC,GAAME,EAAQ,GAE/BC,EAAM7D,KAAKiD,MAAY,GAANY,CAAQ,GAEf,IAAGA,GAAO,KAGpBC,GAAa/C,EAAMG,GAAO,EAGT6C,EAAH,GAAVH,EAA0B,EACZA,GAAS,EAAI5D,KAAKgE,IAAI,EAAIF,EAAY,CAAC,GAEzDA,GAAY,EAAAxF,EAAA2E,OAAkB,IAAZa,EAAiB,CAAC,EACpCC,GAAa,EAAAzF,EAAA2E,OAAmB,IAAbc,EAAkB,CAAC,EAE/B,CAACF,EAAKE,EAAYD,EAC3B,EAEAG,QACE,GAAM,CAACJ,EAAKE,EAAYD,GAAa5B,KAAKsB,OAAO,EAEjD,aAAcK,MAAQE,OAAgBD,KACxC,CAEAI,SACE,IAAQzG,EAAMyE,KAANzE,KAEF,CAACoG,EAAKE,EAAYD,GAAa5B,KAAKsB,OAAO,EAIjD,cAAeK,MAAQE,OAAgBD,QAFzB,EAAAxF,EAAA2E,OAAMxF,EAAI,IAAK,CAAC,IAGhC,CACF,CAACI,EAAAQ,QAAAE,C,+JCp0BoB4F,EAOnB5B,eAAexF,EAAW4D,EAAWC,GACnC,GAAM,CAACwD,EAAGC,EAAGC,GAAKH,EAAOI,QAAQxH,EAAG4D,EAAGC,CAAC,EACxC,OAAOuD,EAAOK,QAAQJ,EAAGC,EAAGC,CAAC,CAC/B,CAOAC,eAAexH,EAAW4D,EAAWC,GA4BnC,OA1BAD,GAAQ,IACRC,GAAQ,IAEA,QAJR7D,GAAQ,KAKNA,EAAIiD,KAAKO,KAAKxD,EAAI,MAAS,MAAO,GAAG,EAErCA,GAAQ,MAEF,OAAJ4D,EACFA,EAAIX,KAAKO,KAAKI,EAAI,MAAS,MAAO,GAAG,EAErCA,GAAQ,MAEF,OAAJC,EACFA,EAAIZ,KAAKO,KAAKK,EAAI,MAAS,MAAO,GAAG,EAErCA,GAAQ,MAUH,CAHO,UAJd7D,GAAQ,KAIsB,UAH9B4D,GAAQ,KAGsC,UAF9CC,GAAQ,KAGM,SAAJ7D,EAAoB,SAAJ4D,EAAoB,QAAJC,EAC5B,SAAJ7D,EAAoB,QAAJ4D,EAAmB,SAAJC,EAE3C,CAOA4D,eAAeJ,EAAWC,EAAWC,GAQnCD,GAJmB,IAKnBC,GAJmB,QAOjBF,EADM,SAJRA,GAJmB,QASbpE,KAAKO,IAAI6D,EAAG,EAAI,CAAC,EAEjB,MAAQA,EAAI,GAAK,IAXvB,IAwBMK,EAAI,KAVRJ,EADM,QAAJA,EACErE,KAAKO,IAAI8D,EAAG,EAAI,CAAC,EAEjB,MAAQA,EAAI,GAAK,KAQH,GAGpB,MAAO,CAACI,EAFE,KAAOL,EAAIC,GACX,KAAOA,GAPfC,EADM,QAAJA,EACEtE,KAAKO,IAAI+D,EAAG,EAAI,CAAC,EAEjB,MAAQA,EAAI,GAAK,MAOzB,CAUAxB,gBAAgB4B,EAAYC,EAAYC,EAAYC,EAAYC,EAAYC,GAE1D,SAAVC,EAAoBC,GACxB,OAAQ,IAAMA,GAAQ,EAAIjF,KAAKkF,GACjC,CACgB,SAAVC,EAAoBC,GACxB,OAAQ,EAAIpF,KAAKkF,GAAKE,EAAO,GAC/B,CALA,IAQMC,GAAQX,EAAKG,GAAM,EAGnBS,GAFKtF,KAAKC,KAAKD,KAAKO,IAAIoE,EAAI,CAAC,EAAI3E,KAAKO,IAAIqE,EAAI,CAAC,CAAC,EAC3C5E,KAAKC,KAAKD,KAAKO,IAAIuE,EAAI,CAAC,EAAI9E,KAAKO,IAAIwE,EAAI,CAAC,CAAC,GAC7B,EACnBpE,GAAK,EAAIX,KAAKC,KAAKD,KAAKO,IAAI+E,EAAM,CAAC,GAAKtF,KAAKO,IAAI+E,EAAM,CAAC,EAAItF,KAAKO,IAAI,GAAI,CAAC,EAAE,GAAK,EAEjFgF,EAAMZ,GAAM,EAAIhE,GAChB6E,EAAMV,GAAM,EAAInE,GAEhB8E,EAAMzF,KAAKC,KAAKD,KAAKO,IAAIgF,EAAK,CAAC,EAAIvF,KAAKO,IAAIqE,EAAI,CAAC,CAAC,EAClDc,EAAM1F,KAAKC,KAAKD,KAAKO,IAAIiF,EAAK,CAAC,EAAIxF,KAAKO,IAAIwE,EAAI,CAAC,CAAC,EAElDY,GAASF,EAAMC,GAAO,EAE5BnG,IAAIqG,EAAMZ,EAAQhF,KAAK6F,MAAMjB,EAAIW,CAAG,CAAC,EAKjCO,GAJAF,EAAM,IACRA,GAAY,KAGJZ,EAAQhF,KAAK6F,MAAMd,EAAIS,CAAG,CAAC,GACjCM,EAAM,IACRA,GAAY,KAGRC,EAA8B,IAAtB/F,KAAKgE,IAAI4B,EAAME,CAAG,GAAWF,EAAME,EAAM,KAAO,GAAKF,EAAME,GAAO,EAE1E5I,EACJ,EACA,IAAO8C,KAAKgG,IAAIb,EAAQY,EAAQ,EAAE,CAAC,EACnC,IAAO/F,KAAKgG,IAAIb,EAAQ,EAAIY,CAAK,CAAC,EAClC,IAAO/F,KAAKgG,IAAIb,EAAQ,EAAIY,EAAQ,CAAC,CAAC,EACtC,GAAM/F,KAAKgG,IAAIb,EAAQ,EAAIY,EAAQ,EAAE,CAAC,EAExCxG,IAAI0G,EAAUH,EAAMF,EACI,IAApB5F,KAAKgE,IAAIiC,CAAO,IACdH,GAAOF,EACTK,GAAW,IAEXA,GAAW,KAITC,EAAUrB,EAAKH,EACfyB,EAAUT,EAAMD,EAEtBQ,EAAU,EAAIjG,KAAKC,KAAKwF,EAAMC,CAAG,EAAI1F,KAAKoG,IAAIjB,EAAQc,CAAO,EAAI,CAAC,EAE5DI,EAAK,EAAK,KAAQrG,KAAKO,IAAI8E,EAAO,GAAI,CAAC,EAAKrF,KAAKC,KAAK,GAAKD,KAAKO,IAAI8E,EAAO,GAAI,CAAC,CAAC,EACjFiB,EAAK,EAAI,KAAQX,EACjBY,EAAK,EAAI,KAAQZ,EAAQzI,EAEzBsJ,EAAU,GAAKxG,KAAKyG,IAAI,CAACzG,KAAKO,KAAKwF,EAAQ,KAAO,GAAI,CAAC,CAAC,EAExDW,EAAK,EADA,EAAI1G,KAAKC,KAAKD,KAAKO,IAAIoF,EAAO,CAAC,GAAK3F,KAAKO,IAAIoF,EAAO,CAAC,EAAI3F,KAAKO,IAAI,GAAI,CAAC,EAAE,GACnEP,KAAKoG,IAAI,EAAIjB,EAAQqB,CAAO,CAAC,EAa9C,OAPexG,KAAKC,KAClBD,KAAKO,IAAI2F,EAAgBG,EAAK,CAAC,EAC7BrG,KAAKO,IAAI4F,EAAgBG,EAAK,CAAC,EAC/BtG,KAAKO,IAAI0F,EAAgBM,EAAK,CAAC,EACzBJ,EAAgBG,EAAtBI,GAA8BT,EAAgBM,EAClD,CAGF,CACF,CAAC1I,EAAAQ,QAAA8F,C,wGCxEAtG,EAAAQ,4BA5GCyD,cACE,OAAO,IAAI6E,MAAMzE,KAA4B,CAC3C0E,IAAK,CAACC,EAAQ/H,KACZ,IAAMgI,EAAQD,EAAOE,aAAajI,EAAKsE,SAAS,GAEhD,OAAI0D,EAAcA,EAAMlI,MAEjBiI,EAAO/H,EAChB,CACF,CAAC,CACH,CACF,EAaEgD,YAAYkF,EAAwDC,GAClEC,MAAM,EAENhF,KAAKiF,WAAaH,EAClB9E,KAAK6E,aAAe,GACpB7E,KAAKkF,4BAA8B,GAEnCJ,EAAatE,QAASoE,IACpB5E,KAAK6E,aAAaD,EAAMhI,MAAQgI,CAClC,CAAC,EAEGG,IAAU/E,KAAKmF,SAAWJ,GAE9B/E,KAAKoF,QAAQ,CACf,CAEAC,eAAiB,CAACzI,EAAc0I,KAC9B,IAMMC,EANA,CAAEV,aAAAA,EAAcK,4BAAAA,EAA6BH,SAAAA,CAAS,EAAI/E,KAE1D4E,EAAQC,EAAajI,GAEtBgI,IAECW,EAAuBL,EAA4BtI,GAErDmI,GAAUH,EAAMY,oBAAoB,SAAUT,CAAQ,EACtDQ,GAAsBX,EAAMY,oBAAoB,SAAUD,CAAoB,EAElFX,EAAMa,iBAAiB,SAAUH,CAAuB,EAEpDP,GAAUH,EAAMa,iBAAiB,SAAUV,CAAQ,EAEvDG,EAA4BtI,GAAQ0I,EACtC,EAEAI,gCAAkC,KAChC,KAAM,CAAET,WAAAA,EAAYC,4BAAAA,CAA4B,EAAIlF,KAEpDiF,EAAWzE,QAASoE,IACZW,EAAuBL,EAA4BN,EAAMhI,MAE3D2I,GAAsBA,EAAqB,CACjD,CAAC,CACH,EAEAI,KAAO,KACL,IAAQV,EAAejF,KAAfiF,cAEFW,EAAgBX,EAAWrG,OAAO,CAACiH,EAAejB,KACnC,SAAfA,EAAMkB,OAAiBD,EAAcjB,EAAMhI,MAAQgI,EAAMlI,OAEtDmJ,GACN,EAA+B,EAElCE,aAAaC,QAAQ,UAAWC,KAAKC,UAAUN,CAAa,CAAC,CAC/D,EAEAR,QAAU,KACR,IAAQH,EAAejF,KAAfiF,cACFW,EAAgBG,aAAaI,QAAQ,SAAS,EAEpD,GAAKP,EAEL,IACE,MAAMC,EAAgBI,KAAKG,MAAMR,CAAa,EAE9CX,EAAWzE,QAASoE,IACdiB,EAAcjB,EAAMhI,QAAOgI,EAAMlI,MAAQmJ,EAAcjB,EAAMhI,MACnE,CAAC,CAGH,CAFE,MAAO9B,GACPiL,aAAaM,WAAW,SAAS,CACnC,CACF,EAEAlB,aAAamB,GACX,KAAM,CAAErB,WAAAA,EAAYF,SAAAA,CAAS,EAAI/E,KAEjCiF,EAAWzE,QAASoE,IACdG,GAAUH,EAAMY,oBAAoB,SAAUT,CAAQ,EAC1DH,EAAMa,iBAAiB,SAAUa,CAAW,CAC9C,CAAC,EAEDtG,KAAK+E,SAAWuB,CAClB,CACF,C,wGC9GA,IAAAlK,EAAAf,EAAA,WAAA,EAyLCM,EAAAQ,cAtKCyD,YAAY2G,EAAmCC,GAC7C,IAAMC,EAAQ,IAAIC,MAYZC,GAVNF,EAAMhB,iBAAiB,OAAQ,KAC7B,OAAOzF,KAAK4G,YACZ5G,KAAK6G,kBAAkB,CACzB,CAAC,EAEDL,EAAgBf,iBAAiB,SAAUzF,KAAK8G,gBAAgB,EAEhE9G,KAAK+G,QAAUR,EACfvG,KAAKgH,SAAWR,EAEAD,EAAeU,WAAW,IAAI,GAC9C,GAAI,CAACN,EAAS,KAAM,gDAEpB3G,KAAK2G,QAAUA,EACf3G,KAAKyG,MAAQA,EAEPS,EAAiB,IAAIC,gBAAgB,EAAG,CAAC,EACzCC,EAAkBF,EAAeD,WAAW,IAAI,EAEtD,GAAI,CAACG,EAAiB,KAAM,kDAE5BpH,KAAKkH,eAAiBA,EACtBlH,KAAKoH,gBAAkBA,CACzB,CAEAN,iBAAmB,KACjB,GAAM,CAAEE,SAAAA,EAAUP,MAAAA,CAAM,EAAIzG,KAI5B,GAFAA,KAAKqH,cAAe,EAAAjL,EAAAkL,OAAM,4BAA6B,CAAA,CAAI,EAEvD,CAACN,EAASO,MAAO,KAAM,2DAE3Bd,EAAMe,IAAMC,IAAIC,gBAAgBV,EAASO,MAAM,EAAE,CACnD,EAEAI,oBAAqB,EAAAvL,EAAAwL,UAAUC,IAC7B,KAAM,CAAEd,QAAAA,EAASJ,QAAAA,EAASO,eAAAA,EAAgBE,gBAAAA,EAAiBX,MAAAA,CAAM,EAAIzG,KACrE,GAAM,CAAE8H,QAAAA,EAASC,gBAAAA,CAAgB,EAAI/H,KAErC3C,GAAI,CAAE2K,MAAAA,EAAOC,OAAAA,CAAO,EAAIxB,EAExBuB,EAAQA,GAAS,IACjBC,EAASA,GAAU,IAEnBD,EAAQjB,EAAQiB,MAAQd,EAAec,MAAQA,GAAS,IACxDC,EAASlB,EAAQkB,OAASf,EAAee,OAASA,GAAU,IAE5D,IAAMC,EAAQC,IACZ,IAAQd,EAAiBrH,KAAjBqH,gBAEJA,GAAcA,EAAa,EAE/B,OAAOrH,KAAKqH,aAEZe,sBAAsB,KACpBA,sBAAsB,KACpB,IAAMC,EAAaF,GAAaxB,EAAQ2B,aAAa,EAAG,EAAGN,EAAOC,CAAM,EAAEM,KACpEzL,EAAS,GAEf,IAAKO,IAAInC,EAAI,EAAGA,EAAImN,EAAWxM,OAAQX,GAAK,EAAG,CAC7C,IAAML,EAAIwN,EAAWnN,EAAI,GACnBuD,EAAI4J,EAAWnN,EAAI,GACnBwD,EAAI2J,EAAWnN,EAAI,GACnBK,EAAI8M,EAAWnN,EAAI,GAEzB4B,EAAOU,KAAK,CAAE3C,EAAAA,EAAG4D,EAAAA,EAAGC,EAAAA,EAAGnD,EAAAA,CAAE,CAAC,CAC5B,CAEAsM,EAAQ/K,CAAM,CAChB,CAAC,CACH,CAAC,CACH,EAUA,GARA6J,EAAQ6B,UAAU,EAAG,EAAGR,EAAOC,CAAM,GAEjC,CAACjI,KAAK4G,cAAgB,EAAAxK,EAAAqM,OAAMX,CAAO,IAAK,EAAA1L,EAAAqM,OAAMV,CAAe,IAC/DpB,EAAQ+B,UAAUjC,EAAO,EAAG,CAAC,EAG1BzG,KAAK4G,cAAa5G,KAAK4G,YAAcD,EAAQ2B,aAAa,EAAG,EAAGN,EAAOC,CAAM,EAAEM,OAEhF,EAAAnM,EAAAqM,OAAMX,CAAO,IAAK,EAAA1L,EAAAqM,OAAMV,CAAe,EAAG,OAAOG,EAAKlI,KAAK4G,WAAW,EAE1E,IAAM+B,EAAe,IAAIC,kBAAkB5I,KAAK4G,WAAW,EAE3D,GAAI,EAAC,EAAAxK,EAAAqM,OAAMX,CAAO,EAAG,CACnB,IAAKzK,IAAInC,EAAI,EAAGA,EAAIyN,EAAa9M,OAAQX,GAAK,EAAGyN,EAAazN,EAAI,IAAM4M,EAExE,IAAI,EAAA1L,EAAAqM,OAAMV,CAAe,EAEvB,OADApB,EAAQkC,aAAa,IAAIC,UAAUH,EAAcX,CAAK,EAAG,EAAG,CAAC,EACtDE,EAAKS,CAAY,CAE5B,CAEA,OAAK,EAAAvM,EAAAqM,OAAMV,CAAe,EAA1B,KAAA,GACEpB,EAAQoC,UAAahB,EAA0B9G,OAAO,EACtD0F,EAAQqC,SAAS,EAAG,EAAGhB,EAAOC,CAAM,GAEhC,EAAA7L,EAAAqM,OAAMX,CAAO,EACfnB,EAAQ+B,UAAUjC,EAAO,EAAG,CAAC,GAI/BW,EAAgBoB,UAAU,EAAG,EAAGR,EAAOC,CAAM,EAC7Cb,EAAgByB,aAAa,IAAIC,UAAUH,EAAcX,CAAK,EAAG,EAAG,CAAC,EACrErB,EAAQ+B,UAAUxB,EAAgB,EAAG,CAAC,GAC/BgB,EAAK,EAEhB,CAAC,EAEDrB,kBAAoB,KAClB7G,KAAKlD,OAAS,IAAImM,QAASpB,IACzB7H,KAAK2H,mBAAmBE,CAAO,CACjC,CAAC,CACH,EAEAqB,iBAAmB,KACjBlJ,KAAKqH,cAAe,EAAAjL,EAAAkL,OAAM,2BAA4B,CAAA,CAAI,EAE1DtH,KAAKyG,MAAMe,IAAM,eACnB,EAEA2B,YAAcC,MAAOC,EAAgBC,EAAgBtB,EAAeC,KAClE,IAAQlB,EAAY/G,KAAZ+G,WAER,GAAI,CAAC/G,KAAKlD,OAAQ,MAAO,GAEzBO,IAAIP,EACAyM,EAAiB,GAErB,KAAOzM,IAAWkD,KAAKlD,QACrBA,EAASkD,KAAKlD,OACdyM,EAAiBC,MAAM1M,EAGzB,IAAM2M,EAAe,GAErB,IAAKpM,IAAI8E,EAAImH,EAAQnH,EAAImH,EAASrB,EAAQ9F,CAAC,GACzC,IAAK9E,IAAI6E,EAAImH,EAAQnH,EAAImH,EAASrB,EAAO9F,CAAC,GAAI,CAC5C,IAAMhH,EAAIiH,EAAI4E,EAAQiB,MAAQ9F,EAE1BhH,EAAI,GAAKA,EAAIqO,EAAe1N,QAEhC4N,EAAajM,KAAK+L,EAAerO,EAAE,CACrC,CAGF,OAAOuO,CACT,EAEAC,mBAAsBnL,IACJ,IAAZA,EAAMhD,EAAS,OAAOyE,KAAK+H,gBAC1B/H,KAAK+H,gBAAkBxJ,EAE5ByB,KAAK6G,kBAAkB,CACzB,EAEA8C,WAAc7B,IACI,IAAZA,EAAe,OAAO9H,KAAK8H,QAC1B9H,KAAK8H,QAAUA,EAEpB9H,KAAK6G,kBAAkB,CACzB,CACF,C,qHCxLA,IAAAzK,EAAAf,EAAA,WAAA,EAmFCM,EAAAQ,cAvECyD,YAAYgK,GACV5J,KAAK6J,mBAAqB,GAC1B7J,KAAK8J,qBAAuB,GAE5BF,EAAapJ,QAASuJ,IACpB,MAAMC,EAAcD,EAAYE,cAAc,OAAO,EAC/CC,EAAoBH,EAAYE,cAAc,aAAa,EACjE,IAAME,EAAoBJ,EAAYE,cAAc,aAAa,EAC3DG,EAAaL,EAAYE,cAAc,OAAO,EAU9CI,GARFD,GACFA,EAAW3E,iBAAiB,QAAU3K,IACpCA,EAAEwP,eAAe,EACjBC,UAAUC,UAAUC,UAAUT,EAAYtN,KAAK,GAC/C,EAAAN,EAAAkL,OAAO,UAAS0C,EAAYtN,KAAO,CACrC,CAAC,EAGwB,IAAI+H,MAAMuF,EAAa,CAChDU,IAAK,CAAC/F,EAAQ/H,EAAMF,KACL,UAATE,IAAkBsN,EAAkBS,MAAM5C,gBAAkBrL,GAGhEiI,EAAO/H,GAAQF,EACR,CAAA,EAEX,CAAC,GAEKE,EAAOoN,EAAYpN,KAAKgO,MAAM,YAAY,EAAE,GAC5CC,EAAO,CACXb,YAAaK,EACbH,kBAAAA,EACAC,kBAAAA,CACF,EAEAnK,KAAK8J,qBAAqBlN,GAAQiO,EAClC7K,KAAK6J,mBAAmBrM,KAAKqN,CAAI,CACnC,CAAC,CACH,CAEAnB,mBAAsBnL,IACpB,IAAQsL,EAAuB7J,KAAvB6J,sBAER,MAAM9B,EAAkBxJ,EAAM0C,OAAO,EAErC4I,EAAmBrJ,QAASqK,IAC1BA,EAAKV,kBAAkBQ,MAAM5C,gBAAkBA,CACjD,CAAC,CACH,EAEA+C,UAAY,CAAChF,EAAcvH,EAAcxB,KACvC,IAAQ+M,EAAyB9J,KAAzB8J,wBACFiB,EAAehO,EAAQgO,aACvBC,EAAmBjO,EAAQiO,iBAEjC3N,IAAI4N,EAAe,CAAA,EAKfvO,GAJqB,WAArBsO,EAA+BC,EAAe,CAAA,EACpB,UAArBD,GACY,MAAZzM,EAAMhD,IAAW0P,EAAe,CAAA,GAE7B,IAOZ,GALqB,QAAjBF,IAAwBrO,EAAQuO,EAAe1M,EAAM0C,OAAO,EAAI1C,EAAMuC,MAAM,GAC3D,QAAjBiK,IAAwBrO,EAAQuO,EAAe1M,EAAM8C,OAAO,EAAI9C,EAAM6C,OAAO,GAC5D,QAAjB2J,IAAwBrO,EAAQuO,EAAe1M,EAAMyD,OAAO,EAAIzD,EAAMwD,MAAM,GAG5E,EAFwBrF,EAAP,QAAjBqO,EAAgCxM,EAAM4B,oBAAoB,EAEzDzD,GAAO,KAAO,gCAA+BqO,EAAa7J,SAAS,EAExE4I,EAAqBhE,GAAMkE,YAAYtN,MAAQA,CACjD,CACF,C,qHC6CCf,EAAAQ,cA5HS+O,aAAe,CAAA,EACfC,cAAgB,CAAEjJ,EAAG,EAAGC,EAAG,CAAE,EAC7BiJ,YAAc,CAAElJ,EAAG,EAAGC,EAAG,CAAE,EAanCvC,YAAYyL,EAA4BC,EAAkCvG,GACxEuG,EAAcC,YAAcvL,KAAKwL,aACjCF,EAAcG,UAAYzL,KAAKwL,aAC/BF,EAAcI,YAAc1L,KAAKwL,aACjCF,EAAcK,aAAe3L,KAAKwL,aAElCF,EAAcM,aAAe5L,KAAK6L,YAClCP,EAAcQ,WAAa9L,KAAK6L,YAChCP,EAAcS,YAAc/L,KAAK6L,YAEjC7L,KAAKgM,QAAUX,EACfrL,KAAK2E,OAAS2G,EAEVvG,IAAU/E,KAAKiM,eAAiBlH,EACtC,CAEA8G,YAAe/Q,IACb,IAKgBoR,EAAYC,EAAepH,EAQrCqH,EAbA,CAAEC,cAAAA,EAAeC,eAAAA,EAAgBxG,KAAAA,CAAK,EAAIhL,EAEnB,IAAzBuR,EAAcxQ,SACbf,EAAEwP,eAAe,EAEhB,CAAE3F,OAAAA,EAAQuH,WAAAA,EAAYC,cAAAA,EAAepH,SAAAA,CAAS,EAAI/E,KAElDuM,EAAmB,aAATzG,EAAsBwG,EAAiBD,EACjDG,EAAe7H,EAAO8H,sBAAsB,EAE5CC,EAAK5O,KAAKiD,MAAMwL,EAAQ,GAAGI,QAAUH,EAAaI,IAAI,EACtDC,EAAK/O,KAAKiD,MAAMwL,EAAQ,GAAGO,QAAUN,EAAaO,GAAG,EAErDX,EAAKtO,KAAKiD,MAAMwL,EAAQ,GAAGI,QAAUH,EAAaI,IAAI,EACtDI,EAAKlP,KAAKiD,MAAMwL,EAAQ,GAAGO,QAAUN,EAAaO,GAAG,EAE3D/M,KAAKmL,cAAgB,CAAEjJ,EAAGwK,EAAIvK,EAAG0K,CAAG,EACpC7M,KAAKoL,YAAc,CAAElJ,EAAGkK,EAAIjK,EAAG6K,CAAG,EAElCd,EAAW,EACXC,EAAc,EAEVpH,IAAUA,EAAS,CACzB,EAEAyG,aAAgB1Q,IACd,GAAM,CAAEgL,KAAAA,EAAMmH,OAAAA,EAAQN,QAAAA,EAASG,QAAAA,CAAQ,EAAIhS,EACrC,CAAE6J,OAAAA,EAAQuG,aAAAA,EAAcgB,WAAAA,EAAYC,cAAAA,EAAepH,SAAAA,CAAS,EAAI/E,KAEvD,OAAXiN,GAA8B,IAAXA,IAEjBT,EAAe7H,EAAO8H,sBAAsB,EAC5CvK,EAAIpE,KAAKiD,MAAM4L,EAAUH,EAAaI,IAAI,EAC1CzK,EAAIrE,KAAKiD,MAAM+L,EAAUN,EAAaO,GAAG,EAElC,cAATjH,GACF9F,KAAKmL,cAAgB,CAAEjJ,EAAAA,EAAGC,EAAAA,CAAE,EAC5BnC,KAAKkL,aAAe,CAAA,GAIjBA,IAEQ,cAATpF,GAAiC,YAATA,GAA+B,eAATA,IAChD9F,KAAKoL,YAAc,CAAElJ,EAAAA,EAAGC,EAAAA,CAAE,EAE1B+J,EAAW,EACXC,EAAc,EAEVpH,GAAUA,EAAS,GAGZ,YAATe,GAA+B,eAATA,IAAuB9F,KAAKkL,aAAe,CAAA,IACvE,EAEAe,mBAAmBlH,GACjB/E,KAAK+E,SAAWA,CAClB,CAEAmH,WAAa,KACX,GAAM,CAAEf,cAAAA,EAAeC,YAAAA,EAAazG,OAAAA,CAAO,EAAI3E,KAEzC+M,EAAMjP,KAAKe,IAAIf,KAAKkB,IAAImM,EAAchJ,EAAGiJ,EAAYjJ,CAAC,EAAG,CAAC,EAC1DyK,EAAO9O,KAAKe,IAAIf,KAAKkB,IAAImM,EAAcjJ,EAAGkJ,EAAYlJ,CAAC,EAAG,CAAC,EAC3DgL,EAASpP,KAAKkB,IAAIlB,KAAKe,IAAIsM,EAAchJ,EAAGiJ,EAAYjJ,CAAC,EAAGwC,EAAOsD,MAAM,EACzEkF,EAAQrP,KAAKkB,IAAIlB,KAAKe,IAAIsM,EAAcjJ,EAAGkJ,EAAYlJ,CAAC,EAAGyC,EAAOqD,KAAK,EAEvEA,EAAQlK,KAAKe,IAAIsO,EAAQP,EAAM,CAAC,EAChC3E,EAASnK,KAAKe,IAAIqO,EAASH,EAAK,CAAC,EAEvC/M,KAAK6K,KAAO,CAAEkC,IAAAA,EAAKH,KAAAA,EAAMM,OAAAA,EAAQC,MAAAA,EAAOnF,MAAAA,EAAOC,OAAAA,CAAO,CACxD,EAEAkE,cAAgB,KACd,IAIaS,EAAM5E,EAAOC,EAJpB,CAAE+D,QAAAA,EAASnB,KAAAA,CAAK,EAAI7K,KAErB6K,IAEC,CAAEkC,IAAAA,EAAKH,KAAAA,EAAM5E,MAAAA,EAAOC,OAAAA,CAAO,EAAI4C,EAIrCmB,EAAQrB,MAAMyC,eAFSL,aAAeH,cAAiB5E,eAAmBC,OAG5E,EAEAoF,MAAQ,KACN,IAAQrB,EAAYhM,KAAZgM,WAERA,EAAQrB,MAAMyC,QAAU,GAExB,OAAOpN,KAAK6K,IACd,CACF,C,yIC3HElP,EAAAiM,SAPsB,SAAC0F,GAAgDjQ,IAAjBkQ,EAAO,EAAAzN,UAAAjE,QAAA2R,KAAAA,IAAA1N,UAAA,GAAAA,UAAA,GAAG,GAC5D2N,EAEJ,OAAO,WAAoB,IAAA,IAAAC,EAAA5N,UAAAjE,OAAhB8R,EAAI,IAAApR,MAAAmR,CAAA,EAAAE,EAAA,EAAAA,EAAAF,EAAAE,CAAA,GAAJD,EAAIC,GAAA9N,UAAA8N,GACbC,aAAaJ,CAAK,EAClBA,EAAQK,WAAW,IAAMR,EAAKS,M,OAAYJ,CAAI,EAAGJ,CAAO,CAC1D,CACF,EAGwE5R,EAAAoF,MADnD,SAACrE,GAAaW,IAAE2Q,EAAa,EAAAlO,UAAAjE,QAAA2R,KAAAA,IAAA1N,UAAA,GAAAA,UAAA,GAAG,EAAC,MACpD,EAAEhC,KAAKiD,MAAM,EAAErE,EAAS,KAAIsR,EAAgB,EAAK,KAAIA,EAAgB,EAGjCrS,EAAAsS,MADjB,CAACvR,EAAesC,EAAaH,IAChDf,KAAKe,IAAIf,KAAKkB,IAAItC,EAAOmC,CAAG,EAAGG,CAAG,EAwBlCrD,EAAA2L,MAtBmB,SAAC4G,GAAqC7Q,IAApB8Q,EAAO,EAAArO,UAAAjE,QAAA2R,KAAAA,IAAA1N,UAAA,IAAAA,UAAA,GAC5C,MAAMwH,EAAQ8G,SAASC,cAAc,KAAK,EAMpCC,GAJNhH,EAAMiH,YAAcL,EACpB5G,EAAMkH,UAAa,UAAQL,EAAU,GAAK,YAC1C7G,EAAMmH,aAAa,OAAQ,QAAQ,EAEZL,SAASnE,cAAc,kBAAkB,GAEhE,GAAIqE,EAAgB,CAGlB,GAFAA,EAAeI,YAAYpH,CAAK,EAE5B6G,EACF,MAAO,KACL/F,sBAAsB,IAAMkG,EAAeK,YAAYrH,CAAK,CAAC,CAC/D,EAEAwG,WAAW,KACTQ,EAAeK,YAAYrH,CAAK,CAClC,EAAG,IAAI,CAEX,CACF,EAEkE3L,EAAA8M,MAAzC/L,GAAoC,MAATA,C,sCCvCpD,IAAAkS,EAAAC,EAAAxT,EAAA,oBAAA,CAAA,EACAyT,EAAAD,EAAAxT,EAAA,sBAAA,CAAA,EACA0T,EAAAF,EAAAxT,EAAA,sBAAA,CAAA,EACA2T,EAAAH,EAAAxT,EAAA,wBAAA,CAAA,EACA4T,EAAAJ,EAAAxT,EAAA,sBAAA,CAAA,EACAe,EAAAf,EAAA,mBAAA,EAAoD,SAAAwT,EAAA7S,GAAA,OAAAA,GAAAA,EAAAE,WAAAF,EAAA,CAAAG,QAAAH,CAAA,CAAA,CAEpD,SAASkT,IACP,IAAMC,EAAKC,GAAoC7S,MAAM8S,KAAKjB,SAASkB,iBAAiBF,CAAQ,CAAC,EAE7F,MAAMG,EAAcJ,EAAE,UAAU,EAAE,GAClC,IAAMK,EAAcL,EAAE,UAAU,EAAE,GAU5BrK,GARNyK,EAAYE,MAAM,EAClBD,EAAYC,MAAM,EAElBF,EAAY9J,iBAAiB,SAAW3K,IACtCA,EAAEwP,eAAe,EACjBoF,EAAU,CACZ,CAAC,EAEoBP,EAAE,6BAA6B,GAC9CvF,EAAeuF,EAAE,iBAAiB,EAElC5I,EAAiB4I,EAAE,UAAU,EAAE,GAC/B3I,EAAkB2I,EAAE,yBAAyB,EAAE,GAC/CQ,EAAkBR,EAAE,WAAW,EAAE,GAEvC,MAAMpS,EAAU,IAAI+R,EAAA3S,QAAQ2I,CAAY,EAClCiC,EAAU,IAAIgI,EAAA5S,QAAQoK,EAAgBC,CAAe,EACrDoJ,EAAU,IAAIX,EAAA9S,QAAQyN,CAAY,EAClCiG,EAAY,IAAIb,EAAA7S,QAAUwT,EAAiBpJ,CAAc,EAEzDmJ,GAAY,EAAAtT,EAAAwL,UAASwB,UACzB,IAMO0G,EAAWC,EACX3Q,EAAeC,EAPjBwQ,EAAUhF,OAET,CAAEkC,IAAAA,EAAKH,KAAAA,EAAM5E,MAAAA,EAAOC,OAAAA,CAAO,EAAI4H,EAAUhF,KAEzCmF,EAAkBxG,MAAMzC,EAAQoC,YAAYyD,EAAMG,EAAK/E,EAAOC,CAAM,EAEpE,CAAC6H,EAAWC,GAAenB,EAAAzS,QAAMU,cAAcmT,EAAgBjT,CAAO,EACtE,CAACqC,EAAeC,GAAgBuP,EAAAzS,QAAMgC,mBAAmB6R,CAAc,EAE7EJ,EAAQ9E,UAAU,OAAQgF,EAAW/S,CAAO,EAC5C6S,EAAQ9E,UAAU,SAAUiF,EAAahT,CAAO,EAChD6S,EAAQ9E,UAAU,WAAY1L,EAAerC,CAAO,EACpD6S,EAAQ9E,UAAU,UAAWzL,EAActC,CAAO,EACpD,CAAC,EAEDyJ,EAAgBf,iBAAiB,SAAUoK,EAAUxC,KAAK,EAEpD4C,EAAqBd,EAAE,uBAAuB,EAAE,GAChDe,EAAcf,EAAE,oBAAoB,EAAE,GACtCgB,EAAahB,EAAE,kBAAkB,EAAE,GAEzCc,EAAmBxK,iBAAiB,QAAU3K,IAC5CA,EAAEwP,eAAe,EACjBuF,EAAUxC,MAAM,EAChBtG,EAAQmC,iBAAiB,CAC3B,CAAC,EAEDgH,EAAYzK,iBAAiB,QAAU3K,IACrCA,EAAEwP,eAAe,EACjBiF,EAAYE,MAAM,EAClB1S,EAAQ2I,gCAAgC,EACxCgK,EAAU,GACV,EAAAtT,EAAAkL,OAAM,gBAAgB,CACxB,CAAC,EAED6I,EAAW1K,iBAAiB,QAAU3K,IACpCA,EAAEwP,eAAe,EACjBvN,EAAQ4I,KAAK,GACb,EAAAvJ,EAAAkL,OAAM,gBAAgB,CACxB,CAAC,EAEDvK,EAAQsI,eAAe,oBAAqB,KAC1C,IAAM+K,EAAiBrT,EAAQsT,kBAE/BtJ,EAAQ4C,WAAWyG,EAAiB,GAAG,CACzC,CAAC,EAEKE,EAAkC,KACtC,IAAMC,EAAmBxT,EAAQwT,iBAEjClT,IAAI0K,EAAkB,KAKtB,GAHyB,aAArBwI,IAAiCxI,EAAkB,IAAI6G,EAAAzS,QAAM,EAAG,EAAG,EAAG,CAAC,GAGvE,EAFsC4L,EAAjB,kBAArBwI,EAAwD,IAAI3B,EAAAzS,QAAMY,EAAQgL,eAAe,EAExFA,GAAiB,KAAO,qCAAoCwI,EAAiBrP,SAAS,EAE3F6F,EAAQ2C,mBAAmB3B,CAAe,EAC1C6H,EAAQlG,mBAAmB3B,CAAe,EAE1C2H,EAAU,CACZ,EAEA3S,EAAQsI,eAAe,kBAAmBiL,CAA+B,EACzEvT,EAAQsI,eAAe,mBAAoBiL,CAA+B,EAE1EvT,EAAQ2I,gCAAgC,EAExCmK,EAAU5D,eAAiByD,EAC3B3S,EAAQoI,SAAWuK,CACrB,CAEAc,OAAOC,OAAS,IAAMrI,sBAAsB8G,CAAI","file":"bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import Colour from \"./IsThisColourSimilar/Colour.ts\";\r\n\r\nimport Options from \"./Options.ts\";\r\nimport { round } from \"./Util.ts\";\r\n\r\nexport default class Color {\r\n  static squaredValues = [...Array(256).keys()].map((value) => value * value);\r\n\r\n  static namedColorsLab = [\r\n    {\r\n      name: \"aliceblue\",\r\n      value: [97.18, -1.34, -4.27],\r\n    },\r\n    {\r\n      name: \"antiquewhite\",\r\n      value: [93.73, 1.84, 11.52],\r\n    },\r\n    {\r\n      name: \"aqua\",\r\n      value: [91.12, -48.08, -14.14],\r\n    },\r\n    {\r\n      name: \"aquamarine\",\r\n      value: [92.04, -45.52, 9.71],\r\n    },\r\n    {\r\n      name: \"azure\",\r\n      value: [98.93, -4.88, -1.7],\r\n    },\r\n    {\r\n      name: \"beige\",\r\n      value: [95.95, -4.19, 12.04],\r\n    },\r\n    {\r\n      name: \"bisque\",\r\n      value: [92.01, 4.43, 19],\r\n    },\r\n    {\r\n      name: \"black\",\r\n      value: [0, 0, 0],\r\n    },\r\n    {\r\n      name: \"blanchedalmond\",\r\n      value: [93.92, 2.13, 17.02],\r\n    },\r\n    {\r\n      name: \"blue\",\r\n      value: [32.3, 79.2, -107.86],\r\n    },\r\n    {\r\n      name: \"blueviolet\",\r\n      value: [42.19, 69.86, -74.77],\r\n    },\r\n    {\r\n      name: \"brown\",\r\n      value: [37.52, 49.7, 30.54],\r\n    },\r\n    {\r\n      name: \"burlywood\",\r\n      value: [77.02, 7.05, 30.01],\r\n    },\r\n    {\r\n      name: \"cadetblue\",\r\n      value: [61.15, -19.68, -7.43],\r\n    },\r\n    {\r\n      name: \"chartreuse\",\r\n      value: [89.87, -68.07, 85.78],\r\n    },\r\n    {\r\n      name: \"chocolate\",\r\n      value: [55.99, 37.06, 56.74],\r\n    },\r\n    {\r\n      name: \"coral\",\r\n      value: [67.29, 45.36, 47.49],\r\n    },\r\n    {\r\n      name: \"cornflowerblue\",\r\n      value: [61.93, 9.34, -49.31],\r\n    },\r\n    {\r\n      name: \"cornsilk\",\r\n      value: [97.46, -2.21, 14.28],\r\n    },\r\n    {\r\n      name: \"crimson\",\r\n      value: [47.03, 70.94, 33.59],\r\n    },\r\n    {\r\n      name: \"cyan\",\r\n      value: [91.12, -48.08, -14.14],\r\n    },\r\n    {\r\n      name: \"darkblue\",\r\n      value: [14.76, 50.43, -68.68],\r\n    },\r\n    {\r\n      name: \"darkcyan\",\r\n      value: [52.21, -30.62, -9],\r\n    },\r\n    {\r\n      name: \"darkgoldenrod\",\r\n      value: [59.22, 9.87, 62.73],\r\n    },\r\n    {\r\n      name: \"darkgray\",\r\n      value: [69.24, 0, -0.01],\r\n    },\r\n    {\r\n      name: \"darkgreen\",\r\n      value: [36.2, -43.37, 41.86],\r\n    },\r\n    {\r\n      name: \"darkgrey\",\r\n      value: [69.24, 0, -0.01],\r\n    },\r\n    {\r\n      name: \"darkkhaki\",\r\n      value: [73.38, -8.79, 39.29],\r\n    },\r\n    {\r\n      name: \"darkmagenta\",\r\n      value: [32.6, 62.56, -38.74],\r\n    },\r\n    {\r\n      name: \"darkolivegreen\",\r\n      value: [42.23, -18.83, 30.6],\r\n    },\r\n    {\r\n      name: \"darkorange\",\r\n      value: [69.48, 36.83, 75.49],\r\n    },\r\n    {\r\n      name: \"darkorchid\",\r\n      value: [43.38, 65.17, -60.11],\r\n    },\r\n    {\r\n      name: \"darkred\",\r\n      value: [28.08, 51.01, 41.29],\r\n    },\r\n    {\r\n      name: \"darksalmon\",\r\n      value: [69.85, 28.18, 27.7],\r\n    },\r\n    {\r\n      name: \"darkseagreen\",\r\n      value: [72.09, -23.82, 18.03],\r\n    },\r\n    {\r\n      name: \"darkslateblue\",\r\n      value: [30.83, 26.06, -42.09],\r\n    },\r\n    {\r\n      name: \"darkslategray\",\r\n      value: [31.26, -11.72, -3.73],\r\n    },\r\n    {\r\n      name: \"darkslategrey\",\r\n      value: [31.26, -11.72, -3.73],\r\n    },\r\n    {\r\n      name: \"darkturquoise\",\r\n      value: [75.29, -40.04, -13.52],\r\n    },\r\n    {\r\n      name: \"darkviolet\",\r\n      value: [39.58, 76.34, -70.38],\r\n    },\r\n    {\r\n      name: \"deeppink\",\r\n      value: [55.95, 84.56, -5.71],\r\n    },\r\n    {\r\n      name: \"deepskyblue\",\r\n      value: [72.55, -17.65, -42.55],\r\n    },\r\n    {\r\n      name: \"dimgray\",\r\n      value: [44.41, 0, -0.01],\r\n    },\r\n    {\r\n      name: \"dimgrey\",\r\n      value: [44.41, 0, -0.01],\r\n    },\r\n    {\r\n      name: \"dodgerblue\",\r\n      value: [59.38, 9.97, -63.39],\r\n    },\r\n    {\r\n      name: \"firebrick\",\r\n      value: [39.11, 55.93, 37.65],\r\n    },\r\n    {\r\n      name: \"floralwhite\",\r\n      value: [98.4, -0.03, 5.37],\r\n    },\r\n    {\r\n      name: \"forestgreen\",\r\n      value: [50.59, -49.59, 45.02],\r\n    },\r\n    {\r\n      name: \"fuchsia\",\r\n      value: [60.32, 98.25, -60.84],\r\n    },\r\n    {\r\n      name: \"gainsboro\",\r\n      value: [87.76, 0, -0.01],\r\n    },\r\n    {\r\n      name: \"ghostwhite\",\r\n      value: [97.76, 1.25, -3.36],\r\n    },\r\n    {\r\n      name: \"gold\",\r\n      value: [86.93, -1.92, 87.14],\r\n    },\r\n    {\r\n      name: \"goldenrod\",\r\n      value: [70.82, 8.52, 68.76],\r\n    },\r\n    {\r\n      name: \"gray\",\r\n      value: [53.59, 0, -0.01],\r\n    },\r\n    {\r\n      name: \"green\",\r\n      value: [46.23, -51.7, 49.9],\r\n    },\r\n    {\r\n      name: \"greenyellow\",\r\n      value: [91.96, -52.48, 81.87],\r\n    },\r\n    {\r\n      name: \"grey\",\r\n      value: [53.59, 0, -0.01],\r\n    },\r\n    {\r\n      name: \"honeydew\",\r\n      value: [98.57, -7.56, 5.47],\r\n    },\r\n    {\r\n      name: \"hotpink\",\r\n      value: [65.48, 64.25, -10.66],\r\n    },\r\n    {\r\n      name: \"indianred\",\r\n      value: [53.39, 44.84, 22.11],\r\n    },\r\n    {\r\n      name: \"indigo\",\r\n      value: [20.47, 51.69, -53.32],\r\n    },\r\n    {\r\n      name: \"ivory\",\r\n      value: [99.64, -2.55, 7.15],\r\n    },\r\n    {\r\n      name: \"khaki\",\r\n      value: [90.33, -9.01, 44.97],\r\n    },\r\n    {\r\n      name: \"lavender\",\r\n      value: [91.83, 3.71, -9.67],\r\n    },\r\n    {\r\n      name: \"lavenderblush\",\r\n      value: [96.07, 5.89, -0.6],\r\n    },\r\n    {\r\n      name: \"lawngreen\",\r\n      value: [88.88, -67.86, 84.95],\r\n    },\r\n    {\r\n      name: \"lemonchiffon\",\r\n      value: [97.65, -5.42, 22.23],\r\n    },\r\n    {\r\n      name: \"lightblue\",\r\n      value: [83.81, -10.89, -11.49],\r\n    },\r\n    {\r\n      name: \"lightcoral\",\r\n      value: [66.15, 42.82, 19.55],\r\n    },\r\n    {\r\n      name: \"lightcyan\",\r\n      value: [97.87, -9.94, -3.38],\r\n    },\r\n    {\r\n      name: \"lightgoldenrodyellow\",\r\n      value: [97.37, -6.48, 19.23],\r\n    },\r\n    {\r\n      name: \"lightgray\",\r\n      value: [84.56, 0, -0.01],\r\n    },\r\n    {\r\n      name: \"lightgreen\",\r\n      value: [86.55, -46.33, 36.94],\r\n    },\r\n    {\r\n      name: \"lightgrey\",\r\n      value: [84.56, 0, -0.01],\r\n    },\r\n    {\r\n      name: \"lightpink\",\r\n      value: [81.05, 27.97, 5.03],\r\n    },\r\n    {\r\n      name: \"lightsalmon\",\r\n      value: [74.7, 31.48, 34.54],\r\n    },\r\n    {\r\n      name: \"lightseagreen\",\r\n      value: [65.79, -37.51, -6.34],\r\n    },\r\n    {\r\n      name: \"lightskyblue\",\r\n      value: [79.73, -10.82, -28.51],\r\n    },\r\n    {\r\n      name: \"lightslategray\",\r\n      value: [55.92, -2.24, -11.11],\r\n    },\r\n    {\r\n      name: \"lightslategrey\",\r\n      value: [55.92, -2.24, -11.11],\r\n    },\r\n    {\r\n      name: \"lightsteelblue\",\r\n      value: [78.45, -1.28, -15.22],\r\n    },\r\n    {\r\n      name: \"lightyellow\",\r\n      value: [99.28, -5.1, 14.83],\r\n    },\r\n    {\r\n      name: \"lime\",\r\n      value: [87.74, -86.18, 83.18],\r\n    },\r\n    {\r\n      name: \"limegreen\",\r\n      value: [72.61, -67.13, 61.44],\r\n    },\r\n    {\r\n      name: \"linen\",\r\n      value: [95.31, 1.68, 6.01],\r\n    },\r\n    {\r\n      name: \"magenta\",\r\n      value: [60.32, 98.25, -60.84],\r\n    },\r\n    {\r\n      name: \"maroon\",\r\n      value: [25.53, 48.06, 38.06],\r\n    },\r\n    {\r\n      name: \"mediumaquamarine\",\r\n      value: [75.69, -38.33, 8.3],\r\n    },\r\n    {\r\n      name: \"mediumblue\",\r\n      value: [24.98, 67.18, -91.5],\r\n    },\r\n    {\r\n      name: \"mediumorchid\",\r\n      value: [53.64, 59.07, -47.41],\r\n    },\r\n    {\r\n      name: \"mediumpurple\",\r\n      value: [54.98, 36.81, -50.1],\r\n    },\r\n    {\r\n      name: \"mediumseagreen\",\r\n      value: [65.27, -48.22, 24.29],\r\n    },\r\n    {\r\n      name: \"mediumslateblue\",\r\n      value: [52.16, 41.08, -65.41],\r\n    },\r\n    {\r\n      name: \"mediumspringgreen\",\r\n      value: [87.34, -70.68, 32.46],\r\n    },\r\n    {\r\n      name: \"mediumturquoise\",\r\n      value: [76.88, -37.35, -8.36],\r\n    },\r\n    {\r\n      name: \"mediumvioletred\",\r\n      value: [44.76, 71.01, -15.18],\r\n    },\r\n    {\r\n      name: \"midnightblue\",\r\n      value: [15.86, 31.72, -49.58],\r\n    },\r\n    {\r\n      name: \"mintcream\",\r\n      value: [99.16, -4.16, 1.24],\r\n    },\r\n    {\r\n      name: \"mistyrose\",\r\n      value: [92.66, 8.75, 4.83],\r\n    },\r\n    {\r\n      name: \"moccasin\",\r\n      value: [91.72, 2.44, 26.35],\r\n    },\r\n    {\r\n      name: \"navajowhite\",\r\n      value: [90.1, 4.51, 28.26],\r\n    },\r\n    {\r\n      name: \"navy\",\r\n      value: [12.98, 47.51, -64.7],\r\n    },\r\n    {\r\n      name: \"oldlace\",\r\n      value: [96.78, 0.18, 8.16],\r\n    },\r\n    {\r\n      name: \"olive\",\r\n      value: [51.87, -12.93, 56.68],\r\n    },\r\n    {\r\n      name: \"olivedrab\",\r\n      value: [54.65, -28.22, 49.69],\r\n    },\r\n    {\r\n      name: \"orange\",\r\n      value: [74.93, 23.94, 78.96],\r\n    },\r\n    {\r\n      name: \"orangered\",\r\n      value: [57.57, 67.8, 68.97],\r\n    },\r\n    {\r\n      name: \"orchid\",\r\n      value: [62.8, 55.29, -34.42],\r\n    },\r\n    {\r\n      name: \"palegoldenrod\",\r\n      value: [91.14, -7.35, 30.96],\r\n    },\r\n    {\r\n      name: \"palegreen\",\r\n      value: [90.75, -48.3, 38.52],\r\n    },\r\n    {\r\n      name: \"paleturquoise\",\r\n      value: [90.06, -19.63, -6.41],\r\n    },\r\n    {\r\n      name: \"palevioletred\",\r\n      value: [60.56, 45.53, 0.39],\r\n    },\r\n    {\r\n      name: \"papayawhip\",\r\n      value: [95.08, 1.27, 14.52],\r\n    },\r\n    {\r\n      name: \"peachpuff\",\r\n      value: [89.35, 8.09, 21.01],\r\n    },\r\n    {\r\n      name: \"peru\",\r\n      value: [61.75, 21.4, 47.92],\r\n    },\r\n    {\r\n      name: \"pink\",\r\n      value: [83.58, 24.15, 3.32],\r\n    },\r\n    {\r\n      name: \"plum\",\r\n      value: [73.37, 32.54, -22],\r\n    },\r\n    {\r\n      name: \"powderblue\",\r\n      value: [86.13, -14.09, -8.02],\r\n    },\r\n    {\r\n      name: \"purple\",\r\n      value: [29.78, 58.94, -36.5],\r\n    },\r\n    {\r\n      name: \"red\",\r\n      value: [53.23, 80.11, 67.22],\r\n    },\r\n    {\r\n      name: \"rosybrown\",\r\n      value: [63.61, 17.02, 6.6],\r\n    },\r\n    {\r\n      name: \"royalblue\",\r\n      value: [47.83, 26.27, -65.27],\r\n    },\r\n    {\r\n      name: \"saddlebrown\",\r\n      value: [37.47, 26.45, 40.99],\r\n    },\r\n    {\r\n      name: \"salmon\",\r\n      value: [67.26, 45.23, 29.09],\r\n    },\r\n    {\r\n      name: \"sandybrown\",\r\n      value: [73.95, 23.03, 46.79],\r\n    },\r\n    {\r\n      name: \"seagreen\",\r\n      value: [51.54, -39.71, 20.05],\r\n    },\r\n    {\r\n      name: \"seashell\",\r\n      value: [97.12, 2.17, 4.54],\r\n    },\r\n    {\r\n      name: \"sienna\",\r\n      value: [43.8, 29.33, 35.64],\r\n    },\r\n    {\r\n      name: \"silver\",\r\n      value: [77.7, 0, -0.01],\r\n    },\r\n    {\r\n      name: \"skyblue\",\r\n      value: [79.21, -14.83, -21.28],\r\n    },\r\n    {\r\n      name: \"slateblue\",\r\n      value: [45.34, 36.05, -57.78],\r\n    },\r\n    {\r\n      name: \"slategray\",\r\n      value: [52.84, -2.14, -10.58],\r\n    },\r\n    {\r\n      name: \"slategrey\",\r\n      value: [52.84, -2.14, -10.58],\r\n    },\r\n    {\r\n      name: \"snow\",\r\n      value: [98.64, 1.66, 0.58],\r\n    },\r\n    {\r\n      name: \"springgreen\",\r\n      value: [88.47, -76.9, 47.03],\r\n    },\r\n    {\r\n      name: \"steelblue\",\r\n      value: [52.47, -4.07, -32.2],\r\n    },\r\n    {\r\n      name: \"tan\",\r\n      value: [74.97, 5.02, 24.42],\r\n    },\r\n    {\r\n      name: \"teal\",\r\n      value: [48.26, -28.84, -8.48],\r\n    },\r\n    {\r\n      name: \"thistle\",\r\n      value: [80.08, 13.22, -9.24],\r\n    },\r\n    {\r\n      name: \"tomato\",\r\n      value: [62.2, 57.86, 46.42],\r\n    },\r\n    {\r\n      name: \"turquoise\",\r\n      value: [81.27, -44.08, -4.03],\r\n    },\r\n    {\r\n      name: \"violet\",\r\n      value: [69.69, 56.37, -36.82],\r\n    },\r\n    {\r\n      name: \"wheat\",\r\n      value: [89.35, 1.51, 24],\r\n    },\r\n    {\r\n      name: \"white\",\r\n      value: [100, 0.01, -0.01],\r\n    },\r\n    {\r\n      name: \"whitesmoke\",\r\n      value: [96.54, 0.01, -0.01],\r\n    },\r\n    {\r\n      name: \"yellow\",\r\n      value: [97.14, -21.56, 94.48],\r\n    },\r\n    {\r\n      name: \"yellowgreen\",\r\n      value: [76.54, -37.99, 66.59],\r\n    },\r\n  ] as { name: string; value: [number, number, number] }[];\r\n\r\n  static getMeanMedian = (colors: Color[], options: Options) => {\r\n    const averagingMethod = options.averagingMethod;\r\n    const numberOfPixels = colors.length;\r\n\r\n    const mean = new Color();\r\n    const median = new Color();\r\n\r\n    if (numberOfPixels === 0) return [mean, median];\r\n\r\n    const colorChannels = [\"r\", \"g\", \"b\", \"a\"] as const;\r\n\r\n    for (let i = 0; i < colorChannels.length; i++) {\r\n      const channel = colorChannels[i];\r\n\r\n      const values = [] as number[];\r\n\r\n      for (let i = 0; i < colors.length; i++) values.push(colors[i][channel]);\r\n\r\n      const sortedValues = values.sort();\r\n\r\n      if (averagingMethod === \"squared\") {\r\n        let totalSquaredValue = 0;\r\n\r\n        for (let i = 0; i < values.length; i++) totalSquaredValue += Color.squaredValues[values[i]];\r\n\r\n        const meanSquaredValue = totalSquaredValue / numberOfPixels;\r\n        const meanValue = Math.sqrt(meanSquaredValue);\r\n\r\n        mean[channel] = meanValue;\r\n      }\r\n\r\n      if (averagingMethod === \"simple\") {\r\n        let totalValue = 0;\r\n\r\n        for (let i = 0; i < values.length; i++) totalValue += values[i];\r\n\r\n        const meanValue = totalValue / numberOfPixels;\r\n\r\n        mean[channel] = meanValue;\r\n      }\r\n\r\n      const medianIndex = Math.floor(sortedValues.length / 2);\r\n\r\n      median[channel] = sortedValues[medianIndex];\r\n    }\r\n\r\n    return [mean, median];\r\n  };\r\n\r\n  static getLightestDarkest = (colors: Color[]) => {\r\n    if (colors.length === 0) return [new Color(), new Color()];\r\n\r\n    const sRGBtoLinear = (channel: number) => {\r\n      if (channel <= 0.04045) return channel / 12.92;\r\n\r\n      return Math.pow((channel + 0.055) / 1.055, 2.4);\r\n    };\r\n\r\n    const lightnessValues = colors.map((color) => {\r\n      const lR = sRGBtoLinear(color.r / 255);\r\n      const lG = sRGBtoLinear(color.g / 255);\r\n      const lB = sRGBtoLinear(color.b / 255);\r\n\r\n      const luminance = 0.2126 * lR + 0.7152 * lG + 0.0722 * lB;\r\n\r\n      if (luminance <= 216 / 24389) return luminance * (24389 / 27);\r\n      return Math.pow(luminance, 1 / 3) * 116 - 16;\r\n    });\r\n\r\n    const lightnestValue = lightnessValues.reduce((max, v) => Math.max(max, v), -1);\r\n    const darkestValue = lightnessValues.reduce((max, v) => Math.min(max, v), 256);\r\n\r\n    const lightestIndex = lightnessValues.indexOf(lightnestValue);\r\n    const darkestIndex = lightnessValues.indexOf(darkestValue);\r\n\r\n    const lightestColor = colors[lightestIndex];\r\n    const darkestColor = colors[darkestIndex];\r\n\r\n    return [\r\n      new Color(lightestColor.r, lightestColor.g, lightestColor.b, lightestColor.a),\r\n      new Color(darkestColor.r, darkestColor.g, darkestColor.b, darkestColor.a),\r\n    ];\r\n  };\r\n\r\n  static blendColors = (background: Color, foreground: Color) => {\r\n    const normalFgAlpha = foreground.a / 255;\r\n    const normalBgAlpha = 1 - normalFgAlpha;\r\n\r\n    const channels = [\"r\", \"g\", \"b\"] as const;\r\n\r\n    const rgb = channels.map((c) => background[c] * normalBgAlpha + foreground[c] * normalFgAlpha);\r\n\r\n    return new Color(...rgb);\r\n  };\r\n\r\n  r = 0; // 0-255\r\n  g = 0; // 0-255;\r\n  b = 0; // 0-255;\r\n  a = 0; // 0-255;\r\n\r\n  constructor(a?: number | string, b?: number, c?: number, d?: number) {\r\n    if (arguments.length === 1) {\r\n      if (typeof a === \"string\" && a[0] === \"#\") {\r\n        let hex = a;\r\n\r\n        if (hex.length === 4) hex = \"#\" + hex[1] + hex[1] + hex[2] + hex[2] + hex[3] + hex[3];\r\n\r\n        if (hex.length === 7 || hex.length === 9) {\r\n          this.r = parseInt(hex[1] + hex[2], 16);\r\n          this.g = parseInt(hex[3] + hex[4], 16);\r\n          this.b = parseInt(hex[5] + hex[6], 16);\r\n\r\n          if (hex.length === 9) this.a = parseInt(hex[7] + hex[8], 16);\r\n          else this.a = 255;\r\n        }\r\n\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (arguments.length === 3 || arguments.length === 4) {\r\n      const alpha = d == null ? 255 : d;\r\n\r\n      if (typeof a === \"number\" && typeof b === \"number\" && typeof c === \"number\") {\r\n        this.r = a;\r\n        this.g = b;\r\n        this.b = c;\r\n      }\r\n\r\n      this.a = alpha;\r\n    }\r\n  }\r\n\r\n  getClosedNamedColor = () => {\r\n    const { r, g, b } = this;\r\n\r\n    const labA = Colour.rgb2lab(r, g, b);\r\n\r\n    let smallestDeltaE = 101;\r\n    let closestColorName = \"\";\r\n\r\n    Color.namedColorsLab.forEach((namedColor) => {\r\n      const labB = namedColor.value;\r\n      const deltaE = Colour.deltaE00(labA[0], labA[1], labA[2], labB[0], labB[1], labB[2]);\r\n\r\n      if (deltaE < smallestDeltaE) {\r\n        smallestDeltaE = deltaE;\r\n        closestColorName = namedColor.name;\r\n      }\r\n    });\r\n\r\n    return closestColorName;\r\n  };\r\n\r\n  get rgb(): [number, number, number] {\r\n    const { r, g, b } = this;\r\n\r\n    return [r, g, b];\r\n  }\r\n\r\n  get rgba(): [number, number, number, number] {\r\n    const { r, g, b, a } = this;\r\n\r\n    return [r, g, b, a];\r\n  }\r\n\r\n  toRgb() {\r\n    const { r, g, b } = this;\r\n\r\n    const rgb = [r, g, b].map((value) => Math.round(value));\r\n\r\n    return `rgb(${rgb.join(\", \")})`;\r\n  }\r\n\r\n  toRgba() {\r\n    const { r, g, b, a } = this;\r\n\r\n    const rgba = [r, g, b].map((value) => Math.round(value));\r\n    rgba.push(round(a / 255, 2));\r\n\r\n    return `rgba(${rgba.join(\", \")})`;\r\n  }\r\n\r\n  private hex = (value: number) => (\"0\" + Math.round(value).toString(16)).slice(-2);\r\n\r\n  toHex6() {\r\n    const { r, g, b, hex } = this;\r\n\r\n    return \"#\" + hex(r) + hex(g) + hex(b);\r\n  }\r\n\r\n  toHex8() {\r\n    const { r, g, b, a, hex } = this;\r\n\r\n    return \"#\" + hex(r) + hex(g) + hex(b) + hex(a);\r\n  }\r\n\r\n  private getHsl = () => {\r\n    const { r, g, b } = this;\r\n\r\n    const nR = r / 255;\r\n    const nG = g / 255;\r\n    const nB = b / 255;\r\n\r\n    const max = Math.max(nR, nG, nB);\r\n    const min = Math.min(nR, nG, nB);\r\n    const delta = max - min;\r\n\r\n    let hue, lightness, saturation;\r\n\r\n    // hue\r\n    if (delta === 0) hue = 0;\r\n    else if (nR === max) hue = ((nG - nB) / delta) % 6;\r\n    else if (nG === max) hue = (nB - nR) / delta + 2;\r\n    else hue = (nR - nG) / delta + 4;\r\n\r\n    hue = Math.round(hue * 60);\r\n\r\n    if (hue < 0) hue += 360;\r\n\r\n    // lightness\r\n    lightness = (max + min) / 2;\r\n\r\n    // saturation\r\n    if (delta === 0) saturation = 0;\r\n    else saturation = delta / (1 - Math.abs(2 * lightness - 1));\r\n\r\n    lightness = round(lightness * 100, 1);\r\n    saturation = round(saturation * 100, 1);\r\n\r\n    return [hue, saturation, lightness];\r\n  };\r\n\r\n  toHsl() {\r\n    const [hue, saturation, lightness] = this.getHsl();\r\n\r\n    return `hsl(${hue}, ${saturation}%, ${lightness}%)`;\r\n  }\r\n\r\n  toHsla() {\r\n    const { a } = this;\r\n\r\n    const [hue, saturation, lightness] = this.getHsl();\r\n\r\n    const alpha = round(a / 255, 2);\r\n\r\n    return `hsla(${hue}, ${saturation}%, ${lightness}%, ${alpha})`;\r\n  }\r\n}\r\n","/**\r\n * Colour class\r\n * Represet the colour object and it's different types (HEX, RGBA, XYZ, LAB)\r\n * This class have the ability to do the following\r\n * 1. Convert HEX to RGBA\r\n * 2. Convert RGB to XYZ\r\n * 3. Convert XYZ to LAB\r\n * 4. Calculate Delta E00 between two LAB colour (Main purpose)\r\n * @author Ahmed Moussa <moussa.ahmed95@gmail.com>\r\n * @version 2.0\r\n */\r\nexport default class Colour {\r\n  /**\r\n   * Convert RGBA to LAB\r\n   * @param {Number} r     Red value from 0 to 255\r\n   * @param {Number} g     Green value from 0 to 255\r\n   * @param {Number} b     Blue value from 0 to 255\r\n   */\r\n  static rgb2lab(r: number, g: number, b: number) {\r\n    const [x, y, z] = Colour.rgb2xyz(r, g, b);\r\n    return Colour.xyz2lab(x, y, z); // [l, a, b]\r\n  }\r\n  /**\r\n   * Convert RGB to XYZ\r\n   * @param {Number} r     Red value from 0 to 255\r\n   * @param {Number} g     Green value from 0 to 255\r\n   * @param {Number} b     Blue value from 0 to 255\r\n   */\r\n  static rgb2xyz(r: number, g: number, b: number) {\r\n    r = r / 255;\r\n    g = g / 255;\r\n    b = b / 255;\r\n    // step 1\r\n    if (r > 0.04045) {\r\n      r = Math.pow((r + 0.055) / 1.055, 2.4);\r\n    } else {\r\n      r = r / 12.92;\r\n    }\r\n    if (g > 0.04045) {\r\n      g = Math.pow((g + 0.055) / 1.055, 2.4);\r\n    } else {\r\n      g = g / 12.92;\r\n    }\r\n    if (b > 0.04045) {\r\n      b = Math.pow((b + 0.055) / 1.055, 2.4);\r\n    } else {\r\n      b = b / 12.92;\r\n    }\r\n    // step 2\r\n    r = r * 100;\r\n    g = g * 100;\r\n    b = b * 100;\r\n    // step 3\r\n    const x = r * 0.4124564 + g * 0.3575761 + b * 0.1804375;\r\n    const y = r * 0.2126729 + g * 0.7151522 + b * 0.072175;\r\n    const z = r * 0.0193339 + g * 0.119192 + b * 0.9503041;\r\n    return [x, y, z];\r\n  }\r\n  /**\r\n   * Convert XYZ to LAB\r\n   * @param {Number} x Value\r\n   * @param {Number} y Value\r\n   * @param {Number} z Value\r\n   */\r\n  static xyz2lab(x: number, y: number, z: number) {\r\n    // using 10o Observer (CIE 1964)\r\n    // CIE10_D65 = {94.811f, 100f, 107.304f} => Daylight\r\n    const referenceX = 94.811;\r\n    const referenceY = 100;\r\n    const referenceZ = 107.304;\r\n    // step 1\r\n    x = x / referenceX;\r\n    y = y / referenceY;\r\n    z = z / referenceZ;\r\n    // step 2\r\n    if (x > 0.008856) {\r\n      x = Math.pow(x, 1 / 3);\r\n    } else {\r\n      x = 7.787 * x + 16 / 116;\r\n    }\r\n    if (y > 0.008856) {\r\n      y = Math.pow(y, 1 / 3);\r\n    } else {\r\n      y = 7.787 * y + 16 / 116;\r\n    }\r\n    if (z > 0.008856) {\r\n      z = Math.pow(z, 1 / 3);\r\n    } else {\r\n      z = 7.787 * z + 16 / 116;\r\n    }\r\n    // step 3\r\n    const l = 116 * y - 16;\r\n    const a = 500 * (x - y);\r\n    const b = 200 * (y - z);\r\n    return [l, a, b];\r\n  }\r\n  /**\r\n   * The difference between two given colours with respect to the human eye\r\n   * @param {number} l1 Colour 1\r\n   * @param {number} a1 Colour 1\r\n   * @param {number} b1 Colour 1\r\n   * @param {number} l2 Colour 2\r\n   * @param {number} a2 Colour 2\r\n   * @param {number} b2 Colour 2\r\n   */\r\n  static deltaE00(l1: number, a1: number, b1: number, l2: number, a2: number, b2: number) {\r\n    // Utility functions added to Math Object\r\n    const rad2deg = function (rad: number) {\r\n      return (360 * rad) / (2 * Math.PI);\r\n    };\r\n    const deg2rad = function (deg: number) {\r\n      return (2 * Math.PI * deg) / 360;\r\n    };\r\n    // Start Equation\r\n    // Equation exist on the following URL http://www.brucelindbloom.com/index.html?Eqn_DeltaE_CIE2000.html\r\n    const avgL = (l1 + l2) / 2;\r\n    const c1 = Math.sqrt(Math.pow(a1, 2) + Math.pow(b1, 2));\r\n    const c2 = Math.sqrt(Math.pow(a2, 2) + Math.pow(b2, 2));\r\n    const avgC = (c1 + c2) / 2;\r\n    const g = (1 - Math.sqrt(Math.pow(avgC, 7) / (Math.pow(avgC, 7) + Math.pow(25, 7)))) / 2;\r\n\r\n    const a1p = a1 * (1 + g);\r\n    const a2p = a2 * (1 + g);\r\n\r\n    const c1p = Math.sqrt(Math.pow(a1p, 2) + Math.pow(b1, 2));\r\n    const c2p = Math.sqrt(Math.pow(a2p, 2) + Math.pow(b2, 2));\r\n\r\n    const avgCp = (c1p + c2p) / 2;\r\n\r\n    let h1p = rad2deg(Math.atan2(b1, a1p));\r\n    if (h1p < 0) {\r\n      h1p = h1p + 360;\r\n    }\r\n\r\n    let h2p = rad2deg(Math.atan2(b2, a2p));\r\n    if (h2p < 0) {\r\n      h2p = h2p + 360;\r\n    }\r\n\r\n    const avghp = Math.abs(h1p - h2p) > 180 ? (h1p + h2p + 360) / 2 : (h1p + h2p) / 2;\r\n\r\n    const t =\r\n      1 -\r\n      0.17 * Math.cos(deg2rad(avghp - 30)) +\r\n      0.24 * Math.cos(deg2rad(2 * avghp)) +\r\n      0.32 * Math.cos(deg2rad(3 * avghp + 6)) -\r\n      0.2 * Math.cos(deg2rad(4 * avghp - 63));\r\n\r\n    let deltahp = h2p - h1p;\r\n    if (Math.abs(deltahp) > 180) {\r\n      if (h2p <= h1p) {\r\n        deltahp += 360;\r\n      } else {\r\n        deltahp -= 360;\r\n      }\r\n    }\r\n\r\n    const deltalp = l2 - l1;\r\n    const deltacp = c2p - c1p;\r\n\r\n    deltahp = 2 * Math.sqrt(c1p * c2p) * Math.sin(deg2rad(deltahp) / 2);\r\n\r\n    const sl = 1 + (0.015 * Math.pow(avgL - 50, 2)) / Math.sqrt(20 + Math.pow(avgL - 50, 2));\r\n    const sc = 1 + 0.045 * avgCp;\r\n    const sh = 1 + 0.015 * avgCp * t;\r\n\r\n    const deltaro = 30 * Math.exp(-Math.pow((avghp - 275) / 25, 2));\r\n    const rc = 2 * Math.sqrt(Math.pow(avgCp, 7) / (Math.pow(avgCp, 7) + Math.pow(25, 7)));\r\n    const rt = -rc * Math.sin(2 * deg2rad(deltaro));\r\n\r\n    const kl = 1;\r\n    const kc = 1;\r\n    const kh = 1;\r\n\r\n    const deltaE = Math.sqrt(\r\n      Math.pow(deltalp / (kl * sl), 2) +\r\n        Math.pow(deltacp / (kc * sc), 2) +\r\n        Math.pow(deltahp / (kh * sh), 2) +\r\n        rt * (deltacp / (kc * sc)) * (deltahp / (kh * sh))\r\n    );\r\n\r\n    return deltaE;\r\n  }\r\n}\r\n","class OptionsProxy {\r\n  [key: string]: any;\r\n\r\n  constructor() {\r\n    return new Proxy(this as unknown as Options, {\r\n      get: (target, name) => {\r\n        const field = target.fieldHashmap[name.toString()];\r\n\r\n        if (field) return field.value;\r\n\r\n        return target[name as keyof Options];\r\n      },\r\n    });\r\n  }\r\n}\r\n\r\nexport default class Options extends OptionsProxy {\r\n  readonly fieldArray: (HTMLInputElement | HTMLSelectElement)[];\r\n  readonly fieldHashmap: {\r\n    [key: string]: HTMLInputElement | HTMLSelectElement;\r\n  };\r\n  readonly fieldToBeforeChangeCallback: {\r\n    [key: string]: () => void;\r\n  };\r\n\r\n  callback?: () => void;\r\n\r\n  constructor(optionFields: (HTMLInputElement | HTMLSelectElement)[], callback?: () => void) {\r\n    super();\r\n\r\n    this.fieldArray = optionFields;\r\n    this.fieldHashmap = {};\r\n    this.fieldToBeforeChangeCallback = {};\r\n\r\n    optionFields.forEach((field) => {\r\n      this.fieldHashmap[field.name] = field;\r\n    });\r\n\r\n    if (callback) this.onChange = callback;\r\n\r\n    this.restore();\r\n  }\r\n\r\n  onBeforeChange = (name: string, newBeforeChangeCallback: () => void) => {\r\n    const { fieldHashmap, fieldToBeforeChangeCallback, callback } = this;\r\n\r\n    const field = fieldHashmap[name];\r\n\r\n    if (!field) return;\r\n\r\n    const beforeChangeCallback = fieldToBeforeChangeCallback[name];\r\n\r\n    if (callback) field.removeEventListener(\"change\", callback);\r\n    if (beforeChangeCallback) field.removeEventListener(\"change\", beforeChangeCallback);\r\n\r\n    field.addEventListener(\"change\", newBeforeChangeCallback);\r\n\r\n    if (callback) field.addEventListener(\"change\", callback);\r\n\r\n    fieldToBeforeChangeCallback[name] = newBeforeChangeCallback;\r\n  };\r\n\r\n  triggerAllBeforeChangeCallbacks = () => {\r\n    const { fieldArray, fieldToBeforeChangeCallback } = this;\r\n\r\n    fieldArray.forEach((field) => {\r\n      const beforeChangeCallback = fieldToBeforeChangeCallback[field.name];\r\n\r\n      if (beforeChangeCallback) beforeChangeCallback();\r\n    });\r\n  };\r\n\r\n  save = () => {\r\n    const { fieldArray } = this;\r\n\r\n    const optionsString = fieldArray.reduce((optionsObject, field) => {\r\n      if (field.type !== \"file\") optionsObject[field.name] = field.value;\r\n\r\n      return optionsObject;\r\n    }, {} as { [key: string]: string });\r\n\r\n    localStorage.setItem(\"options\", JSON.stringify(optionsString));\r\n  };\r\n\r\n  restore = () => {\r\n    const { fieldArray } = this;\r\n    const optionsString = localStorage.getItem(\"options\");\r\n\r\n    if (!optionsString) return;\r\n\r\n    try {\r\n      const optionsObject = JSON.parse(optionsString);\r\n\r\n      fieldArray.forEach((field) => {\r\n        if (optionsObject[field.name]) field.value = optionsObject[field.name];\r\n      });\r\n    } catch (e) {\r\n      localStorage.removeItem(\"options\");\r\n    }\r\n  };\r\n\r\n  set onChange(newCallback: () => void) {\r\n    const { fieldArray, callback } = this;\r\n\r\n    fieldArray.forEach((field) => {\r\n      if (callback) field.removeEventListener(\"change\", callback);\r\n      field.addEventListener(\"change\", newCallback);\r\n    });\r\n\r\n    this.callback = newCallback;\r\n  }\r\n}\r\n","import Color from \"./Color.ts\";\r\nimport { debounce, toast, isNil } from \"./Util.ts\";\r\n\r\nexport default class Preview {\r\n  readonly preview: HTMLCanvasElement;\r\n  readonly uploader: HTMLInputElement;\r\n\r\n  private internalCanvas: OffscreenCanvas;\r\n  private internalContext: OffscreenCanvasRenderingContext2D;\r\n\r\n  private context: CanvasRenderingContext2D;\r\n  private image: HTMLImageElement;\r\n  private imageValues: Uint8ClampedArray | undefined;\r\n  private colors: Promise<{ r: number; g: number; b: number; a: number }[]> | undefined;\r\n\r\n  private loadingToast: (() => void) | undefined;\r\n\r\n  private opacity: number | undefined;\r\n  private backgroundColor: Color | undefined;\r\n\r\n  constructor(previewElement: HTMLCanvasElement, uploaderElement: HTMLInputElement) {\r\n    const image = new Image();\r\n\r\n    image.addEventListener(\"load\", () => {\r\n      delete this.imageValues;\r\n      this.handleUpdateImage();\r\n    });\r\n\r\n    uploaderElement.addEventListener(\"change\", this.handleReadUpload);\r\n\r\n    this.preview = previewElement;\r\n    this.uploader = uploaderElement;\r\n\r\n    const context = previewElement.getContext(\"2d\");\r\n    if (!context) throw \"Failed to get 2D context from canvas element.\";\r\n\r\n    this.context = context;\r\n    this.image = image;\r\n\r\n    const internalCanvas = new OffscreenCanvas(0, 0);\r\n    const internalContext = internalCanvas.getContext(\"2d\");\r\n\r\n    if (!internalContext) throw \"Failed to get 2D context from offscreen canvas.\";\r\n\r\n    this.internalCanvas = internalCanvas;\r\n    this.internalContext = internalContext;\r\n  }\r\n\r\n  handleReadUpload = () => {\r\n    const { uploader, image } = this;\r\n\r\n    this.loadingToast = toast(\"Loading selected image...\", true);\r\n\r\n    if (!uploader.files) throw \"Asked to read image file but found no file was uploaded.\";\r\n\r\n    image.src = URL.createObjectURL(uploader.files[0]);\r\n  };\r\n\r\n  _handleUpdateImage = debounce((resolve) => {\r\n    const { preview, context, internalCanvas, internalContext, image } = this;\r\n    const { opacity, backgroundColor } = this;\r\n\r\n    let { width, height } = image;\r\n\r\n    width = width || 300;\r\n    height = height || 200;\r\n\r\n    width = preview.width = internalCanvas.width = width || 300;\r\n    height = preview.height = internalCanvas.height = height || 200;\r\n\r\n    const done = (imageData?: Uint8ClampedArray) => {\r\n      const { loadingToast } = this;\r\n\r\n      if (loadingToast) loadingToast();\r\n\r\n      delete this.loadingToast;\r\n\r\n      requestAnimationFrame(() => {\r\n        requestAnimationFrame(() => {\r\n          const _imageData = imageData || context.getImageData(0, 0, width, height).data;\r\n          const colors = [];\r\n\r\n          for (let i = 0; i < _imageData.length; i += 4) {\r\n            const r = _imageData[i + 0];\r\n            const g = _imageData[i + 1];\r\n            const b = _imageData[i + 2];\r\n            const a = _imageData[i + 3];\r\n\r\n            colors.push({ r, g, b, a });\r\n          }\r\n\r\n          resolve(colors);\r\n        });\r\n      });\r\n    };\r\n\r\n    context.clearRect(0, 0, width, height);\r\n\r\n    if (!this.imageValues || (isNil(opacity) && isNil(backgroundColor))) {\r\n      context.drawImage(image, 0, 0);\r\n    }\r\n\r\n    if (!this.imageValues) this.imageValues = context.getImageData(0, 0, width, height).data;\r\n\r\n    if (isNil(opacity) && isNil(backgroundColor)) return done(this.imageValues);\r\n\r\n    const _imageValues = new Uint8ClampedArray(this.imageValues);\r\n\r\n    if (!isNil(opacity)) {\r\n      for (let i = 0; i < _imageValues.length; i += 4) _imageValues[i + 3] *= opacity;\r\n\r\n      if (isNil(backgroundColor)) {\r\n        context.putImageData(new ImageData(_imageValues, width), 0, 0);\r\n        return done(_imageValues);\r\n      }\r\n    }\r\n\r\n    if (!isNil(backgroundColor)) {\r\n      context.fillStyle = (backgroundColor as Color).toRgba();\r\n      context.fillRect(0, 0, width, height);\r\n\r\n      if (isNil(opacity)) {\r\n        context.drawImage(image, 0, 0);\r\n        return done();\r\n      }\r\n\r\n      internalContext.clearRect(0, 0, width, height);\r\n      internalContext.putImageData(new ImageData(_imageValues, width), 0, 0);\r\n      context.drawImage(internalCanvas, 0, 0);\r\n      return done();\r\n    }\r\n  });\r\n\r\n  handleUpdateImage = () => {\r\n    this.colors = new Promise((resolve) => {\r\n      this._handleUpdateImage(resolve);\r\n    });\r\n  };\r\n\r\n  loadExampleImage = () => {\r\n    this.loadingToast = toast(\"Loading example image...\", true);\r\n\r\n    this.image.src = \"./example.png\";\r\n  };\r\n\r\n  getColorsAt = async (startX: number, startY: number, width: number, height: number) => {\r\n    const { preview } = this;\r\n\r\n    if (!this.colors) return [];\r\n\r\n    let colors;\r\n    let resolvedColors = [] as { r: number; g: number; b: number; a: number }[];\r\n\r\n    while (colors !== this.colors) {\r\n      colors = this.colors;\r\n      resolvedColors = await colors;\r\n    }\r\n\r\n    const targetColors = [];\r\n\r\n    for (let y = startY; y < startY + height; y++) {\r\n      for (let x = startX; x < startX + width; x++) {\r\n        const i = y * preview.width + x;\r\n\r\n        if (i < 0 || i > resolvedColors.length) continue;\r\n\r\n        targetColors.push(resolvedColors[i]);\r\n      }\r\n    }\r\n\r\n    return targetColors;\r\n  };\r\n\r\n  setBackgroundColor = (color: Color) => {\r\n    if (color.a === 0) delete this.backgroundColor;\r\n    else this.backgroundColor = color;\r\n\r\n    this.handleUpdateImage();\r\n  };\r\n\r\n  setOpacity = (opacity: number) => {\r\n    if (opacity === 1) delete this.opacity;\r\n    else this.opacity = opacity;\r\n\r\n    this.handleUpdateImage();\r\n  };\r\n}\r\n","import Color from \"./Color.ts\";\r\nimport Options from \"./Options.ts\";\r\nimport { toast } from \"./Util.ts\";\r\n\r\ntype resultElementInfo = {\r\n  textElement: HTMLInputElement;\r\n  foregroundElement: HTMLElement;\r\n  backgroundElement: HTMLElement;\r\n};\r\n\r\nexport default class Results {\r\n  readonly resultElementArray: resultElementInfo[];\r\n  readonly resultElementHashmap: { [key: string]: resultElementInfo };\r\n\r\n  constructor(resultFields: HTMLElement[]) {\r\n    this.resultElementArray = [];\r\n    this.resultElementHashmap = {};\r\n\r\n    resultFields.forEach((resultField) => {\r\n      const textElement = resultField.querySelector(\"input\") as HTMLInputElement;\r\n      const foregroundElement = resultField.querySelector(\".foreground\") as HTMLElement;\r\n      const backgroundElement = resultField.querySelector(\".background\") as HTMLElement;\r\n      const copyButton = resultField.querySelector(\".copy\");\r\n\r\n      if (copyButton) {\r\n        copyButton.addEventListener(\"click\", (e) => {\r\n          e.preventDefault();\r\n          navigator.clipboard.writeText(textElement.value);\r\n          toast(`Copied ${textElement.value}`);\r\n        });\r\n      }\r\n\r\n      const proxiedTextElement = new Proxy(textElement, {\r\n        set: (target, name, value) => {\r\n          if (name === \"value\") foregroundElement.style.backgroundColor = value;\r\n\r\n          // @ts-expect-error continue with default behavior\r\n          target[name] = value;\r\n          return true;\r\n        },\r\n      });\r\n\r\n      const name = textElement.name.split(\"ResultText\")[0];\r\n      const info = {\r\n        textElement: proxiedTextElement,\r\n        foregroundElement,\r\n        backgroundElement,\r\n      };\r\n\r\n      this.resultElementHashmap[name] = info;\r\n      this.resultElementArray.push(info);\r\n    });\r\n  }\r\n\r\n  setBackgroundColor = (color: Color) => {\r\n    const { resultElementArray } = this;\r\n\r\n    const backgroundColor = color.toRgba();\r\n\r\n    resultElementArray.forEach((info) => {\r\n      info.backgroundElement.style.backgroundColor = backgroundColor;\r\n    });\r\n  };\r\n\r\n  setResult = (type: string, color: Color, options: Options) => {\r\n    const { resultElementHashmap } = this;\r\n    const resultFormat = options.resultFormat;\r\n    const hideAlphaChannel = options.hideAlphaChannel;\r\n\r\n    let includeAlpha = false;\r\n    if (hideAlphaChannel === \"always\") includeAlpha = false;\r\n    else if (hideAlphaChannel === \"never\") includeAlpha = true;\r\n    else if (color.a !== 255) includeAlpha = true;\r\n\r\n    let value = \"\";\r\n\r\n    if (resultFormat === \"rgb\") value = includeAlpha ? color.toRgba() : color.toRgb();\r\n    if (resultFormat === \"hex\") value = includeAlpha ? color.toHex8() : color.toHex6();\r\n    if (resultFormat === \"hsl\") value = includeAlpha ? color.toHsla() : color.toHsl();\r\n    if (resultFormat === \"svg\") value = color.getClosedNamedColor();\r\n\r\n    if (!value) throw `Invalid resultFormat option: ${resultFormat.toString()}`;\r\n\r\n    resultElementHashmap[type].textElement.value = value;\r\n  };\r\n}\r\n","export default class Selection {\r\n  readonly outline: HTMLElement;\r\n  readonly target: HTMLCanvasElement;\r\n\r\n  callback: (() => void) | undefined;\r\n\r\n  private isInProgress = false;\r\n  private startPosition = { x: 0, y: 0 };\r\n  private endPosition = { x: 0, y: 0 };\r\n\r\n  info:\r\n    | {\r\n        top: number;\r\n        left: number;\r\n        bottom: number;\r\n        right: number;\r\n        width: number;\r\n        height: number;\r\n      }\r\n    | undefined;\r\n\r\n  constructor(borderElement: HTMLElement, targetElement: HTMLCanvasElement, callback?: () => void) {\r\n    targetElement.onmousedown = this.handleSelect;\r\n    targetElement.onmouseup = this.handleSelect;\r\n    targetElement.onmousemove = this.handleSelect;\r\n    targetElement.onmouseleave = this.handleSelect;\r\n\r\n    targetElement.ontouchstart = this.handleTouch;\r\n    targetElement.ontouchend = this.handleTouch;\r\n    targetElement.ontouchmove = this.handleTouch;\r\n\r\n    this.outline = borderElement;\r\n    this.target = targetElement;\r\n\r\n    if (callback) this.onSelectionEnd = callback;\r\n  }\r\n\r\n  handleTouch = (e: TouchEvent) => {\r\n    const { targetTouches, changedTouches, type } = e;\r\n\r\n    if (targetTouches.length !== 2) return;\r\n    else e.preventDefault();\r\n\r\n    const { target, updateInfo, updateOutline, callback } = this;\r\n\r\n    const touches = type === \"touchend\" ? changedTouches : targetTouches;\r\n    const boundingRect = target.getBoundingClientRect();\r\n\r\n    const x1 = Math.round(touches[0].clientX - boundingRect.left);\r\n    const y1 = Math.round(touches[0].clientY - boundingRect.top);\r\n\r\n    const x2 = Math.round(touches[1].clientX - boundingRect.left);\r\n    const y2 = Math.round(touches[1].clientY - boundingRect.top);\r\n\r\n    this.startPosition = { x: x1, y: y1 };\r\n    this.endPosition = { x: x2, y: y2 };\r\n\r\n    updateInfo();\r\n    updateOutline();\r\n\r\n    if (callback) callback();\r\n  };\r\n\r\n  handleSelect = (e: MouseEvent) => {\r\n    const { type, button, clientX, clientY } = e;\r\n    const { target, isInProgress, updateInfo, updateOutline, callback } = this;\r\n\r\n    if (button !== null && button !== 0) return;\r\n\r\n    const boundingRect = target.getBoundingClientRect();\r\n    const x = Math.round(clientX - boundingRect.left);\r\n    const y = Math.round(clientY - boundingRect.top);\r\n\r\n    if (type === \"mousedown\") {\r\n      this.startPosition = { x, y };\r\n      this.isInProgress = true;\r\n      return;\r\n    }\r\n\r\n    if (!isInProgress) return;\r\n\r\n    if (type === \"mousemove\" || type === \"mouseup\" || type === \"mouseleave\") {\r\n      this.endPosition = { x, y };\r\n\r\n      updateInfo();\r\n      updateOutline();\r\n\r\n      if (callback) callback();\r\n    }\r\n\r\n    if (type === \"mouseup\" || type === \"mouseleave\") this.isInProgress = false;\r\n  };\r\n\r\n  set onSelectionEnd(callback: () => void) {\r\n    this.callback = callback;\r\n  }\r\n\r\n  updateInfo = () => {\r\n    const { startPosition, endPosition, target } = this;\r\n\r\n    const top = Math.max(Math.min(startPosition.y, endPosition.y), 0);\r\n    const left = Math.max(Math.min(startPosition.x, endPosition.x), 0);\r\n    const bottom = Math.min(Math.max(startPosition.y, endPosition.y), target.height);\r\n    const right = Math.min(Math.max(startPosition.x, endPosition.x), target.width);\r\n\r\n    const width = Math.max(right - left, 1);\r\n    const height = Math.max(bottom - top, 1);\r\n\r\n    this.info = { top, left, bottom, right, width, height };\r\n  };\r\n\r\n  updateOutline = () => {\r\n    const { outline, info } = this;\r\n\r\n    if (!info) return;\r\n\r\n    const { top, left, width, height } = info;\r\n\r\n    const cssText = `top:${top}px; left:${left}px; width:${width}px; height:${height}px;`;\r\n\r\n    outline.style.cssText = cssText;\r\n  };\r\n\r\n  clear = () => {\r\n    const { outline } = this;\r\n\r\n    outline.style.cssText = \"\";\r\n\r\n    delete this.info;\r\n  };\r\n}\r\n","export const debounce = (func: (...args: any[]) => any, timeout = 16) => {\r\n  let timer: number;\r\n\r\n  return (...args: any[]) => {\r\n    clearTimeout(timer);\r\n    timer = setTimeout(() => func.apply(this, args), timeout);\r\n  };\r\n};\r\n\r\nexport const round = (value: number, decimalPlaces = 0) =>\r\n  +(Math.round(+(value + `e+${decimalPlaces}`)) + `e-${decimalPlaces}`);\r\n\r\nexport const clamp = (value: number, min: number, max: number) =>\r\n  Math.max(Math.min(value, max), min);\r\n\r\nexport const toast = (message: string, persist = false) => {\r\n  const toast = document.createElement(\"div\");\r\n\r\n  toast.textContent = message;\r\n  toast.className = `toast ${persist ? \"\" : \"fade-out\"}`;\r\n  toast.setAttribute(\"role\", \"status\");\r\n\r\n  const toastContainer = document.querySelector(\".toast-container\");\r\n\r\n  if (toastContainer) {\r\n    toastContainer.appendChild(toast);\r\n\r\n    if (persist) {\r\n      return () => {\r\n        requestAnimationFrame(() => toastContainer.removeChild(toast));\r\n      };\r\n    } else {\r\n      setTimeout(() => {\r\n        toastContainer.removeChild(toast);\r\n      }, 1500);\r\n    }\r\n  }\r\n};\r\n\r\nexport const isNil = <T>(value: any): value is T => value == null;\r\n","import Color from \"./classes/Color.ts\";\r\nimport Options from \"./classes/Options.ts\";\r\nimport Preview from \"./classes/Preview.ts\";\r\nimport Selection from \"./classes/Selection.ts\";\r\nimport Results from \"./classes/Results.ts\";\r\nimport { debounce, toast } from \"./classes/Util.ts\";\r\n\r\nfunction init() {\r\n  const $ = (selector: string): HTMLElement[] => Array.from(document.querySelectorAll(selector));\r\n\r\n  const optionsForm = $(\".options\")[0] as HTMLFormElement;\r\n  const resultsForm = $(\".results\")[0] as HTMLFormElement;\r\n\r\n  optionsForm.reset();\r\n  resultsForm.reset();\r\n\r\n  optionsForm.addEventListener(\"submit\", (e) => {\r\n    e.preventDefault();\r\n    calculate();\r\n  });\r\n\r\n  const optionFields = $(\".options :is(input, select)\") as (HTMLInputElement | HTMLSelectElement)[];\r\n  const resultFields = $(\".results .field\") as HTMLInputElement[];\r\n\r\n  const previewElement = $(\".preview\")[0] as HTMLCanvasElement;\r\n  const uploaderElement = $(\"input[name=imageUpload]\")[0] as HTMLInputElement;\r\n  const selectorElement = $(\".selector\")[0];\r\n\r\n  const options = new Options(optionFields);\r\n  const preview = new Preview(previewElement, uploaderElement);\r\n  const results = new Results(resultFields);\r\n  const selection = new Selection(selectorElement, previewElement);\r\n\r\n  const calculate = debounce(async () => {\r\n    if (!selection.info) return;\r\n\r\n    const { top, left, width, height } = selection.info;\r\n\r\n    const selectedColors = (await preview.getColorsAt(left, top, width, height)) as Color[];\r\n\r\n    const [meanColor, medianColor] = Color.getMeanMedian(selectedColors, options);\r\n    const [lightestColor, darkestColor] = Color.getLightestDarkest(selectedColors);\r\n\r\n    results.setResult(\"mean\", meanColor, options);\r\n    results.setResult(\"median\", medianColor, options);\r\n    results.setResult(\"lightest\", lightestColor, options);\r\n    results.setResult(\"darkest\", darkestColor, options);\r\n  });\r\n\r\n  uploaderElement.addEventListener(\"change\", selection.clear);\r\n\r\n  const exampleImageButton = $(\"#example-image-button\")[0];\r\n  const resetButton = $(\"button[type=reset]\")[0];\r\n  const saveButton = $(\"button[name=save\")[0];\r\n\r\n  exampleImageButton.addEventListener(\"click\", (e) => {\r\n    e.preventDefault();\r\n    selection.clear();\r\n    preview.loadExampleImage();\r\n  });\r\n\r\n  resetButton.addEventListener(\"click\", (e) => {\r\n    e.preventDefault();\r\n    optionsForm.reset();\r\n    options.triggerAllBeforeChangeCallbacks();\r\n    calculate();\r\n    toast(\"Options reset!\");\r\n  });\r\n\r\n  saveButton.addEventListener(\"click\", (e) => {\r\n    e.preventDefault();\r\n    options.save();\r\n    toast(\"Options saved!\");\r\n  });\r\n\r\n  options.onBeforeChange(\"opacityPercentage\", () => {\r\n    const opacityPercent = options.opacityPercentage;\r\n\r\n    preview.setOpacity(opacityPercent / 100);\r\n  });\r\n\r\n  const handleBackgroundSettingsChanged = () => {\r\n    const transparencyType = options.transparencyType;\r\n\r\n    let backgroundColor = null;\r\n\r\n    if (transparencyType === \"straight\") backgroundColor = new Color(0, 0, 0, 0);\r\n    if (transparencyType === \"premultiplied\") backgroundColor = new Color(options.backgroundColor);\r\n\r\n    if (!backgroundColor) throw `Invalid transparency type option: ${transparencyType.toString()}`;\r\n\r\n    preview.setBackgroundColor(backgroundColor);\r\n    results.setBackgroundColor(backgroundColor);\r\n\r\n    calculate();\r\n  };\r\n\r\n  options.onBeforeChange(\"backgroundColor\", handleBackgroundSettingsChanged);\r\n  options.onBeforeChange(\"transparencyType\", handleBackgroundSettingsChanged);\r\n\r\n  options.triggerAllBeforeChangeCallbacks();\r\n\r\n  selection.onSelectionEnd = calculate;\r\n  options.onChange = calculate;\r\n}\r\n\r\nwindow.onload = () => requestAnimationFrame(init);\r\n"]}