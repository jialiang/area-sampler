{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/rgb-lab/color.js","src/classes/Color.ts","src/classes/Options.ts","src/classes/Preview.ts","src/classes/Results.ts","src/classes/Selection.ts","src/classes/Util.ts","src/index.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","lab2rgb","h","M","Math","pow","max","min","rgb2lab","deltaE","sqrt","w","s","2","rgb_lab_1","Util_1","Color","constructor","l","this","g","b","getClosedNamedColor","let","namedColorsLab","forEach","value","name","hex","round","toString","slice","getHsl","m","v","abs","arguments","rgba","parseInt","rgb","toRgb","map","join","toRgba","push","toHex6","toHex8","toHsl","toHsla","squaredValues","Array","keys","getMeanMedian","averagingMethod","sort","floor","getLightestDarkest","indexOf","blendColors","default","Proxy","get","fieldHashmap","super","onBeforeChange","fieldToBeforeChangeCallback","callback","removeEventListener","addEventListener","triggerAllBeforeChangeCallbacks","fieldArray","save","reduce","type","localStorage","setItem","JSON","stringify","restore","getItem","parse","removeItem","onChange","Color_1","handleReadUpload","uploader","image","FileReader","target","result","src","files","readAsDataURL","handleUpdateImage","preview","context","opacity","backgroundColor","width","height","clearRect","drawImage","getImageData","d","data","colors","clamp","putImageData","OffscreenCanvas","getContext","fillStyle","fillRect","loadExampleImage","getColorsAt","setBackgroundColor","setOpacity","Image","resultElementArray","backgroundElement","style","setResult","resultElementHashmap","resultFormat","hideAlphaChannel","textElement","querySelector","preventDefault","navigator","clipboard","writeText","set","split","foregroundElement","isInProgress","startPosition","x","y","endPosition","handleTouch","targetTouches","changedTouches","updateInfo","updateOutline","getBoundingClientRect","clientX","left","clientY","top","handleSelect","button","info","bottom","right","outline","cssText","clear","onmousedown","onmouseup","onmousemove","onmouseleave","ontouchstart","ontouchend","ontouchmove","onSelectionEnd","debounce","clearTimeout","setTimeout","apply","Options_1","Preview_1","Selection_1","Results_1","init","from","document","querySelectorAll","reset","C","opacityPercentage","transparencyType","window","onload","requestAnimationFrame"],"mappings":"AAAA,CAAA,SAAAA,EAAAC,EAAAC,EAAAC,GAAA,SAAAC,EAAAC,EAAAC,GAAA,GAAA,CAAAJ,EAAAG,GAAA,CAAA,GAAA,CAAAJ,EAAAI,GAAA,CAAA,IAAAE,EAAA,YAAA,OAAAC,SAAAA,QAAA,GAAA,CAAAF,GAAAC,EAAA,OAAAA,EAAAF,EAAA,CAAA,CAAA,EAAA,GAAAI,EAAA,OAAAA,EAAAJ,EAAA,CAAA,CAAA,EAAA,MAAAK,EAAA,IAAAC,MAAA,uBAAAN,EAAA,GAAA,GAAAO,KAAA,mBAAAF,CAAA,CAAAG,EAAAX,EAAAG,GAAA,CAAAS,QAAA,EAAA,EAAAb,EAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,OAAAI,EAAAH,EAAAI,GAAA,GAAAL,IAAAA,CAAA,CAAA,EAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,CAAA,CAAA,CAAA,OAAAD,EAAAG,GAAAS,OAAA,CAAA,IAAA,IAAAL,EAAA,YAAA,OAAAD,SAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,CAAA,GAAAD,EAAAD,EAAAE,EAAA,EAAA,OAAAD,CAAA,EAAA,CAAAa,EAAA,CAAA,SAAAT,EAAAU,EAAAJ,GCAAA,EAAAK,QAAA,SAAAhB,GAAA,IAAAH,GAAAG,EAAA,GAAA,IAAA,IAAAC,EAAAD,EAAA,GAAA,IAAAH,EAAAE,EAAAF,EAAAG,EAAA,GAAA,IAAAiB,EAAA,CAAA,OAAAhB,EAAA,QAAA,QAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GAAAA,EAAA,GAAA,KAAA,QAAA,QAAAJ,EAAA,QAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GAAAA,EAAA,GAAA,KAAA,OAAA,OAAAE,EAAA,SAAA,QAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GAAAA,EAAA,GAAA,KAAA,QAAAmB,EAAA,MAAAjB,EAAA,CAAA,KAAAJ,EAAA,MAAAE,EAAAQ,EAAA,UAAAA,EAAA,OAAAN,EAAA,CAAA,OAAAJ,EAAA,CAAA,MAAAE,GAAA,MAAAoB,KAAAC,IAAAb,EAAA,EAAA,GAAA,EAAA,KAAA,MAAAA,EAAA,OAAAU,EAAA,SAAAA,EAAA,MAAAE,KAAAC,IAAAH,EAAA,EAAA,GAAA,EAAA,KAAA,MAAAA,EAAAC,EAAA,SAAAA,EAAA,MAAAC,KAAAC,IAAAF,EAAA,EAAA,GAAA,EAAA,KAAA,MAAAA,EAAA,CAAA,IAAAC,KAAAE,IAAA,EAAAF,KAAAG,IAAA,EAAAf,CAAA,CAAA,EAAA,IAAAY,KAAAE,IAAA,EAAAF,KAAAG,IAAA,EAAAL,CAAA,CAAA,EAAA,IAAAE,KAAAE,IAAA,EAAAF,KAAAG,IAAA,EAAAJ,CAAA,CAAA,EAAA,EAAAP,EAAAY,QAAA,SAAAvB,GAAA,IAAAH,EAAAG,EAAA,GAAA,IAAAC,EAAAD,EAAA,GAAA,IAAAD,EAAAC,EAAA,GAAA,IAAAiB,EAAA,OAAApB,EAAA,OAAAA,EAAAsB,KAAAC,KAAA,KAAAvB,GAAA,MAAA,GAAA,EAAAA,EAAA,OAAA,OAAAI,EAAA,OAAAA,EAAAkB,KAAAC,KAAA,KAAAnB,GAAA,MAAA,GAAA,EAAAA,EAAA,OAAA,OAAAF,EAAA,OAAAA,EAAAoB,KAAAC,KAAA,KAAArB,GAAA,MAAA,GAAA,EAAAA,EAAA,OAAAmB,GAAA,MAAArB,EAAA,MAAAI,EAAA,MAAAF,GAAA,QAAAQ,EAAA,SAAAA,GAAA,MAAAV,EAAA,MAAAI,EAAA,MAAAF,GAAA,QAAAoB,KAAAC,IAAAb,EAAA,EAAA,CAAA,EAAA,MAAAA,EAAA,GAAA,IAAA,MAAA,CAAA,KAAAU,EAAA,QAAAA,EAAAE,KAAAC,IAAAH,EAAA,EAAA,CAAA,EAAA,MAAAA,EAAA,GAAA,KAAA,GAAA,KAAAV,EAAAU,GAAA,KAAAA,GAAA,QAAAC,EAAAC,KAAAC,IAAAF,EAAA,EAAA,CAAA,EAAA,MAAAA,EAAA,GAAA,MAAA,EAAAP,EAAAa,OAAA,SAAAxB,EAAAO,GAAA,IAAAU,EAAAjB,EAAA,GAAAO,EAAA,GAAAW,EAAAlB,EAAA,GAAAO,EAAA,GAAAV,EAAAG,EAAA,GAAAO,EAAA,GAAAN,EAAAkB,KAAAM,KAAAzB,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,EAAA,EAAAD,EAAAE,EAAAkB,KAAAM,KAAAlB,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,EAAA,EAAAG,EAAAQ,EAAAA,EAAArB,EAAAA,EAAAE,EAAAA,EAAA2B,EAAAT,EAAAnB,EAAAC,GAAA,EAAA,KAAAE,GAAA0B,GAAAjB,EAAA,EAAA,EAAAS,KAAAM,KAAAf,CAAA,IAAA,EAAA,KAAAT,GAAAC,EAAAwB,EAAAA,EAAA5B,EAAAA,EAAA6B,EAAAA,EAAA,OAAAzB,EAAA,EAAA,EAAAiB,KAAAM,KAAAvB,CAAA,CAAA,CAEA,EAAA,IAAA0B,EAAA,CAAA,SAAAvB,EAAAU,EAAAJ,G,8DCFA,MAAAkB,EAAAxB,EAAA,SAAA,EAGAyB,EAAAzB,EAAA,QAAA,QAEqB0B,EAgrBnBC,YAAYlC,EAA6BS,EAAY0B,EAAYlC,GAC/D,GANFmC,KAAArC,EAAI,EACJqC,KAAAC,EAAI,EACJD,KAAAE,EAAI,EACJF,KAAA3B,EAAI,EAqCJ2B,KAAAG,oBAAsB,KACpB,KAAA,CAAMxC,EAAEC,EAACqC,EAAE5B,EAAC6B,EAAEH,CAAA,EAAMC,KAEdnC,GAAA,EAAM8B,EAAAN,SAAQ,CAACzB,EAAGS,EAAG0B,EAAA,EAE3BK,IAAIhC,EAAiB,IACjBT,EAAmB,GAWvB,OATAkC,EAAMQ,eAAeC,QAAS1C,IAC5B,IAAMS,GAAA,EAASsB,EAAAL,QAAUzB,EAAKD,EAAW2C,KAAA,EAErClC,EAASD,IACXA,EAAiBC,EACjBV,EAAmBC,EAAW4C,KAAA,CAAA,EAI3B7C,CAAA,EAgCDqC,KAAAS,IAAO7C,IAAmB,IAAMqB,KAAKyB,MAAM9C,CAAA,EAAO+C,SAAS,EAAA,GAAKC,MAAA,CAAO,CAAA,EAcvEZ,KAAAa,OAAS,KACf,GAAA,CAAMlD,EAAEC,EAACqC,EAAE5B,EAAC6B,EAAEH,CAAA,EAAMC,KAEdnC,EAAKD,EAAI,IACTQ,EAAKC,EAAI,IACTV,EAAKoC,EAAI,IAETjC,EAAMmB,KAAKE,IAAItB,EAAIO,EAAIT,CAAA,EACvBmD,EAAM7B,KAAKG,IAAIvB,EAAIO,EAAIT,CAAA,EACvBI,EAAQD,EAAMgD,EAEpBV,IAAIW,EAAK/C,EAAWyB,EAsBpB,OAnBiBsB,EAAH,GAAVhD,EAAmB,EACdF,IAAOC,GAAaM,EAAKT,GAAMI,EAAS,EACxCK,IAAON,GAAYH,EAAKE,GAAME,EAAQ,GACnCF,EAAKO,GAAML,EAAQ,GAE/BgD,EAAM9B,KAAKyB,MAAY,GAANK,CAAA,GAEP,IAAGA,GAAO,KAGpB/C,GAAaF,EAAMgD,GAAO,EAGTrB,EAAH,GAAV1B,EAA0B,EACZA,GAAS,EAAIkB,KAAK+B,IAAI,EAAIhD,EAAY,CAAA,GAExDA,GAAA,EAAY4B,EAAAc,OAAkB,IAAZ1C,EAAiB,CAAA,EAG5B,CAAC+C,GAFR,EAAanB,EAAAc,OAAmB,IAAbjB,EAAkB,CAAA,EAEZzB,EAAA,EAlIA,IAArBiD,UAAUtC,OAAc,CAC1B,GAAIf,aAAaiC,EAAO,OAAO,IAAIA,EAAA,GAASjC,EAAEsD,IAAA,EAE9C,GAAiB,UAAA,OAANtD,GAA2B,MAATA,EAAE,GAAY,CACzCwC,IAAI/B,EAAMT,EAaV,OAXmF,KAEhE,KAFGS,EAAH,IAAfA,EAAIM,OAAoB,IAAMN,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAE/EA,GAAIM,QAA+B,IAAfN,EAAIM,SAC1BqB,KAAKrC,EAAIwD,SAAS9C,EAAI,GAAKA,EAAI,GAAI,EAAA,EACnC2B,KAAKC,EAAIkB,SAAS9C,EAAI,GAAKA,EAAI,GAAI,EAAA,EACnC2B,KAAKE,EAAIiB,SAAS9C,EAAI,GAAKA,EAAI,GAAI,EAAA,EAEhB,IAAfA,EAAIM,OAAcqB,KAAK3B,EAAI8C,SAAS9C,EAAI,GAAKA,EAAI,GAAI,EAAA,EACpD2B,KAAK3B,EAAI,KAAA,CAAA,CAOK,IAArB4C,UAAUtC,QAAqC,IAArBsC,UAAUtC,SAChCP,EAAa,MAALP,EAAY,IAAMA,EAEf,UAAA,OAAND,GAA+B,UAAA,OAANS,GAA+B,UAAA,OAAN0B,IAC3DC,KAAKrC,EAAIC,EACToC,KAAKC,EAAI5B,EACT2B,KAAKE,EAAIH,GAGXC,KAAK3B,EAAID,EAAA,CAwBbgD,UACE,GAAA,CAAMzD,EAAEC,EAACqC,EAAE5B,EAAC6B,EAAEH,CAAA,EAAMC,KAEpB,MAAO,CAACpC,EAAGS,EAAG0B,EAAA,CAGhBmB,WACE,GAAA,CAAMvD,EAAEC,EAACqC,EAAE5B,EAAC6B,EAAEH,EAAC1B,EAAER,CAAA,EAAMmC,KAEvB,MAAO,CAACpC,EAAGS,EAAG0B,EAAGlC,EAAA,CAGnBwD,QACE,GAAA,CAAM1D,EAAEC,EAACqC,EAAE5B,EAAC6B,EAAEH,CAAA,EAAMC,KAIpB,aAFY,CAACpC,EAAGS,EAAG0B,GAAGuB,IAAK1D,GAAUqB,KAAKyB,MAAM9C,CAAA,CAAA,EAE9B2D,KAAK,IAAA,IAAA,CAGzBC,SACE,GAAA,CAAM7D,EAAEC,EAACqC,EAAE5B,EAAC6B,EAAEH,EAAC1B,EAAER,CAAA,EAAMmC,KAEjB5B,EAAO,CAACR,EAAGS,EAAG0B,GAAGuB,IAAK1D,GAAUqB,KAAKyB,MAAM9C,CAAA,CAAA,EAGjD,OAFAQ,EAAKqD,MAAA,EAAK7B,EAAAc,OAAM7C,EAAI,IAAK,CAAA,CAAA,UAEVO,EAAKmD,KAAK,IAAA,IAAA,CAK3BG,SACE,GAAA,CAAM/D,EAAEC,EAACqC,EAAE5B,EAAC6B,EAAEH,EAACU,IAAE5C,CAAA,EAAQmC,KAEzB,MAAO,IAAMnC,EAAID,CAAA,EAAKC,EAAIQ,CAAA,EAAKR,EAAIkC,CAAA,CAAA,CAGrC4B,SACE,GAAA,CAAMhE,EAAEC,EAACqC,EAAE5B,EAAC6B,EAAEH,EAAC1B,EAAER,EAAC4C,IAAErC,CAAA,EAAQ4B,KAE5B,MAAO,IAAM5B,EAAIR,CAAA,EAAKQ,EAAIC,CAAA,EAAKD,EAAI2B,CAAA,EAAK3B,EAAIP,CAAA,CAAA,CAuC9C+D,QACE,GAAA,CAAOhE,EAAKS,EAAY0B,GAAaC,KAAKa,OAAA,EAE1C,aAAcjD,MAAQS,OAAgB0B,KAAA,CAGxC8B,SACE,IAAQjE,EAAMoC,KAAR3B,KAAQ,CAEPA,EAAK0B,EAAYlC,GAAamC,KAAKa,OAAA,EAI1C,cAAexC,MAAQ0B,OAAgBlC,QAAA,EAFzB+B,EAAAc,OAAM9C,EAAI,IAAK,CAAA,IAAA,CAAA,CAh0BxBiC,EAAAiC,cAAgB,CAAA,GAAIC,MAAM,GAAA,EAAKC,KAAA,GAAQV,IAAK1D,GAAUA,EAAQA,CAAA,EAE9DiC,EAAAQ,eAAiB,CACtB,CACEG,KAAM,YACND,MAAO,CAAC,MAAA,CAAQ,KAAA,CAAO,KAAA,EAEzB,CACEC,KAAM,eACND,MAAO,CAAC,MAAO,KAAM,MAAA,EAEvB,CACEC,KAAM,OACND,MAAO,CAAC,MAAA,CAAQ,MAAA,CAAQ,MAAA,EAE1B,CACEC,KAAM,aACND,MAAO,CAAC,MAAA,CAAQ,MAAO,KAAA,EAEzB,CACEC,KAAM,QACND,MAAO,CAAC,MAAA,CAAQ,KAAA,CAAO,IAAA,EAEzB,CACEC,KAAM,QACND,MAAO,CAAC,MAAA,CAAQ,KAAM,MAAA,EAExB,CACEC,KAAM,SACND,MAAO,CAAC,MAAO,KAAM,GAAA,EAEvB,CACEC,KAAM,QACND,MAAO,CAAC,EAAG,EAAG,EAAA,EAEhB,CACEC,KAAM,iBACND,MAAO,CAAC,MAAO,KAAM,MAAA,EAEvB,CACEC,KAAM,OACND,MAAO,CAAC,KAAM,KAAA,CAAO,OAAA,EAEvB,CACEC,KAAM,aACND,MAAO,CAAC,MAAO,MAAA,CAAQ,MAAA,EAEzB,CACEC,KAAM,QACND,MAAO,CAAC,MAAO,KAAM,MAAA,EAEvB,CACEC,KAAM,YACND,MAAO,CAAC,MAAO,KAAM,MAAA,EAEvB,CACEC,KAAM,YACND,MAAO,CAAC,MAAA,CAAQ,MAAA,CAAQ,KAAA,EAE1B,CACEC,KAAM,aACND,MAAO,CAAC,MAAA,CAAQ,MAAO,MAAA,EAEzB,CACEC,KAAM,YACND,MAAO,CAAC,MAAO,MAAO,MAAA,EAExB,CACEC,KAAM,QACND,MAAO,CAAC,MAAO,MAAO,MAAA,EAExB,CACEC,KAAM,iBACND,MAAO,CAAC,MAAO,KAAA,CAAO,MAAA,EAExB,CACEC,KAAM,WACND,MAAO,CAAC,MAAA,CAAQ,KAAM,MAAA,EAExB,CACEC,KAAM,UACND,MAAO,CAAC,MAAO,MAAO,MAAA,EAExB,CACEC,KAAM,OACND,MAAO,CAAC,MAAA,CAAQ,MAAA,CAAQ,MAAA,EAE1B,CACEC,KAAM,WACND,MAAO,CAAC,MAAO,MAAA,CAAQ,MAAA,EAEzB,CACEC,KAAM,WACND,MAAO,CAAC,MAAA,CAAQ,MAAA,CAAQ,EAAA,EAE1B,CACEC,KAAM,gBACND,MAAO,CAAC,MAAO,KAAM,MAAA,EAEvB,CACEC,KAAM,WACND,MAAO,CAAC,MAAO,EAAA,CAAI,IAAA,EAErB,CACEC,KAAM,YACND,MAAO,CAAC,KAAA,CAAO,MAAO,MAAA,EAExB,CACEC,KAAM,WACND,MAAO,CAAC,MAAO,EAAA,CAAI,IAAA,EAErB,CACEC,KAAM,YACND,MAAO,CAAC,MAAA,CAAQ,KAAM,MAAA,EAExB,CACEC,KAAM,cACND,MAAO,CAAC,KAAM,MAAA,CAAQ,MAAA,EAExB,CACEC,KAAM,iBACND,MAAO,CAAC,MAAA,CAAQ,MAAO,KAAA,EAEzB,CACEC,KAAM,aACND,MAAO,CAAC,MAAO,MAAO,MAAA,EAExB,CACEC,KAAM,aACND,MAAO,CAAC,MAAO,MAAA,CAAQ,MAAA,EAEzB,CACEC,KAAM,UACND,MAAO,CAAC,MAAO,MAAO,MAAA,EAExB,CACEC,KAAM,aACND,MAAO,CAAC,MAAO,MAAO,KAAA,EAExB,CACEC,KAAM,eACND,MAAO,CAAC,MAAA,CAAQ,MAAO,MAAA,EAEzB,CACEC,KAAM,gBACND,MAAO,CAAC,MAAO,MAAA,CAAQ,MAAA,EAEzB,CACEC,KAAM,gBACND,MAAO,CAAC,MAAA,CAAQ,MAAA,CAAQ,KAAA,EAE1B,CACEC,KAAM,gBACND,MAAO,CAAC,MAAA,CAAQ,MAAA,CAAQ,KAAA,EAE1B,CACEC,KAAM,gBACND,MAAO,CAAC,MAAA,CAAQ,MAAA,CAAQ,MAAA,EAE1B,CACEC,KAAM,aACND,MAAO,CAAC,MAAO,MAAA,CAAQ,MAAA,EAEzB,CACEC,KAAM,WACND,MAAO,CAAC,MAAO,MAAA,CAAQ,KAAA,EAEzB,CACEC,KAAM,cACND,MAAO,CAAC,MAAA,CAAQ,MAAA,CAAQ,MAAA,EAE1B,CACEC,KAAM,UACND,MAAO,CAAC,MAAO,EAAA,CAAI,IAAA,EAErB,CACEC,KAAM,UACND,MAAO,CAAC,MAAO,EAAA,CAAI,IAAA,EAErB,CACEC,KAAM,aACND,MAAO,CAAC,MAAO,KAAA,CAAO,MAAA,EAExB,CACEC,KAAM,YACND,MAAO,CAAC,MAAO,MAAO,MAAA,EAExB,CACEC,KAAM,cACND,MAAO,CAAC,KAAA,CAAO,IAAM,KAAA,EAEvB,CACEC,KAAM,cACND,MAAO,CAAC,MAAA,CAAQ,MAAO,MAAA,EAEzB,CACEC,KAAM,UACND,MAAO,CAAC,MAAO,MAAA,CAAQ,MAAA,EAEzB,CACEC,KAAM,YACND,MAAO,CAAC,MAAO,EAAA,CAAI,IAAA,EAErB,CACEC,KAAM,aACND,MAAO,CAAC,MAAO,KAAA,CAAO,KAAA,EAExB,CACEC,KAAM,OACND,MAAO,CAAC,MAAA,CAAQ,KAAM,MAAA,EAExB,CACEC,KAAM,YACND,MAAO,CAAC,MAAO,KAAM,MAAA,EAEvB,CACEC,KAAM,OACND,MAAO,CAAC,MAAO,EAAA,CAAI,IAAA,EAErB,CACEC,KAAM,QACND,MAAO,CAAC,MAAA,CAAQ,KAAM,KAAA,EAExB,CACEC,KAAM,cACND,MAAO,CAAC,MAAA,CAAQ,MAAO,MAAA,EAEzB,CACEC,KAAM,OACND,MAAO,CAAC,MAAO,EAAA,CAAI,IAAA,EAErB,CACEC,KAAM,WACND,MAAO,CAAC,MAAA,CAAQ,KAAM,KAAA,EAExB,CACEC,KAAM,UACND,MAAO,CAAC,MAAO,MAAA,CAAQ,MAAA,EAEzB,CACEC,KAAM,YACND,MAAO,CAAC,MAAO,MAAO,MAAA,EAExB,CACEC,KAAM,SACND,MAAO,CAAC,MAAO,MAAA,CAAQ,MAAA,EAEzB,CACEC,KAAM,QACND,MAAO,CAAC,MAAA,CAAQ,KAAM,KAAA,EAExB,CACEC,KAAM,QACND,MAAO,CAAC,MAAA,CAAQ,KAAM,MAAA,EAExB,CACEC,KAAM,WACND,MAAO,CAAC,MAAO,KAAA,CAAO,KAAA,EAExB,CACEC,KAAM,gBACND,MAAO,CAAC,MAAO,KAAA,CAAO,GAAA,EAExB,CACEC,KAAM,YACND,MAAO,CAAC,MAAA,CAAQ,MAAO,MAAA,EAEzB,CACEC,KAAM,eACND,MAAO,CAAC,MAAA,CAAQ,KAAM,MAAA,EAExB,CACEC,KAAM,YACND,MAAO,CAAC,MAAA,CAAQ,MAAA,CAAQ,MAAA,EAE1B,CACEC,KAAM,aACND,MAAO,CAAC,MAAO,MAAO,MAAA,EAExB,CACEC,KAAM,YACND,MAAO,CAAC,MAAA,CAAQ,KAAA,CAAO,KAAA,EAEzB,CACEC,KAAM,uBACND,MAAO,CAAC,MAAA,CAAQ,KAAM,MAAA,EAExB,CACEC,KAAM,YACND,MAAO,CAAC,MAAO,EAAA,CAAI,IAAA,EAErB,CACEC,KAAM,aACND,MAAO,CAAC,MAAA,CAAQ,MAAO,MAAA,EAEzB,CACEC,KAAM,YACND,MAAO,CAAC,MAAO,EAAA,CAAI,IAAA,EAErB,CACEC,KAAM,YACND,MAAO,CAAC,MAAO,MAAO,KAAA,EAExB,CACEC,KAAM,cACND,MAAO,CAAC,KAAM,MAAO,MAAA,EAEvB,CACEC,KAAM,gBACND,MAAO,CAAC,MAAA,CAAQ,MAAA,CAAQ,KAAA,EAE1B,CACEC,KAAM,eACND,MAAO,CAAC,MAAA,CAAQ,MAAA,CAAQ,MAAA,EAE1B,CACEC,KAAM,iBACND,MAAO,CAAC,MAAA,CAAQ,KAAA,CAAO,MAAA,EAEzB,CACEC,KAAM,iBACND,MAAO,CAAC,MAAA,CAAQ,KAAA,CAAO,MAAA,EAEzB,CACEC,KAAM,iBACND,MAAO,CAAC,MAAA,CAAQ,KAAA,CAAO,MAAA,EAEzB,CACEC,KAAM,cACND,MAAO,CAAC,MAAA,CAAQ,IAAK,MAAA,EAEvB,CACEC,KAAM,OACND,MAAO,CAAC,MAAA,CAAQ,MAAO,MAAA,EAEzB,CACEC,KAAM,YACND,MAAO,CAAC,MAAA,CAAQ,MAAO,MAAA,EAEzB,CACEC,KAAM,QACND,MAAO,CAAC,MAAO,KAAM,KAAA,EAEvB,CACEC,KAAM,UACND,MAAO,CAAC,MAAO,MAAA,CAAQ,MAAA,EAEzB,CACEC,KAAM,SACND,MAAO,CAAC,MAAO,MAAO,MAAA,EAExB,CACEC,KAAM,mBACND,MAAO,CAAC,MAAA,CAAQ,MAAO,IAAA,EAEzB,CACEC,KAAM,aACND,MAAO,CAAC,MAAO,MAAA,CAAQ,KAAA,EAEzB,CACEC,KAAM,eACND,MAAO,CAAC,MAAO,MAAA,CAAQ,MAAA,EAEzB,CACEC,KAAM,eACND,MAAO,CAAC,MAAO,MAAA,CAAQ,KAAA,EAEzB,CACEC,KAAM,iBACND,MAAO,CAAC,MAAA,CAAQ,MAAO,MAAA,EAEzB,CACEC,KAAM,kBACND,MAAO,CAAC,MAAO,MAAA,CAAQ,MAAA,EAEzB,CACEC,KAAM,oBACND,MAAO,CAAC,MAAA,CAAQ,MAAO,MAAA,EAEzB,CACEC,KAAM,kBACND,MAAO,CAAC,MAAA,CAAQ,MAAA,CAAQ,KAAA,EAE1B,CACEC,KAAM,kBACND,MAAO,CAAC,MAAO,MAAA,CAAQ,MAAA,EAEzB,CACEC,KAAM,eACND,MAAO,CAAC,MAAO,MAAA,CAAQ,MAAA,EAEzB,CACEC,KAAM,YACND,MAAO,CAAC,MAAA,CAAQ,KAAM,KAAA,EAExB,CACEC,KAAM,YACND,MAAO,CAAC,MAAO,KAAM,KAAA,EAEvB,CACEC,KAAM,WACND,MAAO,CAAC,MAAO,KAAM,MAAA,EAEvB,CACEC,KAAM,cACND,MAAO,CAAC,KAAM,KAAM,MAAA,EAEtB,CACEC,KAAM,OACND,MAAO,CAAC,MAAO,MAAA,CAAQ,KAAA,EAEzB,CACEC,KAAM,UACND,MAAO,CAAC,MAAO,IAAM,KAAA,EAEvB,CACEC,KAAM,QACND,MAAO,CAAC,MAAA,CAAQ,MAAO,MAAA,EAEzB,CACEC,KAAM,YACND,MAAO,CAAC,MAAA,CAAQ,MAAO,MAAA,EAEzB,CACEC,KAAM,SACND,MAAO,CAAC,MAAO,MAAO,MAAA,EAExB,CACEC,KAAM,YACND,MAAO,CAAC,MAAO,KAAM,MAAA,EAEvB,CACEC,KAAM,SACND,MAAO,CAAC,KAAM,MAAA,CAAQ,MAAA,EAExB,CACEC,KAAM,gBACND,MAAO,CAAC,MAAA,CAAQ,KAAM,MAAA,EAExB,CACEC,KAAM,YACND,MAAO,CAAC,MAAA,CAAQ,KAAM,MAAA,EAExB,CACEC,KAAM,gBACND,MAAO,CAAC,MAAA,CAAQ,MAAA,CAAQ,KAAA,EAE1B,CACEC,KAAM,gBACND,MAAO,CAAC,MAAO,MAAO,IAAA,EAExB,CACEC,KAAM,aACND,MAAO,CAAC,MAAO,KAAM,MAAA,EAEvB,CACEC,KAAM,YACND,MAAO,CAAC,MAAO,KAAM,MAAA,EAEvB,CACEC,KAAM,OACND,MAAO,CAAC,MAAO,KAAM,MAAA,EAEvB,CACEC,KAAM,OACND,MAAO,CAAC,MAAO,MAAO,KAAA,EAExB,CACEC,KAAM,OACND,MAAO,CAAC,MAAO,MAAA,CAAQ,GAAA,EAEzB,CACEC,KAAM,aACND,MAAO,CAAC,MAAA,CAAQ,MAAA,CAAQ,KAAA,EAE1B,CACEC,KAAM,SACND,MAAO,CAAC,MAAO,MAAA,CAAQ,KAAA,EAEzB,CACEC,KAAM,MACND,MAAO,CAAC,MAAO,MAAO,MAAA,EAExB,CACEC,KAAM,YACND,MAAO,CAAC,MAAO,MAAO,IAAA,EAExB,CACEC,KAAM,YACND,MAAO,CAAC,MAAO,MAAA,CAAQ,MAAA,EAEzB,CACEC,KAAM,cACND,MAAO,CAAC,MAAO,MAAO,MAAA,EAExB,CACEC,KAAM,SACND,MAAO,CAAC,MAAO,MAAO,MAAA,EAExB,CACEC,KAAM,aACND,MAAO,CAAC,MAAO,MAAO,MAAA,EAExB,CACEC,KAAM,WACND,MAAO,CAAC,MAAA,CAAQ,MAAO,MAAA,EAEzB,CACEC,KAAM,WACND,MAAO,CAAC,MAAO,KAAM,KAAA,EAEvB,CACEC,KAAM,SACND,MAAO,CAAC,KAAM,MAAO,MAAA,EAEvB,CACEC,KAAM,SACND,MAAO,CAAC,KAAM,EAAA,CAAI,IAAA,EAEpB,CACEC,KAAM,UACND,MAAO,CAAC,MAAA,CAAQ,MAAA,CAAQ,MAAA,EAE1B,CACEC,KAAM,YACND,MAAO,CAAC,MAAO,MAAA,CAAQ,MAAA,EAEzB,CACEC,KAAM,YACND,MAAO,CAAC,MAAA,CAAQ,KAAA,CAAO,MAAA,EAEzB,CACEC,KAAM,YACND,MAAO,CAAC,MAAA,CAAQ,KAAA,CAAO,MAAA,EAEzB,CACEC,KAAM,OACND,MAAO,CAAC,MAAO,KAAM,IAAA,EAEvB,CACEC,KAAM,cACND,MAAO,CAAC,MAAA,CAAQ,KAAM,MAAA,EAExB,CACEC,KAAM,YACND,MAAO,CAAC,MAAA,CAAQ,KAAA,CAAO,KAAA,EAEzB,CACEC,KAAM,MACND,MAAO,CAAC,MAAO,KAAM,MAAA,EAEvB,CACEC,KAAM,OACND,MAAO,CAAC,MAAA,CAAQ,MAAA,CAAQ,KAAA,EAE1B,CACEC,KAAM,UACND,MAAO,CAAC,MAAO,MAAA,CAAQ,KAAA,EAEzB,CACEC,KAAM,SACND,MAAO,CAAC,KAAM,MAAO,MAAA,EAEvB,CACEC,KAAM,YACND,MAAO,CAAC,MAAA,CAAQ,MAAA,CAAQ,KAAA,EAE1B,CACEC,KAAM,SACND,MAAO,CAAC,MAAO,MAAA,CAAQ,MAAA,EAEzB,CACEC,KAAM,QACND,MAAO,CAAC,MAAO,KAAM,GAAA,EAEvB,CACEC,KAAM,QACND,MAAO,CAAC,IAAK,IAAA,CAAO,IAAA,EAEtB,CACEC,KAAM,aACND,MAAO,CAAC,MAAO,IAAA,CAAO,IAAA,EAExB,CACEC,KAAM,SACND,MAAO,CAAC,MAAA,CAAQ,MAAO,MAAA,EAEzB,CACEC,KAAM,cACND,MAAO,CAAC,MAAA,CAAQ,MAAO,MAAA,GAIpBV,EAAAoC,cAAgB,CAACrE,EAAiBS,KACvC,MAAM0B,EAAkB1B,EAAQ6D,gBAC1BrE,EAAiBD,EAAOe,OAExBP,EAAO,IAAIyB,EACXlC,EAAS,IAAIkC,EAEnB,GAAuB,IAAnBhC,EAAJ,CAEA,IAAMC,EAAgB,CAAC,IAAK,IAAK,IAAK,KAEtC,IAAKsC,IAAI/B,EAAI,EAAGA,EAAIP,EAAca,OAAQN,CAAA,GAAK,CAC7C,IAAMyC,EAAUhD,EAAcO,GAExBN,EAAS,GAEf,IAAKqC,IAAI/B,EAAI,EAAGA,EAAIT,EAAOe,OAAQN,CAAA,GAAKN,EAAO0D,KAAK7D,EAAOS,GAAGyC,EAAA,EAE9D,IAAMC,EAAehD,EAAOoE,KAAA,EAE5B,GAAwB,YAApBpC,EAA+B,CACjCK,IAAIxC,EAAoB,EAExB,IAAKwC,IAAI/B,EAAI,EAAGA,EAAIN,EAAOY,OAAQN,CAAA,GAAKT,GAAqBiC,EAAMiC,cAAc/D,EAAOM,IAExF,MAAMA,EAAmBT,EAAoBC,EACvCkC,EAAYd,KAAKM,KAAKlB,CAAA,EAE5BD,EAAK0C,GAAWf,CAAA,CAGlB,GAAwB,WAApBA,EAA8B,CAChCK,IAAIxC,EAAa,EAEjB,IAAKwC,IAAI/B,EAAI,EAAGA,EAAIN,EAAOY,OAAQN,CAAA,GAAKT,GAAcG,EAAOM,GAE7D,MAAMA,EAAYT,EAAaC,EAE/BO,EAAK0C,GAAWzC,CAAA,CAGlB,IAAML,EAAciB,KAAKmD,MAAMrB,EAAapC,OAAS,CAAA,EAErDhB,EAAOmD,GAAWC,EAAa/C,EAAA,CApCO,CAuCxC,MAAO,CAACI,EAAMT,EAAA,EAGTkC,EAAAwC,mBAAsBzE,IAC3B,GAAsB,IAAlBA,EAAOe,OAAc,MAAO,CAAC,IAAIkB,EAAS,IAAIA,GAElD,MAAMxB,EAAgBT,GAChBA,GAAW,OAAgBA,EAAU,MAElCqB,KAAKC,KAAKtB,EAAU,MAAS,MAAO,GAAA,EAGvCmC,EAAkBnC,EAAO0D,IAAK1D,IAK5BmC,EAAY,MAJP1B,EAAaT,EAAMD,EAAI,GAAA,EAIF,MAHrBU,EAAaT,EAAMqC,EAAI,GAAA,EAGY,MAFnC5B,EAAaT,EAAMsC,EAAI,GAAA,EAIlC,OAAIH,GAAa,IAAM,MAA2B,MAAQ,GAArBA,EACD,IAA7Bd,KAAKC,IAAIa,EAAW,EAAI,CAAA,EAAW,EAAA,CAAA,EAGtClC,EAAiBoB,KAAKE,IAAA,GAAOY,CAAA,EAC7B3B,EAAea,KAAKG,IAAA,GAAOW,CAAA,EAE3BpC,EAAgBoC,EAAgBuC,QAAQzE,CAAA,EACxCC,EAAeiC,EAAgBuC,QAAQlE,CAAA,EAE7C,MAAO,CAAC,IAAIyB,EAAMjC,EAAOD,EAAA,EAAiB,IAAIkC,EAAMjC,EAAOE,EAAA,EAAA,EAGtD+B,EAAA0C,YAAc,CAAC3E,EAAmBS,KACvC,MAAM0B,EAAgB1B,EAAWA,EAAI,IAC/BR,EAAgB,EAAIkC,EAIpB3B,EAFW,CAAC,IAAK,IAAK,KAEPkD,IAAKlD,GAAMR,EAAWQ,GAAKP,EAAgBQ,EAAWD,GAAK2B,CAAA,EAEhF,OAAO,IAAIF,EAAA,GAASzB,CAAA,CAAA,EAAAK,EAAA+D,QAxqBH3C,C,6GCWrBpB,EAAA+D,4BAbE1C,cACE,OAAO,IAAI2C,MAAMzC,KAA4B,CAC3C0C,IAAK,CAAC9E,EAAQE,KACZ,IAAMO,EAAQT,EAAO+E,aAAa7E,EAAK6C,SAAA,GAEvC,OAAItC,EAAcA,EAAMkC,MAEjB3C,EAAOE,EAAA,CAAA,CAAA,CAAA,CAAA,EAiBpBgC,YAAYlC,EAAwDE,GAClE8E,MAAA,EAeF5C,KAAA6C,eAAiB,CAACjF,EAAcE,KAC9B,IAMMC,EANN,CAAM4E,aAAEtE,EAAYyE,4BAAErD,EAA2BsD,SAAEpF,CAAA,EAAaqC,KAE1DnC,EAAQQ,EAAaT,GAEtBC,IAECE,EAAuB0B,EAA4B7B,GAErDD,GAAUE,EAAMmF,oBAAoB,SAAUrF,CAAA,EAC9CI,GAAsBF,EAAMmF,oBAAoB,SAAUjF,CAAA,EAE9DF,EAAMoF,iBAAiB,SAAUnF,CAAA,EAE7BH,GAAUE,EAAMoF,iBAAiB,SAAUtF,CAAA,EAE/C8B,EAA4B7B,GAAQE,EAAA,EAGtCkC,KAAAkD,gCAAkC,KAChC,KAAA,CAAMC,WAAEvF,EAAUkF,4BAAEhF,CAAA,EAAgCkC,KAEpDpC,EAAW0C,QAAS1C,IACZS,EAAuBP,EAA4BF,EAAM4C,MAE3DnC,GAAsBA,EAAA,CAAA,CAAA,CAAA,EAI9B2B,KAAAoD,KAAO,KACL,IAAQxF,EAAeoC,KAAjBmD,cAEArF,EAAgBF,EAAWyF,OAAO,CAACzF,EAAeE,KACnC,SAAfA,EAAMwF,OAAiB1F,EAAcE,EAAM0C,MAAQ1C,EAAMyC,OAEtD3C,GACN,EAAA,EAEH2F,aAAaC,QAAQ,UAAWC,KAAKC,UAAU5F,CAAA,CAAA,CAAA,EAGjDkC,KAAA2D,QAAU,KACR,IAAQ/F,EAAeoC,KAAjBmD,cACArF,EAAgByF,aAAaK,QAAQ,SAAA,EAE3C,GAAK9F,EAEL,IACE,MAAMO,EAAgBoF,KAAKI,MAAM/F,CAAA,EAEjCF,EAAW0C,QAAS1C,IACdS,EAAcT,EAAM4C,QAAO5C,EAAM2C,MAAQlC,EAAcT,EAAM4C,MAAA,CAAA,CAG3C,CADxB,MAAO5C,GACP2F,aAAaO,WAAW,SAAA,CAAA,CAAA,EAnE1B9D,KAAKmD,WAAavF,EAClBoC,KAAK2C,aAAe,GACpB3C,KAAK8C,4BAA8B,GAEnClF,EAAa0C,QAAS1C,IACpBoC,KAAK2C,aAAa/E,EAAM4C,MAAQ5C,CAAA,CAAA,EAG9BE,IAAUkC,KAAK+D,SAAWjG,GAE9BkC,KAAK2D,QAAA,CAAA,CA6DPI,aAAanG,GACX,KAAA,CAAMuF,WAAErF,EAAUiF,SAAE1E,CAAA,EAAa2B,KAEjClC,EAAWwC,QAASxC,IACdO,GAAUP,EAAMkF,oBAAoB,SAAU3E,CAAA,EAClDP,EAAMmF,iBAAiB,SAAUrF,CAAA,CAAA,CAAA,EAGnCoC,KAAK+C,SAAWnF,CAAA,CAAA,C,uFC7GpB,MAAAoG,EAAA7F,EAAA,SAAA,EACAyB,EAAAzB,EAAA,QAAA,EAEAM,EAAA+D,cAWE1C,YAAYlC,EAAmCE,GAiB/CkC,KAAAiE,iBAAmB,KACjB,KAAA,CAAMC,SAAEtG,EAAQuG,MAAErG,CAAA,EAAUkC,KAEtB3B,EAAa,IAAI+F,WAQvB,GANA/F,EAAW4E,iBAAiB,OAASrF,IACnC,GAAA,CAAKA,EAAEyG,QAAA,CAAWzG,EAAEyG,OAAOC,OAAQ,KAAM,gCAEzCxG,EAAMyG,IAAM3G,EAAEyG,OAAOC,OAAO3D,SAAA,CAAA,CAAA,EAAA,CAGzB/C,EAAS4G,MAAO,KAAM,2DAE3BnG,EAAWoG,cAAc7G,EAAS4G,MAAM,EAAA,CAAA,EAG1CxE,KAAA0E,kBAAoB,KAClB,KAAA,CAAMC,QAAE/G,EAAOgH,QAAE9G,EAAOqG,MAAE9F,EAAKwG,QAAE9G,EAAO+G,gBAAE9G,CAAA,EAAoBgC,KAC9DI,GAAA,CAAI2E,MAAEhF,EAAKiF,OAAEvF,CAAA,EAAWpB,EAEnB0B,EAAAA,GAAe,IACfN,EAAAA,GAAiB,IAEtB,IAAM9B,EAAyBC,IAC7B,IAAME,EAAS,GAEf,IAAKsC,IAAI/B,EAAI,EAAGA,EAAIT,EAAUe,OAAQN,GAAK,EAAG,CAC5C,IAAMN,EAAIH,EAAUS,EAAI,GAClBL,EAAIJ,EAAUS,EAAI,GAClB0B,EAAInC,EAAUS,EAAI,GAClBoB,EAAI7B,EAAUS,EAAI,GAExBP,EAAO2D,KAAK,IAAIuC,EAAAxB,QAAMzE,EAAGC,EAAG+B,EAAGN,CAAA,CAAA,CAAA,CAGjC,OAAO3B,CAAA,EASHD,GANND,EAAQmH,MAAQhF,EAChBnC,EAAQoH,OAASvF,EAEjB3B,EAAQmH,UAAU,EAAG,EAAGlF,EAAON,CAAA,EAC/B3B,EAAQoH,UAAU7G,EAAO,EAAG,CAAA,EAEVP,EAAQqH,aAAa,EAAG,EAAGpF,EAAON,CAAA,GAC9C2F,EAASvH,EAAUwH,KAEzB,GAAe,MAAXtH,GAAsC,MAAnBC,EAErB,OADAgC,KAAKsF,OAAS3H,EAAsByH,CAAA,EAAA,CAAA,EAMtC,GAAe,MAAXrH,EAAiB,CACnB,IAAKqC,IAAIxC,EAAI,EAAGA,EAAIwH,EAAOzG,OAAQf,GAAK,EAAG,CACzC,MAAME,EAAQsH,EAAOxH,EAAI,GAAKG,EACxBM,GAAA,EAAeuB,EAAA2F,OAAMzH,EAAO,EAAG,GAAA,EAErCsH,EAAOxH,EAAI,GAAKS,CAAA,CAKlB,GAFAP,EAAQ0H,aAAa3H,EAAW,EAAG,CAAA,EAAA,CAE9BG,EAEH,OADAgC,KAAKsF,OAAS3H,EAAsByH,CAAA,EAAA,CAAA,CAC7B,CAMX,GAAuB,MAAnBpH,EAAyB,CAC3B,MAAMK,EAAkB,IAAIoH,gBAAgB1F,EAAON,CAAA,EAC7C1B,EAAmBM,EAAgBqH,WAAW,IAAA,EAEpD,GAAA,CAAK3H,EAAkB,KAAM,gDAE7BA,EAAiB4H,UAAY3H,EAAgBwD,OAAA,EAC7CzD,EAAiB6H,SAAS,EAAG,EAAG7F,EAAON,CAAA,EACvC1B,EAAiBmH,UAAUtH,EAAS,EAAG,CAAA,EAEvCE,EAAQoH,UAAU7G,EAAiB,EAAG,CAAA,EAEtC2B,KAAKsF,OAAS3H,EAAsBG,EAAQqH,aAAa,EAAG,EAAGpF,EAAON,CAAA,EAAQ4F,IAAA,CAAA,CAAA,EAIlFrF,KAAA6F,iBAAmB,KACjB7F,KAAKmE,MAAMI,IAAM,eAAA,EAGnBvE,KAAA8F,YAAc,CAAClI,EAAgBE,EAAgBO,EAAeN,KAC5D,GAAA,CAAM4G,QAAE3G,EAAOsH,OAAEvF,CAAA,EAAWC,KAEtBP,EAAe,GAErB,IAAKW,IAAIzC,EAAIG,EAAQH,EAAIG,EAASC,EAAQJ,CAAA,GACxC,IAAKyC,IAAItC,EAAIF,EAAQE,EAAIF,EAASS,EAAOP,CAAA,GAAK,CAC5C,MAAMF,EAAID,EAAIK,EAAQ+G,MAAQjH,EAE1BF,EAAI,GAAKA,EAAImC,EAAOpB,QAExBc,EAAagC,KAAK1B,EAAOnC,EAAA,CAAA,CAI7B,OAAO6B,CAAA,EAGTO,KAAA+F,mBAAsBnI,IACJ,IAAZA,EAAMS,EAAA,OAAgB2B,KAAK8E,gBAC1B9E,KAAK8E,gBAAkBlH,EAE5BoC,KAAK0E,kBAAA,CAAA,EAGP1E,KAAAgG,WAAcpI,IACI,IAAZA,EAAA,OAAsBoC,KAAK6E,QAC1B7E,KAAK6E,QAAUjH,EAEpBoC,KAAK0E,kBAAA,CAAA,EAzIL,IAAMrG,EAAQ,IAAI4H,MAQZlI,GAPNM,EAAM4E,iBAAiB,OAAQjD,KAAK0E,iBAAA,EAEpC5G,EAAgBmF,iBAAiB,SAAUjD,KAAKiE,gBAAA,EAEhDjE,KAAK2E,QAAU/G,EACfoC,KAAKkE,SAAWpG,EAEAF,EAAe8H,WAAW,IAAA,GAC1C,GAAA,CAAK3H,EAAS,KAAM,gDAEpBiC,KAAK4E,QAAU7G,EACfiC,KAAKmE,MAAQ9F,EACb2B,KAAKsF,OAAS,EAAA,CAAA,C,6GCnBlB7G,EAAA+D,cAIE1C,YAAYlC,GAuCZoC,KAAA+F,mBAAsBnI,IACpB,MAAQE,EAAuBkC,KAAzBkG,sBAEAvI,EAAkBC,EAAM4D,OAAA,EAE9B1D,EAAmBwC,QAAS1C,IAC1BA,EAAKuI,kBAAkBC,MAAMtB,gBAAkBnH,CAAA,CAAA,CAAA,EAInDqC,KAAAqG,UAAY,CAACzI,EAAcE,EAAcH,KACvC,IAAQoC,EAAyBC,KAA3BsG,wBACAvI,EAAeJ,EAAQ4I,aACvB9G,EAAmB9B,EAAQ6I,iBAEjCpG,IAAI/B,EAAA,CAAA,EAKAR,GAJqB,WAArB4B,EAA+BpB,EAAA,CAAA,EACL,UAArBoB,GACY,MAAZ3B,EAAMO,IAAWA,EAAA,CAAA,GAEd,IAOZ,GALqB,QAAjBN,IAAwBF,EAAQQ,EAAeP,EAAM0D,OAAA,EAAW1D,EAAMuD,MAAA,GACrD,QAAjBtD,IAAwBF,EAAQQ,EAAeP,EAAM6D,OAAA,EAAW7D,EAAM4D,OAAA,GACrD,QAAjB3D,IAAwBF,EAAQQ,EAAeP,EAAM+D,OAAA,EAAW/D,EAAM8D,MAAA,GAChC,EAAd/D,EAAP,QAAjBE,EAAgCD,EAAMqC,oBAAA,EAErCtC,GAAO,KAAA,gCAAsCE,EAAa4C,SAAA,EAE/DZ,EAAqBnC,GAAM6I,YAAYlG,MAAQ1C,CAAA,EAnE/CmC,KAAKkG,mBAAqB,GAC1BlG,KAAKsG,qBAAuB,GAE5B1I,EAAa0C,QAAS1C,IACpB,MAAME,EAAcF,EAAY8I,cAAc,kBAAA,EACxC/I,EAAoBC,EAAY8I,cAAc,aAAA,EAC9C3G,EAAoBnC,EAAY8I,cAAc,aAAA,EAC9C3I,EAAaH,EAAY8I,cAAc,OAAA,EAEzC3I,GACFA,EAAWkF,iBAAiB,QAAUrF,IACpCA,EAAE+I,eAAA,EACFC,UAAUC,UAAUC,UAAUhJ,EAAYyC,KAAA,CAAA,CAAA,EAI9C,IAAMd,EAAqB,IAAIgD,MAAM3E,EAAa,CAChDiJ,IAAK,CAACnJ,EAAQE,EAAMiC,KACL,UAATjC,IAAkBH,EAAkByI,MAAMtB,gBAAkB/E,GAGhEnC,EAAOE,GAAQiC,EAAA,CAAA,EACR,CAAA,EAIL1B,EAAOP,EAAY0C,KAAKwG,MAAM,YAAA,EAAc,GAC5CnJ,EAAO,CACX4I,YAAahH,EACbwH,kBAAAtJ,EACAwI,kBAAApG,CAAA,EAGFC,KAAKsG,qBAAqBjI,GAAQR,EAClCmC,KAAKkG,mBAAmBzE,KAAK5D,CAAA,CAAA,CAAA,CAAA,CAAA,C,uFChDnC,MAAA+B,EAAAzB,EAAA,QAAA,EAEAM,EAAA+D,cAqBE1C,YAAYhC,EAA4BF,EAAkCG,GAflEiC,KAAAkH,aAAA,CAAA,EACAlH,KAAAmH,cAAgB,CAAEC,EAAG,EAAGC,EAAG,CAAA,EAC3BrH,KAAAsH,YAAc,CAAEF,EAAG,EAAGC,EAAG,CAAA,EA6BjCrH,KAAAuH,YAAezJ,IACb,IAKgB2B,EAAYV,EAAeV,EAQrCV,EAbN,CAAM6J,cAAE5J,EAAa6J,eAAE1J,EAAcuF,KAAEtF,CAAA,EAASF,EAEnB,IAAzBF,EAAce,SACbb,EAAE6I,eAAA,EAEP,CAAMtC,OAAExG,EAAM6J,WAAEjI,EAAUkI,cAAE5I,EAAagE,SAAE1E,CAAA,EAAa2B,KAElDD,EAAmB,aAAT/B,EAAsBD,EAAiBH,EACjDQ,EAAeP,EAAO+J,sBAAA,EAEtB1J,EAAKe,KAAKyB,MAAMX,EAAQ,GAAG8H,QAAUzJ,EAAa0J,IAAA,EAClD1C,EAAKnG,KAAKyB,MAAMX,EAAQ,GAAGgI,QAAU3J,EAAa4J,GAAA,EAElDrK,EAAKsB,KAAKyB,MAAMX,EAAQ,GAAG8H,QAAUzJ,EAAa0J,IAAA,EAClDtJ,EAAKS,KAAKyB,MAAMX,EAAQ,GAAGgI,QAAU3J,EAAa4J,GAAA,EAExDhI,KAAKmH,cAAgB,CAAEC,EAAGlJ,EAAImJ,EAAGjC,CAAA,EACjCpF,KAAKsH,YAAc,CAAEF,EAAGzJ,EAAI0J,EAAG7I,CAAA,EAE/BiB,EAAA,EACAV,EAAA,EAEIV,IAAUA,EAAA,CAAA,EAGhB2B,KAAAiI,aAAgBnK,IACd,GAAA,CAAMwF,KAAE1F,EAAIsK,OAAEnK,EAAM8J,QAAE7J,EAAO+J,QAAElK,CAAA,EAAYC,EAAA,CACrCuG,OAAE5E,EAAMyH,aAAEnI,EAAY2I,WAAErJ,EAAUsJ,cAAE5H,EAAagD,SAAE3E,CAAA,EAAa4B,KAEvD,OAAXjC,GAA8B,IAAXA,IAEjBG,EAAeuB,EAAOmI,sBAAA,EACtBxC,EAAInG,KAAKyB,MAAM1C,EAAUE,EAAa4J,IAAA,EACtCnK,EAAIsB,KAAKyB,MAAM7C,EAAUK,EAAa8J,GAAA,EAE/B,cAATpK,GACFoC,KAAKmH,cAAgB,CAAEC,EAAAhC,EAAGiC,EAAA1J,CAAA,EAC1BqC,KAAKkH,aAAA,CAAA,GAIFnI,IAEQ,cAATnB,GAAiC,YAATA,GAA+B,eAATA,IAChDoC,KAAKsH,YAAc,CAAEF,EAAAhC,EAAGiC,EAAA1J,CAAA,EAExBU,EAAA,EACA0B,EAAA,EAEI3B,GAAUA,EAAA,GAGH,YAATR,GAA+B,eAATA,IAAuBoC,KAAKkH,aAAA,CAAA,IAAe,EAOvElH,KAAA0H,WAAa,KACX,GAAA,CAAMP,cAAErJ,EAAawJ,YAAE1J,EAAWyG,OAAEtG,CAAA,EAAWiC,KAEzChC,EAAMiB,KAAKE,IAAIF,KAAKG,IAAItB,EAAcuJ,EAAGzJ,EAAYyJ,CAAA,EAAI,CAAA,EACzDxJ,EAAOoB,KAAKE,IAAIF,KAAKG,IAAItB,EAAcsJ,EAAGxJ,EAAYwJ,CAAA,EAAI,CAAA,EAC1D3H,EAASR,KAAKG,IAAIH,KAAKE,IAAIrB,EAAcuJ,EAAGzJ,EAAYyJ,CAAA,EAAItJ,EAAOiH,MAAA,EACnEjG,EAAQE,KAAKG,IAAIH,KAAKE,IAAIrB,EAAcsJ,EAAGxJ,EAAYwJ,CAAA,EAAIrJ,EAAOgH,KAAA,EAElE1G,EAAQY,KAAKE,IAAIJ,EAAQlB,EAAM,CAAA,EAC/BkC,EAASd,KAAKE,IAAIM,EAASzB,EAAK,CAAA,EAEtCgC,KAAKmI,KAAO,CAAEH,IAAAhK,EAAK8J,KAAAjK,EAAMuK,OAAA3I,EAAQ4I,MAAAtJ,EAAOgG,MAAA1G,EAAO2G,OAAAjF,CAAA,CAAA,EAGjDC,KAAA2H,cAAgB,KACd,IAIa3J,EAAMH,EAAO4B,EAJ1B,CAAM6I,QAAExK,EAAOqK,KAAEvK,CAAA,EAASoC,KAErBpC,IAEL,CAAMoK,IAAEjK,EAAG+J,KAAE9J,EAAI+G,MAAElH,EAAKmH,OAAEvF,CAAA,EAAW7B,EAIrCE,EAAQsI,MAAMmC,eAFSxK,aAAeC,cAAiBH,eAAmB4B,OAElD,EAG1BO,KAAAwI,MAAQ,KACN,IAAQ1K,EAAYkC,KAAdsI,WAENxK,EAAQsI,MAAMmC,QAAU,GAAA,OAEjBvI,KAAKmI,IAAA,EA1GZvK,EAAc6K,YAAczI,KAAKiI,aACjCrK,EAAc8K,UAAY1I,KAAKiI,aAC/BrK,EAAc+K,YAAc3I,KAAKiI,aACjCrK,EAAcgL,aAAe5I,KAAKiI,aAElCrK,EAAciL,aAAe7I,KAAKuH,YAClC3J,EAAckL,WAAa9I,KAAKuH,YAChC3J,EAAcmL,YAAc/I,KAAKuH,YAEjCvH,KAAKsI,QAAUxK,EACfkC,KAAKqE,OAASzG,EAEVG,IAAUiC,KAAKgJ,eAAiBjL,EAAA,CA2DtCiL,mBAAmBlL,GACjBkC,KAAK+C,UAAA,EAAWnD,EAAAqJ,UAASnL,CAAA,CAAA,CAAA,C,mIChGhBW,EAAAwK,SAAW,CAACrL,EAA+BG,EAAU,OAChEqC,IAAItC,EAEJ,MAAO,IAAIH,KACTuL,aAAapL,CAAA,EACbA,EAAQqL,WAAW,IAAMvL,EAAKwL,MAAMpJ,KAAMrC,CAAA,EAAOI,CAAA,CAAA,CAAA,EAIxCU,EAAAiC,MAAQ,CAAC9C,EAAeG,EAAgB,IAAA,EACjDkB,KAAKyB,MAAA,EAAQ9C,EAAA,KAAaG,EAAA,EAAA,KAAyBA,GAE1CU,EAAA8G,MAAQ,CAAC3H,EAAeG,EAAaD,IAChDmB,KAAKE,IAAIF,KAAKG,IAAIxB,EAAOE,CAAA,EAAMC,CAAA,C,uFCbjC,MAAAiG,EAAA7F,EAAA,iBAAA,EACAkL,EAAAlL,EAAA,mBAAA,EACAmL,EAAAnL,EAAA,mBAAA,EACAoL,EAAApL,EAAA,qBAAA,EACAqL,EAAArL,EAAA,mBAAA,EAEA,SAASsL,IACP,MAAM7L,EAAKA,GAAoCmE,MAAM2H,KAAKC,SAASC,iBAAiBhM,CAAA,CAAA,EAE9EE,EAAcF,EAAE,UAAA,EAAY,GAC5BC,EAAcD,EAAE,UAAA,EAAY,GAU5BG,GARND,EAAY+L,MAAA,EACZhM,EAAYgM,MAAA,EAEZ/L,EAAYmF,iBAAiB,SAAWrF,IACtCA,EAAE+I,eAAA,EACFnI,EAAA,CAAA,CAAA,EAGmBZ,EAAE,6BAAA,GACjB6B,EAAe7B,EAAE,iBAAA,EAEjBD,EAAiBC,EAAE,UAAA,EAAY,GAC/BS,EAAkBT,EAAE,yBAAA,EAA2B,GAC/CmC,EAAkBnC,EAAE,WAAA,EAAa,GAEjCI,EAAU,IAAIqL,EAAA7G,QAAQzE,CAAA,EACtBG,EAAU,IAAIoL,EAAA9G,QAAQ7E,EAAgBU,CAAA,EACtCD,EAAU,IAAIoL,EAAAhH,QAAQ/C,CAAA,EACtB2F,EAAY,IAAImE,EAAA/G,QAAUzC,EAAiBpC,CAAA,EAE3Ca,EAAY,KAChB,IAMOb,EAAWU,EACX0B,EAAevB,EAPjB4G,EAAU+C,OAEf,CAAMH,IAAEpK,EAAGkK,KAAEhK,EAAIiH,MAAElH,EAAKmH,OAAEjH,CAAA,EAAWqH,EAAU+C,KAEzC1I,EAAiBvB,EAAQ4H,YAAYhI,EAAMF,EAAKC,EAAOE,CAAA,EAAA,CAEtDJ,EAAWU,GAAe2F,EAAAxB,QAAMP,cAAcxC,EAAgBzB,CAAA,EAAA,CAC9D+B,EAAevB,GAAgBwF,EAAAxB,QAAMH,mBAAmB5C,CAAA,EAE/DrB,EAAQiI,UAAU,OAAQ1I,EAAWK,CAAA,EACrCI,EAAQiI,UAAU,SAAUhI,EAAaL,CAAA,EACzCI,EAAQiI,UAAU,WAAYtG,EAAe/B,CAAA,EAC7CI,EAAQiI,UAAU,UAAW7H,EAAcR,CAAA,EAAA,EAG7CK,EAAgB4E,iBAAiB,SAAUmC,EAAUoD,KAAA,EAErD,IAAMvI,EAAqBrC,EAAE,uBAAA,EAAyB,GAChDK,EAAcL,EAAE,oBAAA,EAAsB,GACtCkM,EAAalM,EAAE,kBAAA,EAAoB,GAqBnCkD,GAnBNb,EAAmBgD,iBAAiB,QAAS,KAC3CmC,EAAUoD,MAAA,EACVtK,EAAQ2H,iBAAA,CAAA,CAAA,EAGV5H,EAAYgF,iBAAiB,QAAS,KACpCnF,EAAY+L,MAAA,EACZ7L,EAAQkF,gCAAA,EACR1E,EAAA,CAAA,CAAA,EAGFsL,EAAW7G,iBAAiB,QAASjF,EAAQoF,IAAA,EAE7CpF,EAAQ6E,eAAe,oBAAqB,KAC1C,IAAMjF,EAAiBI,EAAQ+L,kBAE/B7L,EAAQ8H,WAAWpI,EAAiB,GAAA,CAAA,CAAA,EAGE,KACtC,IAAMA,EAAmBI,EAAQgM,iBAEjC5J,IAAItC,EAAkB,KAKtB,GAHyB,aAArBF,IAAiCE,EAAkB,IAAIkG,EAAAxB,QAAM,EAAG,EAAG,EAAG,CAAA,GACI,EAApC1E,EAAjB,kBAArBF,EAAwD,IAAIoG,EAAAxB,QAAMxE,EAAQ8G,eAAA,EAEzEhH,GAAiB,KAAA,qCAA2CF,EAAiB+C,SAAA,EAElFzC,EAAQ6H,mBAAmBjI,CAAA,EACzBM,EAAQ2H,mBAAmBjI,CAAA,EAC3BU,EAAA,CAAA,GAGJR,EAAQ6E,eAAe,kBAAmB/B,CAAA,EAC1C9C,EAAQ6E,eAAe,mBAAoB/B,CAAA,EAE3CsE,EAAU4D,eAAiBxK,EAC3BR,EAAQ+F,SAAWvF,CAAA,CAGrByL,OAAOC,OAAS,IAAMC,sBAAsBV,CAAA","file":"bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","exports.lab2rgb=function(t){var a,h,M,r=(t[0]+16)/116,o=t[1]/500+r,n=r-t[2]/200;return h=-.9689*(o=.95047*(o*o*o>.008856?o*o*o:(o-16/116)/7.787))+1.8758*(r=1*(r*r*r>.008856?r*r*r:(r-16/116)/7.787))+.0415*(n=1.08883*(n*n*n>.008856?n*n*n:(n-16/116)/7.787)),M=.0557*o+-.204*r+1.057*n,a=(a=3.2406*o+-1.5372*r+-.4986*n)>.0031308?1.055*Math.pow(a,1/2.4)-.055:12.92*a,h=h>.0031308?1.055*Math.pow(h,1/2.4)-.055:12.92*h,M=M>.0031308?1.055*Math.pow(M,1/2.4)-.055:12.92*M,[255*Math.max(0,Math.min(1,a)),255*Math.max(0,Math.min(1,h)),255*Math.max(0,Math.min(1,M))]},exports.rgb2lab=function(t){var a,h,M,r=t[0]/255,o=t[1]/255,n=t[2]/255;return h=(.2126*(r=r>.04045?Math.pow((r+.055)/1.055,2.4):r/12.92)+.7152*(o=o>.04045?Math.pow((o+.055)/1.055,2.4):o/12.92)+.0722*(n=n>.04045?Math.pow((n+.055)/1.055,2.4):n/12.92))/1,M=(.0193*r+.1192*o+.9505*n)/1.08883,a=(a=(.4124*r+.3576*o+.1805*n)/.95047)>.008856?Math.pow(a,1/3):7.787*a+16/116,[116*(h=h>.008856?Math.pow(h,1/3):7.787*h+16/116)-16,500*(a-h),200*(h-(M=M>.008856?Math.pow(M,1/3):7.787*M+16/116))]},exports.deltaE=function(t,a){var h=t[0]-a[0],M=t[1]-a[1],r=t[2]-a[2],o=Math.sqrt(t[1]*t[1]+t[2]*t[2]),n=o-Math.sqrt(a[1]*a[1]+a[2]*a[2]),p=M*M+r*r-n*n,w=h/1,e=n/(1+.045*o),s=(p=p<0?0:Math.sqrt(p))/(1+.015*o),i=w*w+e*e+s*s;return i<0?0:Math.sqrt(i)};\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbG9yLmpzIl0sIm5hbWVzIjpbImV4cG9ydHMiLCJsYWIycmdiIiwibGFiIiwiciIsImciLCJiIiwieSIsIngiLCJ6IiwiTWF0aCIsInBvdyIsIm1heCIsIm1pbiIsInJnYjJsYWIiLCJyZ2IiLCJkZWx0YUUiLCJsYWJBIiwibGFiQiIsImRlbHRhTCIsImRlbHRhQSIsImRlbHRhQiIsImMxIiwic3FydCIsImRlbHRhQyIsImRlbHRhSCIsImRlbHRhTEtsc2wiLCJkZWx0YUNrY3NjIiwiZGVsdGFIa2hzaCIsImkiXSwibWFwcGluZ3MiOiJBQUdBQSxRQUFRQyxRQUFVLFNBQWlCQyxHQUNqQyxJQUdJQyxFQUFHQyxFQUFHQyxFQUhOQyxHQUFLSixFQUFJLEdBQUssSUFBTSxJQUNwQkssRUFBSUwsRUFBSSxHQUFLLElBQU1JLEVBQ25CRSxFQUFJRixFQUFJSixFQUFJLEdBQUssSUFlckIsT0FQQUUsR0FBUyxPQUxURyxFQUFJLFFBQVlBLEVBQUlBLEVBQUlBLEVBQUksUUFBWUEsRUFBSUEsRUFBSUEsR0FBS0EsRUFBSSxHQUFHLEtBQU8sUUFLNUMsUUFKdkJELEVBQUksR0FBWUEsRUFBSUEsRUFBSUEsRUFBSSxRQUFZQSxFQUFJQSxFQUFJQSxHQUFLQSxFQUFJLEdBQUcsS0FBTyxRQUk5QixPQUhyQ0UsRUFBSSxTQUFZQSxFQUFJQSxFQUFJQSxFQUFJLFFBQVlBLEVBQUlBLEVBQUlBLEdBQUtBLEVBQUksR0FBRyxLQUFPLFFBSW5FSCxFQUFTLE1BQUxFLEdBQW1CLEtBQUxELEVBQW1CLE1BQUxFLEVBRWhDTCxHQUpBQSxFQUFTLE9BQUxJLEdBQW1CLE9BQUxELEdBQW1CLE1BQUxFLEdBSXZCLFNBQWMsTUFBUUMsS0FBS0MsSUFBSVAsRUFBRyxFQUFFLEtBQU8sS0FBUyxNQUFRQSxFQUNyRUMsRUFBS0EsRUFBSSxTQUFjLE1BQVFLLEtBQUtDLElBQUlOLEVBQUcsRUFBRSxLQUFPLEtBQVMsTUFBUUEsRUFDckVDLEVBQUtBLEVBQUksU0FBYyxNQUFRSSxLQUFLQyxJQUFJTCxFQUFHLEVBQUUsS0FBTyxLQUFTLE1BQVFBLEVBRTlELENBQStCLElBQTlCSSxLQUFLRSxJQUFJLEVBQUdGLEtBQUtHLElBQUksRUFBR1QsSUFDTSxJQUE5Qk0sS0FBS0UsSUFBSSxFQUFHRixLQUFLRyxJQUFJLEVBQUdSLElBQ00sSUFBOUJLLEtBQUtFLElBQUksRUFBR0YsS0FBS0csSUFBSSxFQUFHUCxNQUlsQ0wsUUFBUWEsUUFBVSxTQUFpQkMsR0FDakMsSUFHSVAsRUFBR0QsRUFBR0UsRUFITkwsRUFBSVcsRUFBSSxHQUFLLElBQ2JWLEVBQUlVLEVBQUksR0FBSyxJQUNiVCxFQUFJUyxFQUFJLEdBQUssSUFlakIsT0FQQVIsR0FBUyxPQUxUSCxFQUFLQSxFQUFJLE9BQVdNLEtBQUtDLEtBQUtQLEVBQUksTUFBUyxNQUFPLEtBQU9BLEVBQUksT0FLdkMsT0FKdEJDLEVBQUtBLEVBQUksT0FBV0ssS0FBS0MsS0FBS04sRUFBSSxNQUFTLE1BQU8sS0FBT0EsRUFBSSxPQUkxQixPQUhuQ0MsRUFBS0EsRUFBSSxPQUFXSSxLQUFLQyxLQUFLTCxFQUFJLE1BQVMsTUFBTyxLQUFPQSxFQUFJLFFBR2hCLEVBQzdDRyxHQUFTLE1BQUpMLEVBQWlCLE1BQUpDLEVBQWlCLE1BQUpDLEdBQWMsUUFFN0NFLEdBSkFBLEdBQVMsTUFBSkosRUFBaUIsTUFBSkMsRUFBaUIsTUFBSkMsR0FBYyxRQUlwQyxRQUFZSSxLQUFLQyxJQUFJSCxFQUFHLEVBQUUsR0FBTSxNQUFRQSxFQUFLLEdBQUcsSUFJbEQsQ0FBRSxLQUhURCxFQUFLQSxFQUFJLFFBQVlHLEtBQUtDLElBQUlKLEVBQUcsRUFBRSxHQUFNLE1BQVFBLEVBQUssR0FBRyxLQUdyQyxHQUFJLEtBQU9DLEVBQUlELEdBQUksS0FBT0EsR0FGOUNFLEVBQUtBLEVBQUksUUFBWUMsS0FBS0MsSUFBSUYsRUFBRyxFQUFFLEdBQU0sTUFBUUEsRUFBSyxHQUFHLFFBUTNEUixRQUFRZSxPQUFTLFNBQWdCQyxFQUFNQyxHQUNyQyxJQUFJQyxFQUFTRixFQUFLLEdBQUtDLEVBQUssR0FDeEJFLEVBQVNILEVBQUssR0FBS0MsRUFBSyxHQUN4QkcsRUFBU0osRUFBSyxHQUFLQyxFQUFLLEdBQ3hCSSxFQUFLWixLQUFLYSxLQUFLTixFQUFLLEdBQUtBLEVBQUssR0FBS0EsRUFBSyxHQUFLQSxFQUFLLElBRWxETyxFQUFTRixFQURKWixLQUFLYSxLQUFLTCxFQUFLLEdBQUtBLEVBQUssR0FBS0EsRUFBSyxHQUFLQSxFQUFLLElBRWxETyxFQUFTTCxFQUFTQSxFQUFTQyxFQUFTQSxFQUFTRyxFQUFTQSxFQUl0REUsRUFBYVAsRUFBUyxFQUN0QlEsRUFBYUgsR0FIUixFQUFNLEtBQVFGLEdBSW5CTSxHQUxKSCxFQUFTQSxFQUFTLEVBQUksRUFBSWYsS0FBS2EsS0FBS0UsS0FFM0IsRUFBTSxLQUFRSCxHQUluQk8sRUFBSUgsRUFBYUEsRUFBYUMsRUFBYUEsRUFBYUMsRUFBYUEsRUFDekUsT0FBT0MsRUFBSSxFQUFJLEVBQUluQixLQUFLYSxLQUFLTSIsImZpbGUiOiJDOlxcVXNlcnNcXEppYSBMaWFuZ1xcRGVza3RvcFxcQWxsXFxHaXRcXGFyZWEtc2FtcGxlclxcbm9kZV9tb2R1bGVzXFxyZ2ItbGFiXFxjb2xvci5qcyJ9","import { rgb2lab, deltaE as getDeltaE } from \"rgb-lab\";\r\n\r\nimport Options from \"./Options\";\r\nimport { round } from \"./Util\";\r\n\r\nexport default class Color {\r\n  static squaredValues = [...Array(256).keys()].map((value) => value * value);\r\n\r\n  static namedColorsLab = [\r\n    {\r\n      name: \"aliceblue\",\r\n      value: [97.18, -1.34, -4.27],\r\n    },\r\n    {\r\n      name: \"antiquewhite\",\r\n      value: [93.73, 1.84, 11.52],\r\n    },\r\n    {\r\n      name: \"aqua\",\r\n      value: [91.12, -48.08, -14.14],\r\n    },\r\n    {\r\n      name: \"aquamarine\",\r\n      value: [92.04, -45.52, 9.71],\r\n    },\r\n    {\r\n      name: \"azure\",\r\n      value: [98.93, -4.88, -1.7],\r\n    },\r\n    {\r\n      name: \"beige\",\r\n      value: [95.95, -4.19, 12.04],\r\n    },\r\n    {\r\n      name: \"bisque\",\r\n      value: [92.01, 4.43, 19],\r\n    },\r\n    {\r\n      name: \"black\",\r\n      value: [0, 0, 0],\r\n    },\r\n    {\r\n      name: \"blanchedalmond\",\r\n      value: [93.92, 2.13, 17.02],\r\n    },\r\n    {\r\n      name: \"blue\",\r\n      value: [32.3, 79.2, -107.86],\r\n    },\r\n    {\r\n      name: \"blueviolet\",\r\n      value: [42.19, 69.86, -74.77],\r\n    },\r\n    {\r\n      name: \"brown\",\r\n      value: [37.52, 49.7, 30.54],\r\n    },\r\n    {\r\n      name: \"burlywood\",\r\n      value: [77.02, 7.05, 30.01],\r\n    },\r\n    {\r\n      name: \"cadetblue\",\r\n      value: [61.15, -19.68, -7.43],\r\n    },\r\n    {\r\n      name: \"chartreuse\",\r\n      value: [89.87, -68.07, 85.78],\r\n    },\r\n    {\r\n      name: \"chocolate\",\r\n      value: [55.99, 37.06, 56.74],\r\n    },\r\n    {\r\n      name: \"coral\",\r\n      value: [67.29, 45.36, 47.49],\r\n    },\r\n    {\r\n      name: \"cornflowerblue\",\r\n      value: [61.93, 9.34, -49.31],\r\n    },\r\n    {\r\n      name: \"cornsilk\",\r\n      value: [97.46, -2.21, 14.28],\r\n    },\r\n    {\r\n      name: \"crimson\",\r\n      value: [47.03, 70.94, 33.59],\r\n    },\r\n    {\r\n      name: \"cyan\",\r\n      value: [91.12, -48.08, -14.14],\r\n    },\r\n    {\r\n      name: \"darkblue\",\r\n      value: [14.76, 50.43, -68.68],\r\n    },\r\n    {\r\n      name: \"darkcyan\",\r\n      value: [52.21, -30.62, -9],\r\n    },\r\n    {\r\n      name: \"darkgoldenrod\",\r\n      value: [59.22, 9.87, 62.73],\r\n    },\r\n    {\r\n      name: \"darkgray\",\r\n      value: [69.24, 0, -0.01],\r\n    },\r\n    {\r\n      name: \"darkgreen\",\r\n      value: [36.2, -43.37, 41.86],\r\n    },\r\n    {\r\n      name: \"darkgrey\",\r\n      value: [69.24, 0, -0.01],\r\n    },\r\n    {\r\n      name: \"darkkhaki\",\r\n      value: [73.38, -8.79, 39.29],\r\n    },\r\n    {\r\n      name: \"darkmagenta\",\r\n      value: [32.6, 62.56, -38.74],\r\n    },\r\n    {\r\n      name: \"darkolivegreen\",\r\n      value: [42.23, -18.83, 30.6],\r\n    },\r\n    {\r\n      name: \"darkorange\",\r\n      value: [69.48, 36.83, 75.49],\r\n    },\r\n    {\r\n      name: \"darkorchid\",\r\n      value: [43.38, 65.17, -60.11],\r\n    },\r\n    {\r\n      name: \"darkred\",\r\n      value: [28.08, 51.01, 41.29],\r\n    },\r\n    {\r\n      name: \"darksalmon\",\r\n      value: [69.85, 28.18, 27.7],\r\n    },\r\n    {\r\n      name: \"darkseagreen\",\r\n      value: [72.09, -23.82, 18.03],\r\n    },\r\n    {\r\n      name: \"darkslateblue\",\r\n      value: [30.83, 26.06, -42.09],\r\n    },\r\n    {\r\n      name: \"darkslategray\",\r\n      value: [31.26, -11.72, -3.73],\r\n    },\r\n    {\r\n      name: \"darkslategrey\",\r\n      value: [31.26, -11.72, -3.73],\r\n    },\r\n    {\r\n      name: \"darkturquoise\",\r\n      value: [75.29, -40.04, -13.52],\r\n    },\r\n    {\r\n      name: \"darkviolet\",\r\n      value: [39.58, 76.34, -70.38],\r\n    },\r\n    {\r\n      name: \"deeppink\",\r\n      value: [55.95, 84.56, -5.71],\r\n    },\r\n    {\r\n      name: \"deepskyblue\",\r\n      value: [72.55, -17.65, -42.55],\r\n    },\r\n    {\r\n      name: \"dimgray\",\r\n      value: [44.41, 0, -0.01],\r\n    },\r\n    {\r\n      name: \"dimgrey\",\r\n      value: [44.41, 0, -0.01],\r\n    },\r\n    {\r\n      name: \"dodgerblue\",\r\n      value: [59.38, 9.97, -63.39],\r\n    },\r\n    {\r\n      name: \"firebrick\",\r\n      value: [39.11, 55.93, 37.65],\r\n    },\r\n    {\r\n      name: \"floralwhite\",\r\n      value: [98.4, -0.03, 5.37],\r\n    },\r\n    {\r\n      name: \"forestgreen\",\r\n      value: [50.59, -49.59, 45.02],\r\n    },\r\n    {\r\n      name: \"fuchsia\",\r\n      value: [60.32, 98.25, -60.84],\r\n    },\r\n    {\r\n      name: \"gainsboro\",\r\n      value: [87.76, 0, -0.01],\r\n    },\r\n    {\r\n      name: \"ghostwhite\",\r\n      value: [97.76, 1.25, -3.36],\r\n    },\r\n    {\r\n      name: \"gold\",\r\n      value: [86.93, -1.92, 87.14],\r\n    },\r\n    {\r\n      name: \"goldenrod\",\r\n      value: [70.82, 8.52, 68.76],\r\n    },\r\n    {\r\n      name: \"gray\",\r\n      value: [53.59, 0, -0.01],\r\n    },\r\n    {\r\n      name: \"green\",\r\n      value: [46.23, -51.7, 49.9],\r\n    },\r\n    {\r\n      name: \"greenyellow\",\r\n      value: [91.96, -52.48, 81.87],\r\n    },\r\n    {\r\n      name: \"grey\",\r\n      value: [53.59, 0, -0.01],\r\n    },\r\n    {\r\n      name: \"honeydew\",\r\n      value: [98.57, -7.56, 5.47],\r\n    },\r\n    {\r\n      name: \"hotpink\",\r\n      value: [65.48, 64.25, -10.66],\r\n    },\r\n    {\r\n      name: \"indianred\",\r\n      value: [53.39, 44.84, 22.11],\r\n    },\r\n    {\r\n      name: \"indigo\",\r\n      value: [20.47, 51.69, -53.32],\r\n    },\r\n    {\r\n      name: \"ivory\",\r\n      value: [99.64, -2.55, 7.15],\r\n    },\r\n    {\r\n      name: \"khaki\",\r\n      value: [90.33, -9.01, 44.97],\r\n    },\r\n    {\r\n      name: \"lavender\",\r\n      value: [91.83, 3.71, -9.67],\r\n    },\r\n    {\r\n      name: \"lavenderblush\",\r\n      value: [96.07, 5.89, -0.6],\r\n    },\r\n    {\r\n      name: \"lawngreen\",\r\n      value: [88.88, -67.86, 84.95],\r\n    },\r\n    {\r\n      name: \"lemonchiffon\",\r\n      value: [97.65, -5.42, 22.23],\r\n    },\r\n    {\r\n      name: \"lightblue\",\r\n      value: [83.81, -10.89, -11.49],\r\n    },\r\n    {\r\n      name: \"lightcoral\",\r\n      value: [66.15, 42.82, 19.55],\r\n    },\r\n    {\r\n      name: \"lightcyan\",\r\n      value: [97.87, -9.94, -3.38],\r\n    },\r\n    {\r\n      name: \"lightgoldenrodyellow\",\r\n      value: [97.37, -6.48, 19.23],\r\n    },\r\n    {\r\n      name: \"lightgray\",\r\n      value: [84.56, 0, -0.01],\r\n    },\r\n    {\r\n      name: \"lightgreen\",\r\n      value: [86.55, -46.33, 36.94],\r\n    },\r\n    {\r\n      name: \"lightgrey\",\r\n      value: [84.56, 0, -0.01],\r\n    },\r\n    {\r\n      name: \"lightpink\",\r\n      value: [81.05, 27.97, 5.03],\r\n    },\r\n    {\r\n      name: \"lightsalmon\",\r\n      value: [74.7, 31.48, 34.54],\r\n    },\r\n    {\r\n      name: \"lightseagreen\",\r\n      value: [65.79, -37.51, -6.34],\r\n    },\r\n    {\r\n      name: \"lightskyblue\",\r\n      value: [79.73, -10.82, -28.51],\r\n    },\r\n    {\r\n      name: \"lightslategray\",\r\n      value: [55.92, -2.24, -11.11],\r\n    },\r\n    {\r\n      name: \"lightslategrey\",\r\n      value: [55.92, -2.24, -11.11],\r\n    },\r\n    {\r\n      name: \"lightsteelblue\",\r\n      value: [78.45, -1.28, -15.22],\r\n    },\r\n    {\r\n      name: \"lightyellow\",\r\n      value: [99.28, -5.1, 14.83],\r\n    },\r\n    {\r\n      name: \"lime\",\r\n      value: [87.74, -86.18, 83.18],\r\n    },\r\n    {\r\n      name: \"limegreen\",\r\n      value: [72.61, -67.13, 61.44],\r\n    },\r\n    {\r\n      name: \"linen\",\r\n      value: [95.31, 1.68, 6.01],\r\n    },\r\n    {\r\n      name: \"magenta\",\r\n      value: [60.32, 98.25, -60.84],\r\n    },\r\n    {\r\n      name: \"maroon\",\r\n      value: [25.53, 48.06, 38.06],\r\n    },\r\n    {\r\n      name: \"mediumaquamarine\",\r\n      value: [75.69, -38.33, 8.3],\r\n    },\r\n    {\r\n      name: \"mediumblue\",\r\n      value: [24.98, 67.18, -91.5],\r\n    },\r\n    {\r\n      name: \"mediumorchid\",\r\n      value: [53.64, 59.07, -47.41],\r\n    },\r\n    {\r\n      name: \"mediumpurple\",\r\n      value: [54.98, 36.81, -50.1],\r\n    },\r\n    {\r\n      name: \"mediumseagreen\",\r\n      value: [65.27, -48.22, 24.29],\r\n    },\r\n    {\r\n      name: \"mediumslateblue\",\r\n      value: [52.16, 41.08, -65.41],\r\n    },\r\n    {\r\n      name: \"mediumspringgreen\",\r\n      value: [87.34, -70.68, 32.46],\r\n    },\r\n    {\r\n      name: \"mediumturquoise\",\r\n      value: [76.88, -37.35, -8.36],\r\n    },\r\n    {\r\n      name: \"mediumvioletred\",\r\n      value: [44.76, 71.01, -15.18],\r\n    },\r\n    {\r\n      name: \"midnightblue\",\r\n      value: [15.86, 31.72, -49.58],\r\n    },\r\n    {\r\n      name: \"mintcream\",\r\n      value: [99.16, -4.16, 1.24],\r\n    },\r\n    {\r\n      name: \"mistyrose\",\r\n      value: [92.66, 8.75, 4.83],\r\n    },\r\n    {\r\n      name: \"moccasin\",\r\n      value: [91.72, 2.44, 26.35],\r\n    },\r\n    {\r\n      name: \"navajowhite\",\r\n      value: [90.1, 4.51, 28.26],\r\n    },\r\n    {\r\n      name: \"navy\",\r\n      value: [12.98, 47.51, -64.7],\r\n    },\r\n    {\r\n      name: \"oldlace\",\r\n      value: [96.78, 0.18, 8.16],\r\n    },\r\n    {\r\n      name: \"olive\",\r\n      value: [51.87, -12.93, 56.68],\r\n    },\r\n    {\r\n      name: \"olivedrab\",\r\n      value: [54.65, -28.22, 49.69],\r\n    },\r\n    {\r\n      name: \"orange\",\r\n      value: [74.93, 23.94, 78.96],\r\n    },\r\n    {\r\n      name: \"orangered\",\r\n      value: [57.57, 67.8, 68.97],\r\n    },\r\n    {\r\n      name: \"orchid\",\r\n      value: [62.8, 55.29, -34.42],\r\n    },\r\n    {\r\n      name: \"palegoldenrod\",\r\n      value: [91.14, -7.35, 30.96],\r\n    },\r\n    {\r\n      name: \"palegreen\",\r\n      value: [90.75, -48.3, 38.52],\r\n    },\r\n    {\r\n      name: \"paleturquoise\",\r\n      value: [90.06, -19.63, -6.41],\r\n    },\r\n    {\r\n      name: \"palevioletred\",\r\n      value: [60.56, 45.53, 0.39],\r\n    },\r\n    {\r\n      name: \"papayawhip\",\r\n      value: [95.08, 1.27, 14.52],\r\n    },\r\n    {\r\n      name: \"peachpuff\",\r\n      value: [89.35, 8.09, 21.01],\r\n    },\r\n    {\r\n      name: \"peru\",\r\n      value: [61.75, 21.4, 47.92],\r\n    },\r\n    {\r\n      name: \"pink\",\r\n      value: [83.58, 24.15, 3.32],\r\n    },\r\n    {\r\n      name: \"plum\",\r\n      value: [73.37, 32.54, -22],\r\n    },\r\n    {\r\n      name: \"powderblue\",\r\n      value: [86.13, -14.09, -8.02],\r\n    },\r\n    {\r\n      name: \"purple\",\r\n      value: [29.78, 58.94, -36.5],\r\n    },\r\n    {\r\n      name: \"red\",\r\n      value: [53.23, 80.11, 67.22],\r\n    },\r\n    {\r\n      name: \"rosybrown\",\r\n      value: [63.61, 17.02, 6.6],\r\n    },\r\n    {\r\n      name: \"royalblue\",\r\n      value: [47.83, 26.27, -65.27],\r\n    },\r\n    {\r\n      name: \"saddlebrown\",\r\n      value: [37.47, 26.45, 40.99],\r\n    },\r\n    {\r\n      name: \"salmon\",\r\n      value: [67.26, 45.23, 29.09],\r\n    },\r\n    {\r\n      name: \"sandybrown\",\r\n      value: [73.95, 23.03, 46.79],\r\n    },\r\n    {\r\n      name: \"seagreen\",\r\n      value: [51.54, -39.71, 20.05],\r\n    },\r\n    {\r\n      name: \"seashell\",\r\n      value: [97.12, 2.17, 4.54],\r\n    },\r\n    {\r\n      name: \"sienna\",\r\n      value: [43.8, 29.33, 35.64],\r\n    },\r\n    {\r\n      name: \"silver\",\r\n      value: [77.7, 0, -0.01],\r\n    },\r\n    {\r\n      name: \"skyblue\",\r\n      value: [79.21, -14.83, -21.28],\r\n    },\r\n    {\r\n      name: \"slateblue\",\r\n      value: [45.34, 36.05, -57.78],\r\n    },\r\n    {\r\n      name: \"slategray\",\r\n      value: [52.84, -2.14, -10.58],\r\n    },\r\n    {\r\n      name: \"slategrey\",\r\n      value: [52.84, -2.14, -10.58],\r\n    },\r\n    {\r\n      name: \"snow\",\r\n      value: [98.64, 1.66, 0.58],\r\n    },\r\n    {\r\n      name: \"springgreen\",\r\n      value: [88.47, -76.9, 47.03],\r\n    },\r\n    {\r\n      name: \"steelblue\",\r\n      value: [52.47, -4.07, -32.2],\r\n    },\r\n    {\r\n      name: \"tan\",\r\n      value: [74.97, 5.02, 24.42],\r\n    },\r\n    {\r\n      name: \"teal\",\r\n      value: [48.26, -28.84, -8.48],\r\n    },\r\n    {\r\n      name: \"thistle\",\r\n      value: [80.08, 13.22, -9.24],\r\n    },\r\n    {\r\n      name: \"tomato\",\r\n      value: [62.2, 57.86, 46.42],\r\n    },\r\n    {\r\n      name: \"turquoise\",\r\n      value: [81.27, -44.08, -4.03],\r\n    },\r\n    {\r\n      name: \"violet\",\r\n      value: [69.69, 56.37, -36.82],\r\n    },\r\n    {\r\n      name: \"wheat\",\r\n      value: [89.35, 1.51, 24],\r\n    },\r\n    {\r\n      name: \"white\",\r\n      value: [100, 0.01, -0.01],\r\n    },\r\n    {\r\n      name: \"whitesmoke\",\r\n      value: [96.54, 0.01, -0.01],\r\n    },\r\n    {\r\n      name: \"yellow\",\r\n      value: [97.14, -21.56, 94.48],\r\n    },\r\n    {\r\n      name: \"yellowgreen\",\r\n      value: [76.54, -37.99, 66.59],\r\n    },\r\n  ] as { name: string; value: [number, number, number] }[];\r\n\r\n  static getMeanMedian = (colors: Color[], options: Options) => {\r\n    const averagingMethod = options.averagingMethod;\r\n    const numberOfPixels = colors.length;\r\n\r\n    const mean = new Color();\r\n    const median = new Color();\r\n\r\n    if (numberOfPixels === 0) return [mean, median];\r\n\r\n    const colorChannels = [\"r\", \"g\", \"b\", \"a\"] as const;\r\n\r\n    for (let i = 0; i < colorChannels.length; i++) {\r\n      const channel = colorChannels[i];\r\n\r\n      const values = [] as number[];\r\n\r\n      for (let i = 0; i < colors.length; i++) values.push(colors[i][channel]);\r\n\r\n      const sortedValues = values.sort();\r\n\r\n      if (averagingMethod === \"squared\") {\r\n        let totalSquaredValue = 0;\r\n\r\n        for (let i = 0; i < values.length; i++) totalSquaredValue += Color.squaredValues[values[i]];\r\n\r\n        const meanSquaredValue = totalSquaredValue / numberOfPixels;\r\n        const meanValue = Math.sqrt(meanSquaredValue);\r\n\r\n        mean[channel] = meanValue;\r\n      }\r\n\r\n      if (averagingMethod === \"simple\") {\r\n        let totalValue = 0;\r\n\r\n        for (let i = 0; i < values.length; i++) totalValue += values[i];\r\n\r\n        const meanValue = totalValue / numberOfPixels;\r\n\r\n        mean[channel] = meanValue;\r\n      }\r\n\r\n      const medianIndex = Math.floor(sortedValues.length / 2);\r\n\r\n      median[channel] = sortedValues[medianIndex];\r\n    }\r\n\r\n    return [mean, median];\r\n  };\r\n\r\n  static getLightestDarkest = (colors: Color[]) => {\r\n    if (colors.length === 0) return [new Color(), new Color()];\r\n\r\n    const sRGBtoLinear = (channel: number) => {\r\n      if (channel <= 0.04045) return channel / 12.92;\r\n\r\n      return Math.pow((channel + 0.055) / 1.055, 2.4);\r\n    };\r\n\r\n    const lightnessValues = colors.map((color) => {\r\n      const lR = sRGBtoLinear(color.r / 255);\r\n      const lG = sRGBtoLinear(color.g / 255);\r\n      const lB = sRGBtoLinear(color.b / 255);\r\n\r\n      const luminance = 0.2126 * lR + 0.7152 * lG + 0.0722 * lB;\r\n\r\n      if (luminance <= 216 / 24389) return luminance * (24389 / 27);\r\n      return Math.pow(luminance, 1 / 3) * 116 - 16;\r\n    });\r\n\r\n    const lightnestValue = Math.max(...lightnessValues);\r\n    const darkestValue = Math.min(...lightnessValues);\r\n\r\n    const lightestIndex = lightnessValues.indexOf(lightnestValue);\r\n    const darkestIndex = lightnessValues.indexOf(darkestValue);\r\n\r\n    return [new Color(colors[lightestIndex]), new Color(colors[darkestIndex])];\r\n  };\r\n\r\n  static blendColors = (background: Color, foreground: Color) => {\r\n    const normalFgAlpha = foreground.a / 255;\r\n    const normalBgAlpha = 1 - normalFgAlpha;\r\n\r\n    const channels = [\"r\", \"g\", \"b\"] as const;\r\n\r\n    const rgb = channels.map((c) => background[c] * normalBgAlpha + foreground[c] * normalFgAlpha);\r\n\r\n    return new Color(...rgb);\r\n  };\r\n\r\n  r = 0; // 0-255\r\n  g = 0; // 0-255;\r\n  b = 0; // 0-255;\r\n  a = 0; // 0-255;\r\n\r\n  constructor(a?: number | string | Color, b?: number, c?: number, d?: number) {\r\n    if (arguments.length === 1) {\r\n      if (a instanceof Color) return new Color(...a.rgba);\r\n\r\n      if (typeof a === \"string\" && a[0] === \"#\") {\r\n        let hex = a;\r\n\r\n        if (hex.length === 4) hex = \"#\" + hex[1] + hex[1] + hex[2] + hex[2] + hex[3] + hex[3];\r\n\r\n        if (hex.length === 7 || hex.length === 9) {\r\n          this.r = parseInt(hex[1] + hex[2], 16);\r\n          this.g = parseInt(hex[3] + hex[4], 16);\r\n          this.b = parseInt(hex[5] + hex[6], 16);\r\n\r\n          if (hex.length === 9) this.a = parseInt(hex[7] + hex[8], 16);\r\n          else this.a = 255;\r\n        }\r\n\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (arguments.length === 3 || arguments.length === 4) {\r\n      const alpha = d == null ? 255 : d;\r\n\r\n      if (typeof a === \"number\" && typeof b === \"number\" && typeof c === \"number\") {\r\n        this.r = a;\r\n        this.g = b;\r\n        this.b = c;\r\n      }\r\n\r\n      this.a = alpha;\r\n    }\r\n  }\r\n\r\n  getClosedNamedColor = () => {\r\n    const { r, g, b } = this;\r\n\r\n    const lab = rgb2lab([r, g, b]);\r\n\r\n    let smallestDeltaE = 101;\r\n    let closestColorName = \"\";\r\n\r\n    Color.namedColorsLab.forEach((namedColor) => {\r\n      const deltaE = getDeltaE(lab, namedColor.value);\r\n\r\n      if (deltaE < smallestDeltaE) {\r\n        smallestDeltaE = deltaE;\r\n        closestColorName = namedColor.name;\r\n      }\r\n    });\r\n\r\n    return closestColorName;\r\n  };\r\n\r\n  get rgb(): [number, number, number] {\r\n    const { r, g, b } = this;\r\n\r\n    return [r, g, b];\r\n  }\r\n\r\n  get rgba(): [number, number, number, number] {\r\n    const { r, g, b, a } = this;\r\n\r\n    return [r, g, b, a];\r\n  }\r\n\r\n  toRgb() {\r\n    const { r, g, b } = this;\r\n\r\n    const rgb = [r, g, b].map((value) => Math.round(value));\r\n\r\n    return `rgb(${rgb.join(\", \")})`;\r\n  }\r\n\r\n  toRgba() {\r\n    const { r, g, b, a } = this;\r\n\r\n    const rgba = [r, g, b].map((value) => Math.round(value));\r\n    rgba.push(round(a / 255, 2));\r\n\r\n    return `rgba(${rgba.join(\", \")})`;\r\n  }\r\n\r\n  private hex = (value: number) => (\"0\" + Math.round(value).toString(16)).slice(-2);\r\n\r\n  toHex6() {\r\n    const { r, g, b, hex } = this;\r\n\r\n    return \"#\" + hex(r) + hex(g) + hex(b);\r\n  }\r\n\r\n  toHex8() {\r\n    const { r, g, b, a, hex } = this;\r\n\r\n    return \"#\" + hex(r) + hex(g) + hex(b) + hex(a);\r\n  }\r\n\r\n  private getHsl = () => {\r\n    const { r, g, b } = this;\r\n\r\n    const nR = r / 255;\r\n    const nG = g / 255;\r\n    const nB = b / 255;\r\n\r\n    const max = Math.max(nR, nG, nB);\r\n    const min = Math.min(nR, nG, nB);\r\n    const delta = max - min;\r\n\r\n    let hue, lightness, saturation;\r\n\r\n    // hue\r\n    if (delta === 0) hue = 0;\r\n    else if (nR === max) hue = ((nG - nB) / delta) % 6;\r\n    else if (nG === max) hue = (nB - nR) / delta + 2;\r\n    else hue = (nR - nG) / delta + 4;\r\n\r\n    hue = Math.round(hue * 60);\r\n\r\n    if (hue < 0) hue += 360;\r\n\r\n    // lightness\r\n    lightness = (max + min) / 2;\r\n\r\n    // saturation\r\n    if (delta === 0) saturation = 0;\r\n    else saturation = delta / (1 - Math.abs(2 * lightness - 1));\r\n\r\n    lightness = round(lightness * 100, 1);\r\n    saturation = round(saturation * 100, 1);\r\n\r\n    return [hue, saturation, lightness];\r\n  };\r\n\r\n  toHsl() {\r\n    const [hue, saturation, lightness] = this.getHsl();\r\n\r\n    return `hsl(${hue}, ${saturation}%, ${lightness}%)`;\r\n  }\r\n\r\n  toHsla() {\r\n    const { a } = this;\r\n\r\n    const [hue, saturation, lightness] = this.getHsl();\r\n\r\n    const alpha = round(a / 255, 2);\r\n\r\n    return `hsla(${hue}, ${saturation}%, ${lightness}%, ${alpha})`;\r\n  }\r\n}\r\n","class OptionsProxy {\r\n  [key: string]: any;\r\n\r\n  constructor() {\r\n    return new Proxy(this as unknown as Options, {\r\n      get: (target, name) => {\r\n        const field = target.fieldHashmap[name.toString()];\r\n\r\n        if (field) return field.value;\r\n\r\n        return target[name as keyof Options];\r\n      },\r\n    });\r\n  }\r\n}\r\n\r\nexport default class Options extends OptionsProxy {\r\n  readonly fieldArray: (HTMLInputElement | HTMLSelectElement)[];\r\n  readonly fieldHashmap: {\r\n    [key: string]: HTMLInputElement | HTMLSelectElement;\r\n  };\r\n  readonly fieldToBeforeChangeCallback: {\r\n    [key: string]: () => void;\r\n  };\r\n\r\n  callback?: () => void;\r\n\r\n  constructor(optionFields: (HTMLInputElement | HTMLSelectElement)[], callback?: () => void) {\r\n    super();\r\n\r\n    this.fieldArray = optionFields;\r\n    this.fieldHashmap = {};\r\n    this.fieldToBeforeChangeCallback = {};\r\n\r\n    optionFields.forEach((field) => {\r\n      this.fieldHashmap[field.name] = field;\r\n    });\r\n\r\n    if (callback) this.onChange = callback;\r\n\r\n    this.restore();\r\n  }\r\n\r\n  onBeforeChange = (name: string, newBeforeChangeCallback: () => void) => {\r\n    const { fieldHashmap, fieldToBeforeChangeCallback, callback } = this;\r\n\r\n    const field = fieldHashmap[name];\r\n\r\n    if (!field) return;\r\n\r\n    const beforeChangeCallback = fieldToBeforeChangeCallback[name];\r\n\r\n    if (callback) field.removeEventListener(\"change\", callback);\r\n    if (beforeChangeCallback) field.removeEventListener(\"change\", beforeChangeCallback);\r\n\r\n    field.addEventListener(\"change\", newBeforeChangeCallback);\r\n\r\n    if (callback) field.addEventListener(\"change\", callback);\r\n\r\n    fieldToBeforeChangeCallback[name] = newBeforeChangeCallback;\r\n  };\r\n\r\n  triggerAllBeforeChangeCallbacks = () => {\r\n    const { fieldArray, fieldToBeforeChangeCallback } = this;\r\n\r\n    fieldArray.forEach((field) => {\r\n      const beforeChangeCallback = fieldToBeforeChangeCallback[field.name];\r\n\r\n      if (beforeChangeCallback) beforeChangeCallback();\r\n    });\r\n  };\r\n\r\n  save = () => {\r\n    const { fieldArray } = this;\r\n\r\n    const optionsString = fieldArray.reduce((optionsObject, field) => {\r\n      if (field.type !== \"file\") optionsObject[field.name] = field.value;\r\n\r\n      return optionsObject;\r\n    }, {} as { [key: string]: string });\r\n\r\n    localStorage.setItem(\"options\", JSON.stringify(optionsString));\r\n  };\r\n\r\n  restore = () => {\r\n    const { fieldArray } = this;\r\n    const optionsString = localStorage.getItem(\"options\");\r\n\r\n    if (!optionsString) return;\r\n\r\n    try {\r\n      const optionsObject = JSON.parse(optionsString);\r\n\r\n      fieldArray.forEach((field) => {\r\n        if (optionsObject[field.name]) field.value = optionsObject[field.name];\r\n      });\r\n    } catch (e) {\r\n      localStorage.removeItem(\"options\");\r\n    }\r\n  };\r\n\r\n  set onChange(newCallback: () => void) {\r\n    const { fieldArray, callback } = this;\r\n\r\n    fieldArray.forEach((field) => {\r\n      if (callback) field.removeEventListener(\"change\", callback);\r\n      field.addEventListener(\"change\", newCallback);\r\n    });\r\n\r\n    this.callback = newCallback;\r\n  }\r\n}\r\n","import Color from \"./Color\";\r\nimport { clamp } from \"./Util\";\r\n\r\nexport default class Preview {\r\n  readonly preview: HTMLCanvasElement;\r\n  readonly uploader: HTMLInputElement;\r\n\r\n  private context: CanvasRenderingContext2D;\r\n  private image: HTMLImageElement;\r\n  private colors: Color[];\r\n\r\n  private opacity: number | undefined;\r\n  private backgroundColor: Color | undefined;\r\n\r\n  constructor(previewElement: HTMLCanvasElement, uploaderElement: HTMLInputElement) {\r\n    const image = new Image();\r\n    image.addEventListener(\"load\", this.handleUpdateImage);\r\n\r\n    uploaderElement.addEventListener(\"change\", this.handleReadUpload);\r\n\r\n    this.preview = previewElement;\r\n    this.uploader = uploaderElement;\r\n\r\n    const context = previewElement.getContext(\"2d\");\r\n    if (!context) throw \"Failed to get 2D context from canvas element.\";\r\n\r\n    this.context = context;\r\n    this.image = image;\r\n    this.colors = [];\r\n  }\r\n\r\n  handleReadUpload = () => {\r\n    const { uploader, image } = this;\r\n\r\n    const fileReader = new FileReader();\r\n\r\n    fileReader.addEventListener(\"load\", (e) => {\r\n      if (!e.target || !e.target.result) throw \"Failed to read uploaded file.\";\r\n\r\n      image.src = e.target.result.toString();\r\n    });\r\n\r\n    if (!uploader.files) throw \"Asked to read image file but found no file was uploaded.\";\r\n\r\n    fileReader.readAsDataURL(uploader.files[0]);\r\n  };\r\n\r\n  handleUpdateImage = () => {\r\n    const { preview, context, image, opacity, backgroundColor } = this;\r\n    let { width, height } = image;\r\n\r\n    if (!width) width = 300;\r\n    if (!height) height = 200;\r\n\r\n    const imageDataToColorArray = (imageData: Uint8ClampedArray) => {\r\n      const colors = [];\r\n\r\n      for (let i = 0; i < imageData.length; i += 4) {\r\n        const r = imageData[i + 0];\r\n        const g = imageData[i + 1];\r\n        const b = imageData[i + 2];\r\n        const a = imageData[i + 3];\r\n\r\n        colors.push(new Color(r, g, b, a));\r\n      }\r\n\r\n      return colors;\r\n    };\r\n\r\n    preview.width = width;\r\n    preview.height = height;\r\n\r\n    context.clearRect(0, 0, width, height);\r\n    context.drawImage(image, 0, 0);\r\n\r\n    const imageData = context.getImageData(0, 0, width, height);\r\n    const values = imageData.data;\r\n\r\n    if (opacity == null && backgroundColor == null) {\r\n      this.colors = imageDataToColorArray(values);\r\n      return true;\r\n    }\r\n\r\n    // Handle Opacity\r\n\r\n    if (opacity != null) {\r\n      for (let i = 0; i < values.length; i += 4) {\r\n        const alpha = values[i + 3] * opacity;\r\n        const clampedAlpha = clamp(alpha, 0, 255);\r\n\r\n        values[i + 3] = clampedAlpha;\r\n      }\r\n\r\n      context.putImageData(imageData, 0, 0);\r\n\r\n      if (!backgroundColor) {\r\n        this.colors = imageDataToColorArray(values);\r\n        return true;\r\n      }\r\n    }\r\n\r\n    // Handle Background Color\r\n\r\n    if (backgroundColor != null) {\r\n      const offscreenCanvas = new OffscreenCanvas(width, height);\r\n      const offscreenContext = offscreenCanvas.getContext(\"2d\");\r\n\r\n      if (!offscreenContext) throw \"Failed to get 2D context of offscreen canvas.\";\r\n\r\n      offscreenContext.fillStyle = backgroundColor.toRgba();\r\n      offscreenContext.fillRect(0, 0, width, height);\r\n      offscreenContext.drawImage(preview, 0, 0);\r\n\r\n      context.drawImage(offscreenCanvas, 0, 0);\r\n\r\n      this.colors = imageDataToColorArray(context.getImageData(0, 0, width, height).data);\r\n    }\r\n  };\r\n\r\n  loadExampleImage = () => {\r\n    this.image.src = \"./example.png\";\r\n  };\r\n\r\n  getColorsAt = (startX: number, startY: number, width: number, height: number) => {\r\n    const { preview, colors } = this;\r\n\r\n    const targetColors = [];\r\n\r\n    for (let y = startY; y < startY + height; y++) {\r\n      for (let x = startX; x < startX + width; x++) {\r\n        const i = y * preview.width + x;\r\n\r\n        if (i < 0 || i > colors.length) continue;\r\n\r\n        targetColors.push(colors[i]);\r\n      }\r\n    }\r\n\r\n    return targetColors;\r\n  };\r\n\r\n  setBackgroundColor = (color: Color) => {\r\n    if (color.a === 0) delete this.backgroundColor;\r\n    else this.backgroundColor = color;\r\n\r\n    this.handleUpdateImage();\r\n  };\r\n\r\n  setOpacity = (opacity: number) => {\r\n    if (opacity === 1) delete this.opacity;\r\n    else this.opacity = opacity;\r\n\r\n    this.handleUpdateImage();\r\n  };\r\n}\r\n","import Color from \"./Color\";\r\nimport Options from \"./Options\";\r\n\r\ntype resultElementInfo = {\r\n  textElement: HTMLInputElement;\r\n  foregroundElement: HTMLElement;\r\n  backgroundElement: HTMLElement;\r\n};\r\n\r\nexport default class Results {\r\n  readonly resultElementArray: resultElementInfo[];\r\n  readonly resultElementHashmap: { [key: string]: resultElementInfo };\r\n\r\n  constructor(resultFields: HTMLElement[]) {\r\n    this.resultElementArray = [];\r\n    this.resultElementHashmap = {};\r\n\r\n    resultFields.forEach((resultField) => {\r\n      const textElement = resultField.querySelector(\"input[type=text]\") as HTMLInputElement;\r\n      const foregroundElement = resultField.querySelector(\".foreground\") as HTMLElement;\r\n      const backgroundElement = resultField.querySelector(\".background\") as HTMLElement;\r\n      const copyButton = resultField.querySelector(\".copy\");\r\n\r\n      if (copyButton) {\r\n        copyButton.addEventListener(\"click\", (e) => {\r\n          e.preventDefault();\r\n          navigator.clipboard.writeText(textElement.value);\r\n        });\r\n      }\r\n\r\n      const proxiedTextElement = new Proxy(textElement, {\r\n        set: (target, name, value) => {\r\n          if (name === \"value\") foregroundElement.style.backgroundColor = value;\r\n\r\n          // @ts-expect-error continue with default behavior\r\n          target[name] = value;\r\n          return true;\r\n        },\r\n      });\r\n\r\n      const name = textElement.name.split(\"ResultText\")[0];\r\n      const info = {\r\n        textElement: proxiedTextElement,\r\n        foregroundElement,\r\n        backgroundElement,\r\n      };\r\n\r\n      this.resultElementHashmap[name] = info;\r\n      this.resultElementArray.push(info);\r\n    });\r\n  }\r\n\r\n  setBackgroundColor = (color: Color) => {\r\n    const { resultElementArray } = this;\r\n\r\n    const backgroundColor = color.toRgba();\r\n\r\n    resultElementArray.forEach((info) => {\r\n      info.backgroundElement.style.backgroundColor = backgroundColor;\r\n    });\r\n  };\r\n\r\n  setResult = (type: string, color: Color, options: Options) => {\r\n    const { resultElementHashmap } = this;\r\n    const resultFormat = options.resultFormat;\r\n    const hideAlphaChannel = options.hideAlphaChannel;\r\n\r\n    let includeAlpha = false;\r\n    if (hideAlphaChannel === \"always\") includeAlpha = false;\r\n    else if (hideAlphaChannel === \"never\") includeAlpha = true;\r\n    else if (color.a !== 255) includeAlpha = true;\r\n\r\n    let value = \"\";\r\n\r\n    if (resultFormat === \"rgb\") value = includeAlpha ? color.toRgba() : color.toRgb();\r\n    if (resultFormat === \"hex\") value = includeAlpha ? color.toHex8() : color.toHex6();\r\n    if (resultFormat === \"hsl\") value = includeAlpha ? color.toHsla() : color.toHsl();\r\n    if (resultFormat === \"svg\") value = color.getClosedNamedColor();\r\n\r\n    if (!value) throw `Invalid resultFormat option: ${resultFormat.toString()}`;\r\n\r\n    resultElementHashmap[type].textElement.value = value;\r\n  };\r\n}\r\n","import { debounce } from \"./Util\";\r\n\r\nexport default class Selection {\r\n  readonly outline: HTMLElement;\r\n  readonly target: HTMLCanvasElement;\r\n\r\n  callback: (() => void) | undefined;\r\n\r\n  private isInProgress = false;\r\n  private startPosition = { x: 0, y: 0 };\r\n  private endPosition = { x: 0, y: 0 };\r\n\r\n  info:\r\n    | {\r\n        top: number;\r\n        left: number;\r\n        bottom: number;\r\n        right: number;\r\n        width: number;\r\n        height: number;\r\n      }\r\n    | undefined;\r\n\r\n  constructor(borderElement: HTMLElement, targetElement: HTMLCanvasElement, callback?: () => void) {\r\n    targetElement.onmousedown = this.handleSelect;\r\n    targetElement.onmouseup = this.handleSelect;\r\n    targetElement.onmousemove = this.handleSelect;\r\n    targetElement.onmouseleave = this.handleSelect;\r\n\r\n    targetElement.ontouchstart = this.handleTouch;\r\n    targetElement.ontouchend = this.handleTouch;\r\n    targetElement.ontouchmove = this.handleTouch;\r\n\r\n    this.outline = borderElement;\r\n    this.target = targetElement;\r\n\r\n    if (callback) this.onSelectionEnd = callback;\r\n  }\r\n\r\n  handleTouch = (e: TouchEvent) => {\r\n    const { targetTouches, changedTouches, type } = e;\r\n\r\n    if (targetTouches.length !== 2) return;\r\n    else e.preventDefault();\r\n\r\n    const { target, updateInfo, updateOutline, callback } = this;\r\n\r\n    const touches = type === \"touchend\" ? changedTouches : targetTouches;\r\n    const boundingRect = target.getBoundingClientRect();\r\n\r\n    const x1 = Math.round(touches[0].clientX - boundingRect.left);\r\n    const y1 = Math.round(touches[0].clientY - boundingRect.top);\r\n\r\n    const x2 = Math.round(touches[1].clientX - boundingRect.left);\r\n    const y2 = Math.round(touches[1].clientY - boundingRect.top);\r\n\r\n    this.startPosition = { x: x1, y: y1 };\r\n    this.endPosition = { x: x2, y: y2 };\r\n\r\n    updateInfo();\r\n    updateOutline();\r\n\r\n    if (callback) callback();\r\n  };\r\n\r\n  handleSelect = (e: MouseEvent) => {\r\n    const { type, button, clientX, clientY } = e;\r\n    const { target, isInProgress, updateInfo, updateOutline, callback } = this;\r\n\r\n    if (button !== null && button !== 0) return;\r\n\r\n    const boundingRect = target.getBoundingClientRect();\r\n    const x = Math.round(clientX - boundingRect.left);\r\n    const y = Math.round(clientY - boundingRect.top);\r\n\r\n    if (type === \"mousedown\") {\r\n      this.startPosition = { x, y };\r\n      this.isInProgress = true;\r\n      return;\r\n    }\r\n\r\n    if (!isInProgress) return;\r\n\r\n    if (type === \"mousemove\" || type === \"mouseup\" || type === \"mouseleave\") {\r\n      this.endPosition = { x, y };\r\n\r\n      updateInfo();\r\n      updateOutline();\r\n\r\n      if (callback) callback();\r\n    }\r\n\r\n    if (type === \"mouseup\" || type === \"mouseleave\") this.isInProgress = false;\r\n  };\r\n\r\n  set onSelectionEnd(callback: () => void) {\r\n    this.callback = debounce(callback);\r\n  }\r\n\r\n  updateInfo = () => {\r\n    const { startPosition, endPosition, target } = this;\r\n\r\n    const top = Math.max(Math.min(startPosition.y, endPosition.y), 0);\r\n    const left = Math.max(Math.min(startPosition.x, endPosition.x), 0);\r\n    const bottom = Math.min(Math.max(startPosition.y, endPosition.y), target.height);\r\n    const right = Math.min(Math.max(startPosition.x, endPosition.x), target.width);\r\n\r\n    const width = Math.max(right - left, 1);\r\n    const height = Math.max(bottom - top, 1);\r\n\r\n    this.info = { top, left, bottom, right, width, height };\r\n  };\r\n\r\n  updateOutline = () => {\r\n    const { outline, info } = this;\r\n\r\n    if (!info) return;\r\n\r\n    const { top, left, width, height } = info;\r\n\r\n    const cssText = `top:${top}px; left:${left}px; width:${width}px; height:${height}px;`;\r\n\r\n    outline.style.cssText = cssText;\r\n  };\r\n\r\n  clear = () => {\r\n    const { outline } = this;\r\n\r\n    outline.style.cssText = \"\";\r\n\r\n    delete this.info;\r\n  };\r\n}\r\n","export const debounce = (func: (...args: any[]) => any, timeout = 150) => {\r\n  let timer: number;\r\n\r\n  return (...args: any[]) => {\r\n    clearTimeout(timer);\r\n    timer = setTimeout(() => func.apply(this, args), timeout);\r\n  };\r\n};\r\n\r\nexport const round = (value: number, decimalPlaces = 0) =>\r\n  +(Math.round(+(value + `e+${decimalPlaces}`)) + `e-${decimalPlaces}`);\r\n\r\nexport const clamp = (value: number, min: number, max: number) =>\r\n  Math.max(Math.min(value, max), min);\r\n","import Color from \"./classes/Color\";\r\nimport Options from \"./classes/Options\";\r\nimport Preview from \"./classes/Preview\";\r\nimport Selection from \"./classes/Selection\";\r\nimport Results from \"./classes/Results\";\r\n\r\nfunction init() {\r\n  const $ = (selector: string): HTMLElement[] => Array.from(document.querySelectorAll(selector));\r\n\r\n  const optionsForm = $(\".options\")[0] as HTMLFormElement;\r\n  const resultsForm = $(\".results\")[0] as HTMLFormElement;\r\n\r\n  optionsForm.reset();\r\n  resultsForm.reset();\r\n\r\n  optionsForm.addEventListener(\"submit\", (e) => {\r\n    e.preventDefault();\r\n    calculate();\r\n  });\r\n\r\n  const optionFields = $(\".options :is(input, select)\") as (HTMLInputElement | HTMLSelectElement)[];\r\n  const resultFields = $(\".results .field\") as HTMLInputElement[];\r\n\r\n  const previewElement = $(\".preview\")[0] as HTMLCanvasElement;\r\n  const uploaderElement = $(\"input[name=imageUpload]\")[0] as HTMLInputElement;\r\n  const selectorElement = $(\".selector\")[0];\r\n\r\n  const options = new Options(optionFields);\r\n  const preview = new Preview(previewElement, uploaderElement);\r\n  const results = new Results(resultFields);\r\n  const selection = new Selection(selectorElement, previewElement);\r\n\r\n  const calculate = () => {\r\n    if (!selection.info) return;\r\n\r\n    const { top, left, width, height } = selection.info;\r\n\r\n    const selectedColors = preview.getColorsAt(left, top, width, height);\r\n\r\n    const [meanColor, medianColor] = Color.getMeanMedian(selectedColors, options);\r\n    const [lightestColor, darkestColor] = Color.getLightestDarkest(selectedColors);\r\n\r\n    results.setResult(\"mean\", meanColor, options);\r\n    results.setResult(\"median\", medianColor, options);\r\n    results.setResult(\"lightest\", lightestColor, options);\r\n    results.setResult(\"darkest\", darkestColor, options);\r\n  };\r\n\r\n  uploaderElement.addEventListener(\"change\", selection.clear);\r\n\r\n  const exampleImageButton = $(\"#example-image-button\")[0];\r\n  const resetButton = $(\"button[type=reset]\")[0];\r\n  const saveButton = $(\"button[name=save\")[0];\r\n\r\n  exampleImageButton.addEventListener(\"click\", () => {\r\n    selection.clear();\r\n    preview.loadExampleImage();\r\n  });\r\n\r\n  resetButton.addEventListener(\"click\", () => {\r\n    optionsForm.reset();\r\n    options.triggerAllBeforeChangeCallbacks();\r\n    calculate();\r\n  });\r\n\r\n  saveButton.addEventListener(\"click\", options.save);\r\n\r\n  options.onBeforeChange(\"opacityPercentage\", () => {\r\n    const opacityPercent = options.opacityPercentage;\r\n\r\n    preview.setOpacity(opacityPercent / 100);\r\n  });\r\n\r\n  const handleBackgroundSettingsChanged = () => {\r\n    const transparencyType = options.transparencyType;\r\n\r\n    let backgroundColor = null;\r\n\r\n    if (transparencyType === \"straight\") backgroundColor = new Color(0, 0, 0, 0);\r\n    if (transparencyType === \"premultiplied\") backgroundColor = new Color(options.backgroundColor);\r\n\r\n    if (!backgroundColor) throw `Invalid transparency type option: ${transparencyType.toString()}`;\r\n\r\n    preview.setBackgroundColor(backgroundColor),\r\n      results.setBackgroundColor(backgroundColor),\r\n      calculate();\r\n  };\r\n\r\n  options.onBeforeChange(\"backgroundColor\", handleBackgroundSettingsChanged);\r\n  options.onBeforeChange(\"transparencyType\", handleBackgroundSettingsChanged);\r\n\r\n  selection.onSelectionEnd = calculate;\r\n  options.onChange = calculate;\r\n}\r\n\r\nwindow.onload = () => requestAnimationFrame(init);\r\n"]}