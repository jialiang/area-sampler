{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/rgb-lab/color.js","src/classes/Color.ts","src/classes/Options.ts","src/classes/Preview.ts","src/classes/Results.ts","src/classes/Selection.ts","src/classes/Util.ts","src/index.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","lab2rgb","h","M","Math","pow","max","min","rgb2lab","deltaE","sqrt","w","s","2","_rgbLab","_Util","_construct","Reflect","construct","sham","Proxy","Boolean","prototype","valueOf","bind","push","apply","Function","_setPrototypeOf","arguments","Object","setPrototypeOf","__proto__","_toConsumableArray","Array","isArray","_arrayLikeToArray","Symbol","iterator","from","_unsupportedIterableToArray","TypeError","_typeof","constructor","_slicedToArray","l","m","next","done","value","return","toString","slice","name","test","_defineProperties","enumerable","configurable","writable","defineProperty","_toPropertyKey","key","_defineProperty","toPrimitive","String","Number","get","this","g","b","map","round","concat","join","hex","getHsl","Color","namedColorsLab","forEach","abs","parseInt","default","keys","averagingMethod","v","sort","squaredValues","d","floor","reduce","indexOf","OptionsProxy","_createClass","_classCallCheck","fieldHashmap","Options","_inherits","_createSuper","_assertThisInitialized","fieldToBeforeChangeCallback","callback","removeEventListener","addEventListener","fieldArray","type","localStorage","setItem","JSON","stringify","getItem","parse","removeItem","onChange","restore","set","_regeneratorRuntime","hasOwnProperty","asyncIterator","toStringTag","create","E","O","method","arg","delegate","x","resultName","nextLoc","sent","_sent","dispatchException","abrupt","wrap","y","getPrototypeOf","k","_invoke","resolve","__await","then","L","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","P","completion","reset","isNaN","displayName","isGeneratorFunction","mark","awrap","AsyncIterator","async","Promise","reverse","pop","values","prev","charAt","stop","rval","complete","finish","catch","delegateYield","asyncGeneratorStep","uploader","image","loadingToast","toast","requestAnimationFrame","FileReader","target","result","src","files","readAsDataURL","colors","preview","context","opacity","backgroundColor","width","height","clearRect","drawImage","getImageData","data","clamp","putImageData","OffscreenCanvas","getContext","fillStyle","toRgba","fillRect","debounce","_handleUpdateImage","handleUpdateImage","Image","handleReadUpload","Preview","resultElementArray","backgroundElement","style","resultElementHashmap","resultFormat","hideAlphaChannel","toRgb","toHex8","toHex6","toHsla","toHsl","getClosedNamedColor","textElement","querySelector","preventDefault","navigator","clipboard","writeText","split","foregroundElement","Results","Selection","targetTouches","changedTouches","updateInfo","updateOutline","getBoundingClientRect","clientX","left","clientY","top","startPosition","endPosition","button","isInProgress","info","bottom","right","outline","cssText","onmousedown","handleSelect","onmouseup","onmousemove","onmouseleave","ontouchstart","handleTouch","ontouchend","ontouchmove","onSelectionEnd","clearTimeout","setTimeout","document","createElement","textContent","className","setAttribute","appendChild","removeChild","_Color","_interopRequireDefault","_Options","_Preview","_Selection","_Results","__esModule","S","A","_","init","querySelectorAll","transparencyType","setBackgroundColor","getColorsAt","getMeanMedian","getLightestDarkest","setResult","clear","loadExampleImage","triggerAllBeforeChangeCallbacks","save","onBeforeChange","opacityPercentage","setOpacity","window","onload"],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","exports.lab2rgb=function(t){var a,h,M,r=(t[0]+16)/116,o=t[1]/500+r,n=r-t[2]/200;return h=-.9689*(o=.95047*(o*o*o>.008856?o*o*o:(o-16/116)/7.787))+1.8758*(r=1*(r*r*r>.008856?r*r*r:(r-16/116)/7.787))+.0415*(n=1.08883*(n*n*n>.008856?n*n*n:(n-16/116)/7.787)),M=.0557*o+-.204*r+1.057*n,a=(a=3.2406*o+-1.5372*r+-.4986*n)>.0031308?1.055*Math.pow(a,1/2.4)-.055:12.92*a,h=h>.0031308?1.055*Math.pow(h,1/2.4)-.055:12.92*h,M=M>.0031308?1.055*Math.pow(M,1/2.4)-.055:12.92*M,[255*Math.max(0,Math.min(1,a)),255*Math.max(0,Math.min(1,h)),255*Math.max(0,Math.min(1,M))]},exports.rgb2lab=function(t){var a,h,M,r=t[0]/255,o=t[1]/255,n=t[2]/255;return h=(.2126*(r=r>.04045?Math.pow((r+.055)/1.055,2.4):r/12.92)+.7152*(o=o>.04045?Math.pow((o+.055)/1.055,2.4):o/12.92)+.0722*(n=n>.04045?Math.pow((n+.055)/1.055,2.4):n/12.92))/1,M=(.0193*r+.1192*o+.9505*n)/1.08883,a=(a=(.4124*r+.3576*o+.1805*n)/.95047)>.008856?Math.pow(a,1/3):7.787*a+16/116,[116*(h=h>.008856?Math.pow(h,1/3):7.787*h+16/116)-16,500*(a-h),200*(h-(M=M>.008856?Math.pow(M,1/3):7.787*M+16/116))]},exports.deltaE=function(t,a){var h=t[0]-a[0],M=t[1]-a[1],r=t[2]-a[2],o=Math.sqrt(t[1]*t[1]+t[2]*t[2]),n=o-Math.sqrt(a[1]*a[1]+a[2]*a[2]),p=M*M+r*r-n*n,w=h/1,e=n/(1+.045*o),s=(p=p<0?0:Math.sqrt(p))/(1+.015*o),i=w*w+e*e+s*s;return i<0?0:Math.sqrt(i)};\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbG9yLmpzIl0sIm5hbWVzIjpbImV4cG9ydHMiLCJsYWIycmdiIiwibGFiIiwiciIsImciLCJiIiwieSIsIngiLCJ6IiwiTWF0aCIsInBvdyIsIm1heCIsIm1pbiIsInJnYjJsYWIiLCJyZ2IiLCJkZWx0YUUiLCJsYWJBIiwibGFiQiIsImRlbHRhTCIsImRlbHRhQSIsImRlbHRhQiIsImMxIiwic3FydCIsImRlbHRhQyIsImRlbHRhSCIsImRlbHRhTEtsc2wiLCJkZWx0YUNrY3NjIiwiZGVsdGFIa2hzaCIsImkiXSwibWFwcGluZ3MiOiJBQUdBQSxRQUFRQyxRQUFVLFNBQWlCQyxHQUNqQyxJQUdJQyxFQUFHQyxFQUFHQyxFQUhOQyxHQUFLSixFQUFJLEdBQUssSUFBTSxJQUNwQkssRUFBSUwsRUFBSSxHQUFLLElBQU1JLEVBQ25CRSxFQUFJRixFQUFJSixFQUFJLEdBQUssSUFlckIsT0FQQUUsR0FBUyxPQUxURyxFQUFJLFFBQVlBLEVBQUlBLEVBQUlBLEVBQUksUUFBWUEsRUFBSUEsRUFBSUEsR0FBS0EsRUFBSSxHQUFHLEtBQU8sUUFLNUMsUUFKdkJELEVBQUksR0FBWUEsRUFBSUEsRUFBSUEsRUFBSSxRQUFZQSxFQUFJQSxFQUFJQSxHQUFLQSxFQUFJLEdBQUcsS0FBTyxRQUk5QixPQUhyQ0UsRUFBSSxTQUFZQSxFQUFJQSxFQUFJQSxFQUFJLFFBQVlBLEVBQUlBLEVBQUlBLEdBQUtBLEVBQUksR0FBRyxLQUFPLFFBSW5FSCxFQUFTLE1BQUxFLEdBQW1CLEtBQUxELEVBQW1CLE1BQUxFLEVBRWhDTCxHQUpBQSxFQUFTLE9BQUxJLEdBQW1CLE9BQUxELEdBQW1CLE1BQUxFLEdBSXZCLFNBQWMsTUFBUUMsS0FBS0MsSUFBSVAsRUFBRyxFQUFFLEtBQU8sS0FBUyxNQUFRQSxFQUNyRUMsRUFBS0EsRUFBSSxTQUFjLE1BQVFLLEtBQUtDLElBQUlOLEVBQUcsRUFBRSxLQUFPLEtBQVMsTUFBUUEsRUFDckVDLEVBQUtBLEVBQUksU0FBYyxNQUFRSSxLQUFLQyxJQUFJTCxFQUFHLEVBQUUsS0FBTyxLQUFTLE1BQVFBLEVBRTlELENBQStCLElBQTlCSSxLQUFLRSxJQUFJLEVBQUdGLEtBQUtHLElBQUksRUFBR1QsSUFDTSxJQUE5Qk0sS0FBS0UsSUFBSSxFQUFHRixLQUFLRyxJQUFJLEVBQUdSLElBQ00sSUFBOUJLLEtBQUtFLElBQUksRUFBR0YsS0FBS0csSUFBSSxFQUFHUCxNQUlsQ0wsUUFBUWEsUUFBVSxTQUFpQkMsR0FDakMsSUFHSVAsRUFBR0QsRUFBR0UsRUFITkwsRUFBSVcsRUFBSSxHQUFLLElBQ2JWLEVBQUlVLEVBQUksR0FBSyxJQUNiVCxFQUFJUyxFQUFJLEdBQUssSUFlakIsT0FQQVIsR0FBUyxPQUxUSCxFQUFLQSxFQUFJLE9BQVdNLEtBQUtDLEtBQUtQLEVBQUksTUFBUyxNQUFPLEtBQU9BLEVBQUksT0FLdkMsT0FKdEJDLEVBQUtBLEVBQUksT0FBV0ssS0FBS0MsS0FBS04sRUFBSSxNQUFTLE1BQU8sS0FBT0EsRUFBSSxPQUkxQixPQUhuQ0MsRUFBS0EsRUFBSSxPQUFXSSxLQUFLQyxLQUFLTCxFQUFJLE1BQVMsTUFBTyxLQUFPQSxFQUFJLFFBR2hCLEVBQzdDRyxHQUFTLE1BQUpMLEVBQWlCLE1BQUpDLEVBQWlCLE1BQUpDLEdBQWMsUUFFN0NFLEdBSkFBLEdBQVMsTUFBSkosRUFBaUIsTUFBSkMsRUFBaUIsTUFBSkMsR0FBYyxRQUlwQyxRQUFZSSxLQUFLQyxJQUFJSCxFQUFHLEVBQUUsR0FBTSxNQUFRQSxFQUFLLEdBQUcsSUFJbEQsQ0FBRSxLQUhURCxFQUFLQSxFQUFJLFFBQVlHLEtBQUtDLElBQUlKLEVBQUcsRUFBRSxHQUFNLE1BQVFBLEVBQUssR0FBRyxLQUdyQyxHQUFJLEtBQU9DLEVBQUlELEdBQUksS0FBT0EsR0FGOUNFLEVBQUtBLEVBQUksUUFBWUMsS0FBS0MsSUFBSUYsRUFBRyxFQUFFLEdBQU0sTUFBUUEsRUFBSyxHQUFHLFFBUTNEUixRQUFRZSxPQUFTLFNBQWdCQyxFQUFNQyxHQUNyQyxJQUFJQyxFQUFTRixFQUFLLEdBQUtDLEVBQUssR0FDeEJFLEVBQVNILEVBQUssR0FBS0MsRUFBSyxHQUN4QkcsRUFBU0osRUFBSyxHQUFLQyxFQUFLLEdBQ3hCSSxFQUFLWixLQUFLYSxLQUFLTixFQUFLLEdBQUtBLEVBQUssR0FBS0EsRUFBSyxHQUFLQSxFQUFLLElBRWxETyxFQUFTRixFQURKWixLQUFLYSxLQUFLTCxFQUFLLEdBQUtBLEVBQUssR0FBS0EsRUFBSyxHQUFLQSxFQUFLLElBRWxETyxFQUFTTCxFQUFTQSxFQUFTQyxFQUFTQSxFQUFTRyxFQUFTQSxFQUl0REUsRUFBYVAsRUFBUyxFQUN0QlEsRUFBYUgsR0FIUixFQUFNLEtBQVFGLEdBSW5CTSxHQUxKSCxFQUFTQSxFQUFTLEVBQUksRUFBSWYsS0FBS2EsS0FBS0UsS0FFM0IsRUFBTSxLQUFRSCxHQUluQk8sRUFBSUgsRUFBYUEsRUFBYUMsRUFBYUEsRUFBYUMsRUFBYUEsRUFDekUsT0FBT0MsRUFBSSxFQUFJLEVBQUluQixLQUFLYSxLQUFLTSIsImZpbGUiOiJDOlxcVXNlcnNcXEppYSBMaWFuZ1xcRGVza3RvcFxcQWxsXFxHaXRcXGFyZWEtc2FtcGxlclxcbm9kZV9tb2R1bGVzXFxyZ2ItbGFiXFxjb2xvci5qcyJ9","import { rgb2lab, deltaE as getDeltaE } from \"rgb-lab\";\r\n\r\nimport Options from \"./Options.ts\";\r\nimport { round } from \"./Util.ts\";\r\n\r\nexport default class Color {\r\n  static squaredValues = [...Array(256).keys()].map((value) => value * value);\r\n\r\n  static namedColorsLab = [\r\n    {\r\n      name: \"aliceblue\",\r\n      value: [97.18, -1.34, -4.27],\r\n    },\r\n    {\r\n      name: \"antiquewhite\",\r\n      value: [93.73, 1.84, 11.52],\r\n    },\r\n    {\r\n      name: \"aqua\",\r\n      value: [91.12, -48.08, -14.14],\r\n    },\r\n    {\r\n      name: \"aquamarine\",\r\n      value: [92.04, -45.52, 9.71],\r\n    },\r\n    {\r\n      name: \"azure\",\r\n      value: [98.93, -4.88, -1.7],\r\n    },\r\n    {\r\n      name: \"beige\",\r\n      value: [95.95, -4.19, 12.04],\r\n    },\r\n    {\r\n      name: \"bisque\",\r\n      value: [92.01, 4.43, 19],\r\n    },\r\n    {\r\n      name: \"black\",\r\n      value: [0, 0, 0],\r\n    },\r\n    {\r\n      name: \"blanchedalmond\",\r\n      value: [93.92, 2.13, 17.02],\r\n    },\r\n    {\r\n      name: \"blue\",\r\n      value: [32.3, 79.2, -107.86],\r\n    },\r\n    {\r\n      name: \"blueviolet\",\r\n      value: [42.19, 69.86, -74.77],\r\n    },\r\n    {\r\n      name: \"brown\",\r\n      value: [37.52, 49.7, 30.54],\r\n    },\r\n    {\r\n      name: \"burlywood\",\r\n      value: [77.02, 7.05, 30.01],\r\n    },\r\n    {\r\n      name: \"cadetblue\",\r\n      value: [61.15, -19.68, -7.43],\r\n    },\r\n    {\r\n      name: \"chartreuse\",\r\n      value: [89.87, -68.07, 85.78],\r\n    },\r\n    {\r\n      name: \"chocolate\",\r\n      value: [55.99, 37.06, 56.74],\r\n    },\r\n    {\r\n      name: \"coral\",\r\n      value: [67.29, 45.36, 47.49],\r\n    },\r\n    {\r\n      name: \"cornflowerblue\",\r\n      value: [61.93, 9.34, -49.31],\r\n    },\r\n    {\r\n      name: \"cornsilk\",\r\n      value: [97.46, -2.21, 14.28],\r\n    },\r\n    {\r\n      name: \"crimson\",\r\n      value: [47.03, 70.94, 33.59],\r\n    },\r\n    {\r\n      name: \"cyan\",\r\n      value: [91.12, -48.08, -14.14],\r\n    },\r\n    {\r\n      name: \"darkblue\",\r\n      value: [14.76, 50.43, -68.68],\r\n    },\r\n    {\r\n      name: \"darkcyan\",\r\n      value: [52.21, -30.62, -9],\r\n    },\r\n    {\r\n      name: \"darkgoldenrod\",\r\n      value: [59.22, 9.87, 62.73],\r\n    },\r\n    {\r\n      name: \"darkgray\",\r\n      value: [69.24, 0, -0.01],\r\n    },\r\n    {\r\n      name: \"darkgreen\",\r\n      value: [36.2, -43.37, 41.86],\r\n    },\r\n    {\r\n      name: \"darkgrey\",\r\n      value: [69.24, 0, -0.01],\r\n    },\r\n    {\r\n      name: \"darkkhaki\",\r\n      value: [73.38, -8.79, 39.29],\r\n    },\r\n    {\r\n      name: \"darkmagenta\",\r\n      value: [32.6, 62.56, -38.74],\r\n    },\r\n    {\r\n      name: \"darkolivegreen\",\r\n      value: [42.23, -18.83, 30.6],\r\n    },\r\n    {\r\n      name: \"darkorange\",\r\n      value: [69.48, 36.83, 75.49],\r\n    },\r\n    {\r\n      name: \"darkorchid\",\r\n      value: [43.38, 65.17, -60.11],\r\n    },\r\n    {\r\n      name: \"darkred\",\r\n      value: [28.08, 51.01, 41.29],\r\n    },\r\n    {\r\n      name: \"darksalmon\",\r\n      value: [69.85, 28.18, 27.7],\r\n    },\r\n    {\r\n      name: \"darkseagreen\",\r\n      value: [72.09, -23.82, 18.03],\r\n    },\r\n    {\r\n      name: \"darkslateblue\",\r\n      value: [30.83, 26.06, -42.09],\r\n    },\r\n    {\r\n      name: \"darkslategray\",\r\n      value: [31.26, -11.72, -3.73],\r\n    },\r\n    {\r\n      name: \"darkslategrey\",\r\n      value: [31.26, -11.72, -3.73],\r\n    },\r\n    {\r\n      name: \"darkturquoise\",\r\n      value: [75.29, -40.04, -13.52],\r\n    },\r\n    {\r\n      name: \"darkviolet\",\r\n      value: [39.58, 76.34, -70.38],\r\n    },\r\n    {\r\n      name: \"deeppink\",\r\n      value: [55.95, 84.56, -5.71],\r\n    },\r\n    {\r\n      name: \"deepskyblue\",\r\n      value: [72.55, -17.65, -42.55],\r\n    },\r\n    {\r\n      name: \"dimgray\",\r\n      value: [44.41, 0, -0.01],\r\n    },\r\n    {\r\n      name: \"dimgrey\",\r\n      value: [44.41, 0, -0.01],\r\n    },\r\n    {\r\n      name: \"dodgerblue\",\r\n      value: [59.38, 9.97, -63.39],\r\n    },\r\n    {\r\n      name: \"firebrick\",\r\n      value: [39.11, 55.93, 37.65],\r\n    },\r\n    {\r\n      name: \"floralwhite\",\r\n      value: [98.4, -0.03, 5.37],\r\n    },\r\n    {\r\n      name: \"forestgreen\",\r\n      value: [50.59, -49.59, 45.02],\r\n    },\r\n    {\r\n      name: \"fuchsia\",\r\n      value: [60.32, 98.25, -60.84],\r\n    },\r\n    {\r\n      name: \"gainsboro\",\r\n      value: [87.76, 0, -0.01],\r\n    },\r\n    {\r\n      name: \"ghostwhite\",\r\n      value: [97.76, 1.25, -3.36],\r\n    },\r\n    {\r\n      name: \"gold\",\r\n      value: [86.93, -1.92, 87.14],\r\n    },\r\n    {\r\n      name: \"goldenrod\",\r\n      value: [70.82, 8.52, 68.76],\r\n    },\r\n    {\r\n      name: \"gray\",\r\n      value: [53.59, 0, -0.01],\r\n    },\r\n    {\r\n      name: \"green\",\r\n      value: [46.23, -51.7, 49.9],\r\n    },\r\n    {\r\n      name: \"greenyellow\",\r\n      value: [91.96, -52.48, 81.87],\r\n    },\r\n    {\r\n      name: \"grey\",\r\n      value: [53.59, 0, -0.01],\r\n    },\r\n    {\r\n      name: \"honeydew\",\r\n      value: [98.57, -7.56, 5.47],\r\n    },\r\n    {\r\n      name: \"hotpink\",\r\n      value: [65.48, 64.25, -10.66],\r\n    },\r\n    {\r\n      name: \"indianred\",\r\n      value: [53.39, 44.84, 22.11],\r\n    },\r\n    {\r\n      name: \"indigo\",\r\n      value: [20.47, 51.69, -53.32],\r\n    },\r\n    {\r\n      name: \"ivory\",\r\n      value: [99.64, -2.55, 7.15],\r\n    },\r\n    {\r\n      name: \"khaki\",\r\n      value: [90.33, -9.01, 44.97],\r\n    },\r\n    {\r\n      name: \"lavender\",\r\n      value: [91.83, 3.71, -9.67],\r\n    },\r\n    {\r\n      name: \"lavenderblush\",\r\n      value: [96.07, 5.89, -0.6],\r\n    },\r\n    {\r\n      name: \"lawngreen\",\r\n      value: [88.88, -67.86, 84.95],\r\n    },\r\n    {\r\n      name: \"lemonchiffon\",\r\n      value: [97.65, -5.42, 22.23],\r\n    },\r\n    {\r\n      name: \"lightblue\",\r\n      value: [83.81, -10.89, -11.49],\r\n    },\r\n    {\r\n      name: \"lightcoral\",\r\n      value: [66.15, 42.82, 19.55],\r\n    },\r\n    {\r\n      name: \"lightcyan\",\r\n      value: [97.87, -9.94, -3.38],\r\n    },\r\n    {\r\n      name: \"lightgoldenrodyellow\",\r\n      value: [97.37, -6.48, 19.23],\r\n    },\r\n    {\r\n      name: \"lightgray\",\r\n      value: [84.56, 0, -0.01],\r\n    },\r\n    {\r\n      name: \"lightgreen\",\r\n      value: [86.55, -46.33, 36.94],\r\n    },\r\n    {\r\n      name: \"lightgrey\",\r\n      value: [84.56, 0, -0.01],\r\n    },\r\n    {\r\n      name: \"lightpink\",\r\n      value: [81.05, 27.97, 5.03],\r\n    },\r\n    {\r\n      name: \"lightsalmon\",\r\n      value: [74.7, 31.48, 34.54],\r\n    },\r\n    {\r\n      name: \"lightseagreen\",\r\n      value: [65.79, -37.51, -6.34],\r\n    },\r\n    {\r\n      name: \"lightskyblue\",\r\n      value: [79.73, -10.82, -28.51],\r\n    },\r\n    {\r\n      name: \"lightslategray\",\r\n      value: [55.92, -2.24, -11.11],\r\n    },\r\n    {\r\n      name: \"lightslategrey\",\r\n      value: [55.92, -2.24, -11.11],\r\n    },\r\n    {\r\n      name: \"lightsteelblue\",\r\n      value: [78.45, -1.28, -15.22],\r\n    },\r\n    {\r\n      name: \"lightyellow\",\r\n      value: [99.28, -5.1, 14.83],\r\n    },\r\n    {\r\n      name: \"lime\",\r\n      value: [87.74, -86.18, 83.18],\r\n    },\r\n    {\r\n      name: \"limegreen\",\r\n      value: [72.61, -67.13, 61.44],\r\n    },\r\n    {\r\n      name: \"linen\",\r\n      value: [95.31, 1.68, 6.01],\r\n    },\r\n    {\r\n      name: \"magenta\",\r\n      value: [60.32, 98.25, -60.84],\r\n    },\r\n    {\r\n      name: \"maroon\",\r\n      value: [25.53, 48.06, 38.06],\r\n    },\r\n    {\r\n      name: \"mediumaquamarine\",\r\n      value: [75.69, -38.33, 8.3],\r\n    },\r\n    {\r\n      name: \"mediumblue\",\r\n      value: [24.98, 67.18, -91.5],\r\n    },\r\n    {\r\n      name: \"mediumorchid\",\r\n      value: [53.64, 59.07, -47.41],\r\n    },\r\n    {\r\n      name: \"mediumpurple\",\r\n      value: [54.98, 36.81, -50.1],\r\n    },\r\n    {\r\n      name: \"mediumseagreen\",\r\n      value: [65.27, -48.22, 24.29],\r\n    },\r\n    {\r\n      name: \"mediumslateblue\",\r\n      value: [52.16, 41.08, -65.41],\r\n    },\r\n    {\r\n      name: \"mediumspringgreen\",\r\n      value: [87.34, -70.68, 32.46],\r\n    },\r\n    {\r\n      name: \"mediumturquoise\",\r\n      value: [76.88, -37.35, -8.36],\r\n    },\r\n    {\r\n      name: \"mediumvioletred\",\r\n      value: [44.76, 71.01, -15.18],\r\n    },\r\n    {\r\n      name: \"midnightblue\",\r\n      value: [15.86, 31.72, -49.58],\r\n    },\r\n    {\r\n      name: \"mintcream\",\r\n      value: [99.16, -4.16, 1.24],\r\n    },\r\n    {\r\n      name: \"mistyrose\",\r\n      value: [92.66, 8.75, 4.83],\r\n    },\r\n    {\r\n      name: \"moccasin\",\r\n      value: [91.72, 2.44, 26.35],\r\n    },\r\n    {\r\n      name: \"navajowhite\",\r\n      value: [90.1, 4.51, 28.26],\r\n    },\r\n    {\r\n      name: \"navy\",\r\n      value: [12.98, 47.51, -64.7],\r\n    },\r\n    {\r\n      name: \"oldlace\",\r\n      value: [96.78, 0.18, 8.16],\r\n    },\r\n    {\r\n      name: \"olive\",\r\n      value: [51.87, -12.93, 56.68],\r\n    },\r\n    {\r\n      name: \"olivedrab\",\r\n      value: [54.65, -28.22, 49.69],\r\n    },\r\n    {\r\n      name: \"orange\",\r\n      value: [74.93, 23.94, 78.96],\r\n    },\r\n    {\r\n      name: \"orangered\",\r\n      value: [57.57, 67.8, 68.97],\r\n    },\r\n    {\r\n      name: \"orchid\",\r\n      value: [62.8, 55.29, -34.42],\r\n    },\r\n    {\r\n      name: \"palegoldenrod\",\r\n      value: [91.14, -7.35, 30.96],\r\n    },\r\n    {\r\n      name: \"palegreen\",\r\n      value: [90.75, -48.3, 38.52],\r\n    },\r\n    {\r\n      name: \"paleturquoise\",\r\n      value: [90.06, -19.63, -6.41],\r\n    },\r\n    {\r\n      name: \"palevioletred\",\r\n      value: [60.56, 45.53, 0.39],\r\n    },\r\n    {\r\n      name: \"papayawhip\",\r\n      value: [95.08, 1.27, 14.52],\r\n    },\r\n    {\r\n      name: \"peachpuff\",\r\n      value: [89.35, 8.09, 21.01],\r\n    },\r\n    {\r\n      name: \"peru\",\r\n      value: [61.75, 21.4, 47.92],\r\n    },\r\n    {\r\n      name: \"pink\",\r\n      value: [83.58, 24.15, 3.32],\r\n    },\r\n    {\r\n      name: \"plum\",\r\n      value: [73.37, 32.54, -22],\r\n    },\r\n    {\r\n      name: \"powderblue\",\r\n      value: [86.13, -14.09, -8.02],\r\n    },\r\n    {\r\n      name: \"purple\",\r\n      value: [29.78, 58.94, -36.5],\r\n    },\r\n    {\r\n      name: \"red\",\r\n      value: [53.23, 80.11, 67.22],\r\n    },\r\n    {\r\n      name: \"rosybrown\",\r\n      value: [63.61, 17.02, 6.6],\r\n    },\r\n    {\r\n      name: \"royalblue\",\r\n      value: [47.83, 26.27, -65.27],\r\n    },\r\n    {\r\n      name: \"saddlebrown\",\r\n      value: [37.47, 26.45, 40.99],\r\n    },\r\n    {\r\n      name: \"salmon\",\r\n      value: [67.26, 45.23, 29.09],\r\n    },\r\n    {\r\n      name: \"sandybrown\",\r\n      value: [73.95, 23.03, 46.79],\r\n    },\r\n    {\r\n      name: \"seagreen\",\r\n      value: [51.54, -39.71, 20.05],\r\n    },\r\n    {\r\n      name: \"seashell\",\r\n      value: [97.12, 2.17, 4.54],\r\n    },\r\n    {\r\n      name: \"sienna\",\r\n      value: [43.8, 29.33, 35.64],\r\n    },\r\n    {\r\n      name: \"silver\",\r\n      value: [77.7, 0, -0.01],\r\n    },\r\n    {\r\n      name: \"skyblue\",\r\n      value: [79.21, -14.83, -21.28],\r\n    },\r\n    {\r\n      name: \"slateblue\",\r\n      value: [45.34, 36.05, -57.78],\r\n    },\r\n    {\r\n      name: \"slategray\",\r\n      value: [52.84, -2.14, -10.58],\r\n    },\r\n    {\r\n      name: \"slategrey\",\r\n      value: [52.84, -2.14, -10.58],\r\n    },\r\n    {\r\n      name: \"snow\",\r\n      value: [98.64, 1.66, 0.58],\r\n    },\r\n    {\r\n      name: \"springgreen\",\r\n      value: [88.47, -76.9, 47.03],\r\n    },\r\n    {\r\n      name: \"steelblue\",\r\n      value: [52.47, -4.07, -32.2],\r\n    },\r\n    {\r\n      name: \"tan\",\r\n      value: [74.97, 5.02, 24.42],\r\n    },\r\n    {\r\n      name: \"teal\",\r\n      value: [48.26, -28.84, -8.48],\r\n    },\r\n    {\r\n      name: \"thistle\",\r\n      value: [80.08, 13.22, -9.24],\r\n    },\r\n    {\r\n      name: \"tomato\",\r\n      value: [62.2, 57.86, 46.42],\r\n    },\r\n    {\r\n      name: \"turquoise\",\r\n      value: [81.27, -44.08, -4.03],\r\n    },\r\n    {\r\n      name: \"violet\",\r\n      value: [69.69, 56.37, -36.82],\r\n    },\r\n    {\r\n      name: \"wheat\",\r\n      value: [89.35, 1.51, 24],\r\n    },\r\n    {\r\n      name: \"white\",\r\n      value: [100, 0.01, -0.01],\r\n    },\r\n    {\r\n      name: \"whitesmoke\",\r\n      value: [96.54, 0.01, -0.01],\r\n    },\r\n    {\r\n      name: \"yellow\",\r\n      value: [97.14, -21.56, 94.48],\r\n    },\r\n    {\r\n      name: \"yellowgreen\",\r\n      value: [76.54, -37.99, 66.59],\r\n    },\r\n  ] as { name: string; value: [number, number, number] }[];\r\n\r\n  static getMeanMedian = (colors: Color[], options: Options) => {\r\n    const averagingMethod = options.averagingMethod;\r\n    const numberOfPixels = colors.length;\r\n\r\n    const mean = new Color();\r\n    const median = new Color();\r\n\r\n    if (numberOfPixels === 0) return [mean, median];\r\n\r\n    const colorChannels = [\"r\", \"g\", \"b\", \"a\"] as const;\r\n\r\n    for (let i = 0; i < colorChannels.length; i++) {\r\n      const channel = colorChannels[i];\r\n\r\n      const values = [] as number[];\r\n\r\n      for (let i = 0; i < colors.length; i++) values.push(colors[i][channel]);\r\n\r\n      const sortedValues = values.sort();\r\n\r\n      if (averagingMethod === \"squared\") {\r\n        let totalSquaredValue = 0;\r\n\r\n        for (let i = 0; i < values.length; i++) totalSquaredValue += Color.squaredValues[values[i]];\r\n\r\n        const meanSquaredValue = totalSquaredValue / numberOfPixels;\r\n        const meanValue = Math.sqrt(meanSquaredValue);\r\n\r\n        mean[channel] = meanValue;\r\n      }\r\n\r\n      if (averagingMethod === \"simple\") {\r\n        let totalValue = 0;\r\n\r\n        for (let i = 0; i < values.length; i++) totalValue += values[i];\r\n\r\n        const meanValue = totalValue / numberOfPixels;\r\n\r\n        mean[channel] = meanValue;\r\n      }\r\n\r\n      const medianIndex = Math.floor(sortedValues.length / 2);\r\n\r\n      median[channel] = sortedValues[medianIndex];\r\n    }\r\n\r\n    return [mean, median];\r\n  };\r\n\r\n  static getLightestDarkest = (colors: Color[]) => {\r\n    if (colors.length === 0) return [new Color(), new Color()];\r\n\r\n    const sRGBtoLinear = (channel: number) => {\r\n      if (channel <= 0.04045) return channel / 12.92;\r\n\r\n      return Math.pow((channel + 0.055) / 1.055, 2.4);\r\n    };\r\n\r\n    const lightnessValues = colors.map((color) => {\r\n      const lR = sRGBtoLinear(color.r / 255);\r\n      const lG = sRGBtoLinear(color.g / 255);\r\n      const lB = sRGBtoLinear(color.b / 255);\r\n\r\n      const luminance = 0.2126 * lR + 0.7152 * lG + 0.0722 * lB;\r\n\r\n      if (luminance <= 216 / 24389) return luminance * (24389 / 27);\r\n      return Math.pow(luminance, 1 / 3) * 116 - 16;\r\n    });\r\n\r\n    const lightnestValue = lightnessValues.reduce((max, v) => Math.max(max, v), -1);\r\n    const darkestValue = lightnessValues.reduce((max, v) => Math.min(max, v), 256);\r\n\r\n    const lightestIndex = lightnessValues.indexOf(lightnestValue);\r\n    const darkestIndex = lightnessValues.indexOf(darkestValue);\r\n\r\n    const lightestColor = colors[lightestIndex];\r\n    const darkestColor = colors[darkestIndex];\r\n\r\n    return [\r\n      new Color(lightestColor.r, lightestColor.g, lightestColor.b, lightestColor.a),\r\n      new Color(darkestColor.r, darkestColor.g, darkestColor.b, darkestColor.a),\r\n    ];\r\n  };\r\n\r\n  static blendColors = (background: Color, foreground: Color) => {\r\n    const normalFgAlpha = foreground.a / 255;\r\n    const normalBgAlpha = 1 - normalFgAlpha;\r\n\r\n    const channels = [\"r\", \"g\", \"b\"] as const;\r\n\r\n    const rgb = channels.map((c) => background[c] * normalBgAlpha + foreground[c] * normalFgAlpha);\r\n\r\n    return new Color(...rgb);\r\n  };\r\n\r\n  r = 0; // 0-255\r\n  g = 0; // 0-255;\r\n  b = 0; // 0-255;\r\n  a = 0; // 0-255;\r\n\r\n  constructor(a?: number | string, b?: number, c?: number, d?: number) {\r\n    if (arguments.length === 1) {\r\n      if (typeof a === \"string\" && a[0] === \"#\") {\r\n        let hex = a;\r\n\r\n        if (hex.length === 4) hex = \"#\" + hex[1] + hex[1] + hex[2] + hex[2] + hex[3] + hex[3];\r\n\r\n        if (hex.length === 7 || hex.length === 9) {\r\n          this.r = parseInt(hex[1] + hex[2], 16);\r\n          this.g = parseInt(hex[3] + hex[4], 16);\r\n          this.b = parseInt(hex[5] + hex[6], 16);\r\n\r\n          if (hex.length === 9) this.a = parseInt(hex[7] + hex[8], 16);\r\n          else this.a = 255;\r\n        }\r\n\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (arguments.length === 3 || arguments.length === 4) {\r\n      const alpha = d == null ? 255 : d;\r\n\r\n      if (typeof a === \"number\" && typeof b === \"number\" && typeof c === \"number\") {\r\n        this.r = a;\r\n        this.g = b;\r\n        this.b = c;\r\n      }\r\n\r\n      this.a = alpha;\r\n    }\r\n  }\r\n\r\n  getClosedNamedColor = () => {\r\n    const { r, g, b } = this;\r\n\r\n    const lab = rgb2lab([r, g, b]);\r\n\r\n    let smallestDeltaE = 101;\r\n    let closestColorName = \"\";\r\n\r\n    Color.namedColorsLab.forEach((namedColor) => {\r\n      const deltaE = getDeltaE(lab, namedColor.value);\r\n\r\n      if (deltaE < smallestDeltaE) {\r\n        smallestDeltaE = deltaE;\r\n        closestColorName = namedColor.name;\r\n      }\r\n    });\r\n\r\n    return closestColorName;\r\n  };\r\n\r\n  get rgb(): [number, number, number] {\r\n    const { r, g, b } = this;\r\n\r\n    return [r, g, b];\r\n  }\r\n\r\n  get rgba(): [number, number, number, number] {\r\n    const { r, g, b, a } = this;\r\n\r\n    return [r, g, b, a];\r\n  }\r\n\r\n  toRgb() {\r\n    const { r, g, b } = this;\r\n\r\n    const rgb = [r, g, b].map((value) => Math.round(value));\r\n\r\n    return `rgb(${rgb.join(\", \")})`;\r\n  }\r\n\r\n  toRgba() {\r\n    const { r, g, b, a } = this;\r\n\r\n    const rgba = [r, g, b].map((value) => Math.round(value));\r\n    rgba.push(round(a / 255, 2));\r\n\r\n    return `rgba(${rgba.join(\", \")})`;\r\n  }\r\n\r\n  private hex = (value: number) => (\"0\" + Math.round(value).toString(16)).slice(-2);\r\n\r\n  toHex6() {\r\n    const { r, g, b, hex } = this;\r\n\r\n    return \"#\" + hex(r) + hex(g) + hex(b);\r\n  }\r\n\r\n  toHex8() {\r\n    const { r, g, b, a, hex } = this;\r\n\r\n    return \"#\" + hex(r) + hex(g) + hex(b) + hex(a);\r\n  }\r\n\r\n  private getHsl = () => {\r\n    const { r, g, b } = this;\r\n\r\n    const nR = r / 255;\r\n    const nG = g / 255;\r\n    const nB = b / 255;\r\n\r\n    const max = Math.max(nR, nG, nB);\r\n    const min = Math.min(nR, nG, nB);\r\n    const delta = max - min;\r\n\r\n    let hue, lightness, saturation;\r\n\r\n    // hue\r\n    if (delta === 0) hue = 0;\r\n    else if (nR === max) hue = ((nG - nB) / delta) % 6;\r\n    else if (nG === max) hue = (nB - nR) / delta + 2;\r\n    else hue = (nR - nG) / delta + 4;\r\n\r\n    hue = Math.round(hue * 60);\r\n\r\n    if (hue < 0) hue += 360;\r\n\r\n    // lightness\r\n    lightness = (max + min) / 2;\r\n\r\n    // saturation\r\n    if (delta === 0) saturation = 0;\r\n    else saturation = delta / (1 - Math.abs(2 * lightness - 1));\r\n\r\n    lightness = round(lightness * 100, 1);\r\n    saturation = round(saturation * 100, 1);\r\n\r\n    return [hue, saturation, lightness];\r\n  };\r\n\r\n  toHsl() {\r\n    const [hue, saturation, lightness] = this.getHsl();\r\n\r\n    return `hsl(${hue}, ${saturation}%, ${lightness}%)`;\r\n  }\r\n\r\n  toHsla() {\r\n    const { a } = this;\r\n\r\n    const [hue, saturation, lightness] = this.getHsl();\r\n\r\n    const alpha = round(a / 255, 2);\r\n\r\n    return `hsla(${hue}, ${saturation}%, ${lightness}%, ${alpha})`;\r\n  }\r\n}\r\n","class OptionsProxy {\r\n  [key: string]: any;\r\n\r\n  constructor() {\r\n    return new Proxy(this as unknown as Options, {\r\n      get: (target, name) => {\r\n        const field = target.fieldHashmap[name.toString()];\r\n\r\n        if (field) return field.value;\r\n\r\n        return target[name as keyof Options];\r\n      },\r\n    });\r\n  }\r\n}\r\n\r\nexport default class Options extends OptionsProxy {\r\n  readonly fieldArray: (HTMLInputElement | HTMLSelectElement)[];\r\n  readonly fieldHashmap: {\r\n    [key: string]: HTMLInputElement | HTMLSelectElement;\r\n  };\r\n  readonly fieldToBeforeChangeCallback: {\r\n    [key: string]: () => void;\r\n  };\r\n\r\n  callback?: () => void;\r\n\r\n  constructor(optionFields: (HTMLInputElement | HTMLSelectElement)[], callback?: () => void) {\r\n    super();\r\n\r\n    this.fieldArray = optionFields;\r\n    this.fieldHashmap = {};\r\n    this.fieldToBeforeChangeCallback = {};\r\n\r\n    optionFields.forEach((field) => {\r\n      this.fieldHashmap[field.name] = field;\r\n    });\r\n\r\n    if (callback) this.onChange = callback;\r\n\r\n    this.restore();\r\n  }\r\n\r\n  onBeforeChange = (name: string, newBeforeChangeCallback: () => void) => {\r\n    const { fieldHashmap, fieldToBeforeChangeCallback, callback } = this;\r\n\r\n    const field = fieldHashmap[name];\r\n\r\n    if (!field) return;\r\n\r\n    const beforeChangeCallback = fieldToBeforeChangeCallback[name];\r\n\r\n    if (callback) field.removeEventListener(\"change\", callback);\r\n    if (beforeChangeCallback) field.removeEventListener(\"change\", beforeChangeCallback);\r\n\r\n    field.addEventListener(\"change\", newBeforeChangeCallback);\r\n\r\n    if (callback) field.addEventListener(\"change\", callback);\r\n\r\n    fieldToBeforeChangeCallback[name] = newBeforeChangeCallback;\r\n  };\r\n\r\n  triggerAllBeforeChangeCallbacks = () => {\r\n    const { fieldArray, fieldToBeforeChangeCallback } = this;\r\n\r\n    fieldArray.forEach((field) => {\r\n      const beforeChangeCallback = fieldToBeforeChangeCallback[field.name];\r\n\r\n      if (beforeChangeCallback) beforeChangeCallback();\r\n    });\r\n  };\r\n\r\n  save = () => {\r\n    const { fieldArray } = this;\r\n\r\n    const optionsString = fieldArray.reduce((optionsObject, field) => {\r\n      if (field.type !== \"file\") optionsObject[field.name] = field.value;\r\n\r\n      return optionsObject;\r\n    }, {} as { [key: string]: string });\r\n\r\n    localStorage.setItem(\"options\", JSON.stringify(optionsString));\r\n  };\r\n\r\n  restore = () => {\r\n    const { fieldArray } = this;\r\n    const optionsString = localStorage.getItem(\"options\");\r\n\r\n    if (!optionsString) return;\r\n\r\n    try {\r\n      const optionsObject = JSON.parse(optionsString);\r\n\r\n      fieldArray.forEach((field) => {\r\n        if (optionsObject[field.name]) field.value = optionsObject[field.name];\r\n      });\r\n    } catch (e) {\r\n      localStorage.removeItem(\"options\");\r\n    }\r\n  };\r\n\r\n  set onChange(newCallback: () => void) {\r\n    const { fieldArray, callback } = this;\r\n\r\n    fieldArray.forEach((field) => {\r\n      if (callback) field.removeEventListener(\"change\", callback);\r\n      field.addEventListener(\"change\", newCallback);\r\n    });\r\n\r\n    this.callback = newCallback;\r\n  }\r\n}\r\n","import Color from \"./Color.ts\";\r\nimport { clamp, debounce, toast } from \"./Util.ts\";\r\n\r\nexport default class Preview {\r\n  readonly preview: HTMLCanvasElement;\r\n  readonly uploader: HTMLInputElement;\r\n\r\n  private context: CanvasRenderingContext2D;\r\n  private image: HTMLImageElement;\r\n  private colors: Promise<{ r: number; g: number; b: number; a: number }[]> | [];\r\n  private loadingToast: (() => void) | undefined;\r\n\r\n  private opacity: number | undefined;\r\n  private backgroundColor: Color | undefined;\r\n\r\n  constructor(previewElement: HTMLCanvasElement, uploaderElement: HTMLInputElement) {\r\n    const image = new Image();\r\n    image.addEventListener(\"load\", this.handleUpdateImage);\r\n\r\n    uploaderElement.addEventListener(\"change\", this.handleReadUpload);\r\n\r\n    this.preview = previewElement;\r\n    this.uploader = uploaderElement;\r\n\r\n    const context = previewElement.getContext(\"2d\");\r\n    if (!context) throw \"Failed to get 2D context from canvas element.\";\r\n\r\n    this.context = context;\r\n    this.image = image;\r\n    this.colors = [];\r\n  }\r\n\r\n  handleReadUpload = () => {\r\n    const { uploader, image } = this;\r\n\r\n    this.loadingToast = toast(\"Loading selected image...\", true);\r\n\r\n    requestAnimationFrame(() => {\r\n      const fileReader = new FileReader();\r\n\r\n      fileReader.addEventListener(\"load\", (e) => {\r\n        if (!e.target || !e.target.result) throw \"Failed to read uploaded file.\";\r\n\r\n        image.src = e.target.result.toString();\r\n      });\r\n\r\n      if (!uploader.files) throw \"Asked to read image file but found no file was uploaded.\";\r\n\r\n      fileReader.readAsDataURL(uploader.files[0]);\r\n    });\r\n  };\r\n\r\n  _handleUpdateImage = () => {\r\n    const { preview, context, image, loadingToast, opacity, backgroundColor } = this;\r\n    let { width, height } = image;\r\n\r\n    if (!width) width = 300;\r\n    if (!height) height = 200;\r\n\r\n    const done = (imageData: Uint8ClampedArray) => {\r\n      if (loadingToast) {\r\n        loadingToast();\r\n        delete this.loadingToast;\r\n      }\r\n\r\n      this.colors = new Promise((resolve) => {\r\n        requestAnimationFrame(() => {\r\n          requestAnimationFrame(() => {\r\n            const colors = [];\r\n\r\n            for (let i = 0; i < imageData.length; i += 4) {\r\n              const r = imageData[i + 0];\r\n              const g = imageData[i + 1];\r\n              const b = imageData[i + 2];\r\n              const a = imageData[i + 3];\r\n\r\n              colors.push({ r, g, b, a });\r\n            }\r\n\r\n            resolve(colors);\r\n          });\r\n        });\r\n      });\r\n    };\r\n\r\n    preview.width = width;\r\n    preview.height = height;\r\n\r\n    context.clearRect(0, 0, width, height);\r\n    context.drawImage(image, 0, 0);\r\n\r\n    const imageData = context.getImageData(0, 0, width, height);\r\n    const values = imageData.data;\r\n\r\n    if (opacity == null && backgroundColor == null) {\r\n      done(values);\r\n      return true;\r\n    }\r\n\r\n    // Handle Opacity\r\n\r\n    if (opacity != null) {\r\n      for (let i = 0; i < values.length; i += 4) {\r\n        const alpha = values[i + 3] * opacity;\r\n        const clampedAlpha = clamp(alpha, 0, 255);\r\n\r\n        values[i + 3] = clampedAlpha;\r\n      }\r\n\r\n      context.putImageData(imageData, 0, 0);\r\n\r\n      if (!backgroundColor) {\r\n        done(values);\r\n        return true;\r\n      }\r\n    }\r\n\r\n    // Handle Background Color\r\n\r\n    if (backgroundColor != null) {\r\n      const offscreenCanvas = new OffscreenCanvas(width, height);\r\n      const offscreenContext = offscreenCanvas.getContext(\"2d\");\r\n\r\n      if (!offscreenContext) throw \"Failed to get 2D context of offscreen canvas.\";\r\n\r\n      offscreenContext.fillStyle = backgroundColor.toRgba();\r\n      offscreenContext.fillRect(0, 0, width, height);\r\n      offscreenContext.drawImage(preview, 0, 0);\r\n\r\n      context.drawImage(offscreenCanvas, 0, 0);\r\n\r\n      done(context.getImageData(0, 0, width, height).data);\r\n    }\r\n  };\r\n\r\n  handleUpdateImage = debounce(this._handleUpdateImage);\r\n\r\n  loadExampleImage = () => {\r\n    this.loadingToast = toast(\"Loading example image...\", true);\r\n\r\n    requestAnimationFrame(() => {\r\n      this.image.src = \"./example.png\";\r\n    });\r\n  };\r\n\r\n  getColorsAt = async (startX: number, startY: number, width: number, height: number) => {\r\n    const { preview } = this;\r\n\r\n    const colors = await this.colors;\r\n\r\n    const targetColors = [];\r\n\r\n    for (let y = startY; y < startY + height; y++) {\r\n      for (let x = startX; x < startX + width; x++) {\r\n        const i = y * preview.width + x;\r\n\r\n        if (i < 0 || i > colors.length) continue;\r\n\r\n        targetColors.push(colors[i]);\r\n      }\r\n    }\r\n\r\n    return targetColors;\r\n  };\r\n\r\n  setBackgroundColor = (color: Color) => {\r\n    if (color.a === 0) delete this.backgroundColor;\r\n    else this.backgroundColor = color;\r\n\r\n    this.handleUpdateImage();\r\n  };\r\n\r\n  setOpacity = (opacity: number) => {\r\n    if (opacity === 1) delete this.opacity;\r\n    else this.opacity = opacity;\r\n\r\n    this.handleUpdateImage();\r\n  };\r\n}\r\n","import Color from \"./Color.ts\";\r\nimport Options from \"./Options.ts\";\r\nimport { toast } from \"./Util.ts\";\r\n\r\ntype resultElementInfo = {\r\n  textElement: HTMLInputElement;\r\n  foregroundElement: HTMLElement;\r\n  backgroundElement: HTMLElement;\r\n};\r\n\r\nexport default class Results {\r\n  readonly resultElementArray: resultElementInfo[];\r\n  readonly resultElementHashmap: { [key: string]: resultElementInfo };\r\n\r\n  constructor(resultFields: HTMLElement[]) {\r\n    this.resultElementArray = [];\r\n    this.resultElementHashmap = {};\r\n\r\n    resultFields.forEach((resultField) => {\r\n      const textElement = resultField.querySelector(\"input\") as HTMLInputElement;\r\n      const foregroundElement = resultField.querySelector(\".foreground\") as HTMLElement;\r\n      const backgroundElement = resultField.querySelector(\".background\") as HTMLElement;\r\n      const copyButton = resultField.querySelector(\".copy\");\r\n\r\n      if (copyButton) {\r\n        copyButton.addEventListener(\"click\", (e) => {\r\n          e.preventDefault();\r\n          navigator.clipboard.writeText(textElement.value);\r\n          toast(`Copied ${textElement.value}`);\r\n        });\r\n      }\r\n\r\n      const proxiedTextElement = new Proxy(textElement, {\r\n        set: (target, name, value) => {\r\n          if (name === \"value\") foregroundElement.style.backgroundColor = value;\r\n\r\n          // @ts-expect-error continue with default behavior\r\n          target[name] = value;\r\n          return true;\r\n        },\r\n      });\r\n\r\n      const name = textElement.name.split(\"ResultText\")[0];\r\n      const info = {\r\n        textElement: proxiedTextElement,\r\n        foregroundElement,\r\n        backgroundElement,\r\n      };\r\n\r\n      this.resultElementHashmap[name] = info;\r\n      this.resultElementArray.push(info);\r\n    });\r\n  }\r\n\r\n  setBackgroundColor = (color: Color) => {\r\n    const { resultElementArray } = this;\r\n\r\n    const backgroundColor = color.toRgba();\r\n\r\n    resultElementArray.forEach((info) => {\r\n      info.backgroundElement.style.backgroundColor = backgroundColor;\r\n    });\r\n  };\r\n\r\n  setResult = (type: string, color: Color, options: Options) => {\r\n    const { resultElementHashmap } = this;\r\n    const resultFormat = options.resultFormat;\r\n    const hideAlphaChannel = options.hideAlphaChannel;\r\n\r\n    let includeAlpha = false;\r\n    if (hideAlphaChannel === \"always\") includeAlpha = false;\r\n    else if (hideAlphaChannel === \"never\") includeAlpha = true;\r\n    else if (color.a !== 255) includeAlpha = true;\r\n\r\n    let value = \"\";\r\n\r\n    if (resultFormat === \"rgb\") value = includeAlpha ? color.toRgba() : color.toRgb();\r\n    if (resultFormat === \"hex\") value = includeAlpha ? color.toHex8() : color.toHex6();\r\n    if (resultFormat === \"hsl\") value = includeAlpha ? color.toHsla() : color.toHsl();\r\n    if (resultFormat === \"svg\") value = color.getClosedNamedColor();\r\n\r\n    if (!value) throw `Invalid resultFormat option: ${resultFormat.toString()}`;\r\n\r\n    resultElementHashmap[type].textElement.value = value;\r\n  };\r\n}\r\n","export default class Selection {\r\n  readonly outline: HTMLElement;\r\n  readonly target: HTMLCanvasElement;\r\n\r\n  callback: (() => void) | undefined;\r\n\r\n  private isInProgress = false;\r\n  private startPosition = { x: 0, y: 0 };\r\n  private endPosition = { x: 0, y: 0 };\r\n\r\n  info:\r\n    | {\r\n        top: number;\r\n        left: number;\r\n        bottom: number;\r\n        right: number;\r\n        width: number;\r\n        height: number;\r\n      }\r\n    | undefined;\r\n\r\n  constructor(borderElement: HTMLElement, targetElement: HTMLCanvasElement, callback?: () => void) {\r\n    targetElement.onmousedown = this.handleSelect;\r\n    targetElement.onmouseup = this.handleSelect;\r\n    targetElement.onmousemove = this.handleSelect;\r\n    targetElement.onmouseleave = this.handleSelect;\r\n\r\n    targetElement.ontouchstart = this.handleTouch;\r\n    targetElement.ontouchend = this.handleTouch;\r\n    targetElement.ontouchmove = this.handleTouch;\r\n\r\n    this.outline = borderElement;\r\n    this.target = targetElement;\r\n\r\n    if (callback) this.onSelectionEnd = callback;\r\n  }\r\n\r\n  handleTouch = (e: TouchEvent) => {\r\n    const { targetTouches, changedTouches, type } = e;\r\n\r\n    if (targetTouches.length !== 2) return;\r\n    else e.preventDefault();\r\n\r\n    const { target, updateInfo, updateOutline, callback } = this;\r\n\r\n    const touches = type === \"touchend\" ? changedTouches : targetTouches;\r\n    const boundingRect = target.getBoundingClientRect();\r\n\r\n    const x1 = Math.round(touches[0].clientX - boundingRect.left);\r\n    const y1 = Math.round(touches[0].clientY - boundingRect.top);\r\n\r\n    const x2 = Math.round(touches[1].clientX - boundingRect.left);\r\n    const y2 = Math.round(touches[1].clientY - boundingRect.top);\r\n\r\n    this.startPosition = { x: x1, y: y1 };\r\n    this.endPosition = { x: x2, y: y2 };\r\n\r\n    updateInfo();\r\n    updateOutline();\r\n\r\n    if (callback) callback();\r\n  };\r\n\r\n  handleSelect = (e: MouseEvent) => {\r\n    const { type, button, clientX, clientY } = e;\r\n    const { target, isInProgress, updateInfo, updateOutline, callback } = this;\r\n\r\n    if (button !== null && button !== 0) return;\r\n\r\n    const boundingRect = target.getBoundingClientRect();\r\n    const x = Math.round(clientX - boundingRect.left);\r\n    const y = Math.round(clientY - boundingRect.top);\r\n\r\n    if (type === \"mousedown\") {\r\n      this.startPosition = { x, y };\r\n      this.isInProgress = true;\r\n      return;\r\n    }\r\n\r\n    if (!isInProgress) return;\r\n\r\n    if (type === \"mousemove\" || type === \"mouseup\" || type === \"mouseleave\") {\r\n      this.endPosition = { x, y };\r\n\r\n      updateInfo();\r\n      updateOutline();\r\n\r\n      if (callback) callback();\r\n    }\r\n\r\n    if (type === \"mouseup\" || type === \"mouseleave\") this.isInProgress = false;\r\n  };\r\n\r\n  set onSelectionEnd(callback: () => void) {\r\n    this.callback = callback;\r\n  }\r\n\r\n  updateInfo = () => {\r\n    const { startPosition, endPosition, target } = this;\r\n\r\n    const top = Math.max(Math.min(startPosition.y, endPosition.y), 0);\r\n    const left = Math.max(Math.min(startPosition.x, endPosition.x), 0);\r\n    const bottom = Math.min(Math.max(startPosition.y, endPosition.y), target.height);\r\n    const right = Math.min(Math.max(startPosition.x, endPosition.x), target.width);\r\n\r\n    const width = Math.max(right - left, 1);\r\n    const height = Math.max(bottom - top, 1);\r\n\r\n    this.info = { top, left, bottom, right, width, height };\r\n  };\r\n\r\n  updateOutline = () => {\r\n    const { outline, info } = this;\r\n\r\n    if (!info) return;\r\n\r\n    const { top, left, width, height } = info;\r\n\r\n    const cssText = `top:${top}px; left:${left}px; width:${width}px; height:${height}px;`;\r\n\r\n    outline.style.cssText = cssText;\r\n  };\r\n\r\n  clear = () => {\r\n    const { outline } = this;\r\n\r\n    outline.style.cssText = \"\";\r\n\r\n    delete this.info;\r\n  };\r\n}\r\n","export const debounce = (func: (...args: any[]) => any, timeout = 100) => {\r\n  let timer: number;\r\n\r\n  return (...args: any[]) => {\r\n    clearTimeout(timer);\r\n    timer = setTimeout(() => func.apply(this, args), timeout);\r\n  };\r\n};\r\n\r\nexport const round = (value: number, decimalPlaces = 0) =>\r\n  +(Math.round(+(value + `e+${decimalPlaces}`)) + `e-${decimalPlaces}`);\r\n\r\nexport const clamp = (value: number, min: number, max: number) =>\r\n  Math.max(Math.min(value, max), min);\r\n\r\nexport const toast = (message: string, persist = false) => {\r\n  const toast = document.createElement(\"div\");\r\n\r\n  toast.textContent = message;\r\n  toast.className = `toast ${persist ? \"\" : \"fade-out\"}`;\r\n  toast.setAttribute(\"role\", \"status\");\r\n\r\n  const toastContainer = document.querySelector(\".toast-container\");\r\n\r\n  if (toastContainer) {\r\n    toastContainer.appendChild(toast);\r\n\r\n    if (persist) {\r\n      return () => {\r\n        requestAnimationFrame(() => toastContainer.removeChild(toast));\r\n      };\r\n    } else {\r\n      setTimeout(() => {\r\n        toastContainer.removeChild(toast);\r\n      }, 1500);\r\n    }\r\n  }\r\n};\r\n","import Color from \"./classes/Color.ts\";\r\nimport Options from \"./classes/Options.ts\";\r\nimport Preview from \"./classes/Preview.ts\";\r\nimport Selection from \"./classes/Selection.ts\";\r\nimport Results from \"./classes/Results.ts\";\r\nimport { debounce, toast } from \"./classes/Util.ts\";\r\n\r\nfunction init() {\r\n  const $ = (selector: string): HTMLElement[] => Array.from(document.querySelectorAll(selector));\r\n\r\n  const optionsForm = $(\".options\")[0] as HTMLFormElement;\r\n  const resultsForm = $(\".results\")[0] as HTMLFormElement;\r\n\r\n  optionsForm.reset();\r\n  resultsForm.reset();\r\n\r\n  optionsForm.addEventListener(\"submit\", (e) => {\r\n    e.preventDefault();\r\n    calculate();\r\n  });\r\n\r\n  const optionFields = $(\".options :is(input, select)\") as (HTMLInputElement | HTMLSelectElement)[];\r\n  const resultFields = $(\".results .field\") as HTMLInputElement[];\r\n\r\n  const previewElement = $(\".preview\")[0] as HTMLCanvasElement;\r\n  const uploaderElement = $(\"input[name=imageUpload]\")[0] as HTMLInputElement;\r\n  const selectorElement = $(\".selector\")[0];\r\n\r\n  const options = new Options(optionFields);\r\n  const preview = new Preview(previewElement, uploaderElement);\r\n  const results = new Results(resultFields);\r\n  const selection = new Selection(selectorElement, previewElement);\r\n\r\n  const calculate = debounce(async () => {\r\n    if (!selection.info) return;\r\n\r\n    const { top, left, width, height } = selection.info;\r\n\r\n    const selectedColors = (await preview.getColorsAt(left, top, width, height)) as Color[];\r\n\r\n    const [meanColor, medianColor] = Color.getMeanMedian(selectedColors, options);\r\n    const [lightestColor, darkestColor] = Color.getLightestDarkest(selectedColors);\r\n\r\n    results.setResult(\"mean\", meanColor, options);\r\n    results.setResult(\"median\", medianColor, options);\r\n    results.setResult(\"lightest\", lightestColor, options);\r\n    results.setResult(\"darkest\", darkestColor, options);\r\n  });\r\n\r\n  uploaderElement.addEventListener(\"change\", selection.clear);\r\n\r\n  const exampleImageButton = $(\"#example-image-button\")[0];\r\n  const resetButton = $(\"button[type=reset]\")[0];\r\n  const saveButton = $(\"button[name=save\")[0];\r\n\r\n  exampleImageButton.addEventListener(\"click\", (e) => {\r\n    e.preventDefault();\r\n    selection.clear();\r\n    preview.loadExampleImage();\r\n  });\r\n\r\n  resetButton.addEventListener(\"click\", (e) => {\r\n    e.preventDefault();\r\n    optionsForm.reset();\r\n    options.triggerAllBeforeChangeCallbacks();\r\n    calculate();\r\n    toast(\"Options reset!\");\r\n  });\r\n\r\n  saveButton.addEventListener(\"click\", (e) => {\r\n    e.preventDefault();\r\n    options.save();\r\n    toast(\"Options saved!\");\r\n  });\r\n\r\n  options.onBeforeChange(\"opacityPercentage\", () => {\r\n    const opacityPercent = options.opacityPercentage;\r\n\r\n    preview.setOpacity(opacityPercent / 100);\r\n  });\r\n\r\n  const handleBackgroundSettingsChanged = () => {\r\n    const transparencyType = options.transparencyType;\r\n\r\n    let backgroundColor = null;\r\n\r\n    if (transparencyType === \"straight\") backgroundColor = new Color(0, 0, 0, 0);\r\n    if (transparencyType === \"premultiplied\") backgroundColor = new Color(options.backgroundColor);\r\n\r\n    if (!backgroundColor) throw `Invalid transparency type option: ${transparencyType.toString()}`;\r\n\r\n    preview.setBackgroundColor(backgroundColor);\r\n    results.setBackgroundColor(backgroundColor);\r\n\r\n    calculate();\r\n  };\r\n\r\n  options.onBeforeChange(\"backgroundColor\", handleBackgroundSettingsChanged);\r\n  options.onBeforeChange(\"transparencyType\", handleBackgroundSettingsChanged);\r\n\r\n  options.triggerAllBeforeChangeCallbacks();\r\n\r\n  selection.onSelectionEnd = calculate;\r\n  options.onChange = calculate;\r\n}\r\n\r\nwindow.onload = () => requestAnimationFrame(init);\r\n"]}