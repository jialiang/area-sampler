{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/rgb-lab/color.js","src/classes/Color.ts","src/classes/Options.ts","src/classes/Preview.ts","src/classes/Results.ts","src/classes/Selection.ts","src/classes/Util.ts","src/index.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","lab2rgb","lab","y","x","z","g","b","Math","pow","max","min","rgb2lab","rgb","deltaE","labA","labB","deltaL","deltaA","deltaB","c1","sqrt","deltaC","deltaH","deltaCkcsc","deltaHkhsh","_rgbLab","_Util","Color","squaredValues","Array","keys","map","value","namedColorsLab","name","getMeanMedian","colors","options","averagingMethod","numberOfPixels","mean","median","colorChannels","let","channel","values","push","sortedValues","sort","totalSquaredValue","meanSquaredValue","meanValue","totalValue","medianIndex","floor","getLightestDarkest","sRGBtoLinear","lightnessValues","color","luminance","lightnestValue","reduce","v","darkestValue","lightestIndex","indexOf","darkestIndex","lightestColor","darkestColor","blendColors","background","foreground","normalFgAlpha","normalBgAlpha","constructor","d","arguments","hex","this","parseInt","alpha","getClosedNamedColor","smallestDeltaE","closestColorName","forEach","namedColor","rgba","toRgb","round","join","toRgba","toString","slice","toHex6","toHex8","getHsl","nR","nG","nB","delta","hue","lightness","saturation","abs","toHsl","toHsla","default","Proxy","get","target","field","fieldHashmap","optionFields","callback","super","fieldArray","fieldToBeforeChangeCallback","onChange","restore","onBeforeChange","newBeforeChangeCallback","beforeChangeCallback","removeEventListener","addEventListener","triggerAllBeforeChangeCallbacks","save","optionsString","optionsObject","type","localStorage","setItem","JSON","stringify","getItem","parse","removeItem","newCallback","previewElement","uploaderElement","image","Image","context","handleUpdateImage","handleReadUpload","preview","uploader","getContext","loadingToast","toast","requestAnimationFrame","fileReader","FileReader","result","src","files","readAsDataURL","_handleUpdateImage","opacity","backgroundColor","width","height","done","imageData","Promise","resolve","clearRect","drawImage","getImageData","data","clampedAlpha","clamp","putImageData","offscreenCanvas","OffscreenCanvas","offscreenContext","fillStyle","fillRect","debounce","loadExampleImage","getColorsAt","async","startX","startY","await","targetColors","setBackgroundColor","setOpacity","resultFields","resultElementArray","resultElementHashmap","resultField","textElement","querySelector","foregroundElement","backgroundElement","copyButton","proxiedTextElement","preventDefault","navigator","clipboard","writeText","set","style","split","info","setResult","resultFormat","hideAlphaChannel","includeAlpha","isInProgress","startPosition","endPosition","borderElement","targetElement","onmousedown","handleSelect","onmouseup","onmousemove","onmouseleave","ontouchstart","handleTouch","ontouchend","ontouchmove","outline","onSelectionEnd","updateInfo","updateOutline","x2","targetTouches","changedTouches","touches","boundingRect","getBoundingClientRect","x1","clientX","left","y1","clientY","top","y2","button","bottom","right","cssText","clear","func","timeout","undefined","timer","_len","args","_key","clearTimeout","setTimeout","apply","decimalPlaces","message","persist","document","createElement","toastContainer","textContent","className","setAttribute","appendChild","removeChild","_Color","_interopRequireDefault","_Options","_Preview","_Selection","_Results","obj","__esModule","init","$","selector","from","querySelectorAll","optionsForm","resultsForm","reset","calculate","selectorElement","results","selection","meanColor","medianColor","selectedColors","exampleImageButton","resetButton","saveButton","opacityPercent","opacityPercentage","handleBackgroundSettingsChanged","transparencyType","window","onload"],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","// the following functions are based off of the pseudocode\n// found on www.easyrgb.com\n\nexports.lab2rgb = function lab2rgb(lab){\n  var y = (lab[0] + 16) / 116,\n      x = lab[1] / 500 + y,\n      z = y - lab[2] / 200,\n      r, g, b;\n\n  x = 0.95047 * ((x * x * x > 0.008856) ? x * x * x : (x - 16/116) / 7.787);\n  y = 1.00000 * ((y * y * y > 0.008856) ? y * y * y : (y - 16/116) / 7.787);\n  z = 1.08883 * ((z * z * z > 0.008856) ? z * z * z : (z - 16/116) / 7.787);\n\n  r = x *  3.2406 + y * -1.5372 + z * -0.4986;\n  g = x * -0.9689 + y *  1.8758 + z *  0.0415;\n  b = x *  0.0557 + y * -0.2040 + z *  1.0570;\n\n  r = (r > 0.0031308) ? (1.055 * Math.pow(r, 1/2.4) - 0.055) : 12.92 * r;\n  g = (g > 0.0031308) ? (1.055 * Math.pow(g, 1/2.4) - 0.055) : 12.92 * g;\n  b = (b > 0.0031308) ? (1.055 * Math.pow(b, 1/2.4) - 0.055) : 12.92 * b;\n\n  return [Math.max(0, Math.min(1, r)) * 255, \n          Math.max(0, Math.min(1, g)) * 255, \n          Math.max(0, Math.min(1, b)) * 255]\n}\n\n\nexports.rgb2lab = function rgb2lab(rgb){\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      x, y, z;\n\n  r = (r > 0.04045) ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n  g = (g > 0.04045) ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n  b = (b > 0.04045) ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n\n  x = (r * 0.4124 + g * 0.3576 + b * 0.1805) / 0.95047;\n  y = (r * 0.2126 + g * 0.7152 + b * 0.0722) / 1.00000;\n  z = (r * 0.0193 + g * 0.1192 + b * 0.9505) / 1.08883;\n\n  x = (x > 0.008856) ? Math.pow(x, 1/3) : (7.787 * x) + 16/116;\n  y = (y > 0.008856) ? Math.pow(y, 1/3) : (7.787 * y) + 16/116;\n  z = (z > 0.008856) ? Math.pow(z, 1/3) : (7.787 * z) + 16/116;\n\n  return [(116 * y) - 16, 500 * (x - y), 200 * (y - z)]\n}\n\n// calculate the perceptual distance between colors in CIELAB\n// https://github.com/THEjoezack/ColorMine/blob/master/ColorMine/ColorSpaces/Comparisons/Cie94Comparison.cs\n\nexports.deltaE = function deltaE(labA, labB){\n  var deltaL = labA[0] - labB[0];\n  var deltaA = labA[1] - labB[1];\n  var deltaB = labA[2] - labB[2];\n  var c1 = Math.sqrt(labA[1] * labA[1] + labA[2] * labA[2]);\n  var c2 = Math.sqrt(labB[1] * labB[1] + labB[2] * labB[2]);\n  var deltaC = c1 - c2;\n  var deltaH = deltaA * deltaA + deltaB * deltaB - deltaC * deltaC;\n  deltaH = deltaH < 0 ? 0 : Math.sqrt(deltaH);\n  var sc = 1.0 + 0.045 * c1;\n  var sh = 1.0 + 0.015 * c1;\n  var deltaLKlsl = deltaL / (1.0);\n  var deltaCkcsc = deltaC / (sc);\n  var deltaHkhsh = deltaH / (sh);\n  var i = deltaLKlsl * deltaLKlsl + deltaCkcsc * deltaCkcsc + deltaHkhsh * deltaHkhsh;\n  return i < 0 ? 0 : Math.sqrt(i);\n}\n\n","import { rgb2lab, deltaE as getDeltaE } from \"rgb-lab\";\r\n\r\nimport Options from \"./Options.ts\";\r\nimport { round } from \"./Util.ts\";\r\n\r\nexport default class Color {\r\n  static squaredValues = [...Array(256).keys()].map((value) => value * value);\r\n\r\n  static namedColorsLab = [\r\n    {\r\n      name: \"aliceblue\",\r\n      value: [97.18, -1.34, -4.27],\r\n    },\r\n    {\r\n      name: \"antiquewhite\",\r\n      value: [93.73, 1.84, 11.52],\r\n    },\r\n    {\r\n      name: \"aqua\",\r\n      value: [91.12, -48.08, -14.14],\r\n    },\r\n    {\r\n      name: \"aquamarine\",\r\n      value: [92.04, -45.52, 9.71],\r\n    },\r\n    {\r\n      name: \"azure\",\r\n      value: [98.93, -4.88, -1.7],\r\n    },\r\n    {\r\n      name: \"beige\",\r\n      value: [95.95, -4.19, 12.04],\r\n    },\r\n    {\r\n      name: \"bisque\",\r\n      value: [92.01, 4.43, 19],\r\n    },\r\n    {\r\n      name: \"black\",\r\n      value: [0, 0, 0],\r\n    },\r\n    {\r\n      name: \"blanchedalmond\",\r\n      value: [93.92, 2.13, 17.02],\r\n    },\r\n    {\r\n      name: \"blue\",\r\n      value: [32.3, 79.2, -107.86],\r\n    },\r\n    {\r\n      name: \"blueviolet\",\r\n      value: [42.19, 69.86, -74.77],\r\n    },\r\n    {\r\n      name: \"brown\",\r\n      value: [37.52, 49.7, 30.54],\r\n    },\r\n    {\r\n      name: \"burlywood\",\r\n      value: [77.02, 7.05, 30.01],\r\n    },\r\n    {\r\n      name: \"cadetblue\",\r\n      value: [61.15, -19.68, -7.43],\r\n    },\r\n    {\r\n      name: \"chartreuse\",\r\n      value: [89.87, -68.07, 85.78],\r\n    },\r\n    {\r\n      name: \"chocolate\",\r\n      value: [55.99, 37.06, 56.74],\r\n    },\r\n    {\r\n      name: \"coral\",\r\n      value: [67.29, 45.36, 47.49],\r\n    },\r\n    {\r\n      name: \"cornflowerblue\",\r\n      value: [61.93, 9.34, -49.31],\r\n    },\r\n    {\r\n      name: \"cornsilk\",\r\n      value: [97.46, -2.21, 14.28],\r\n    },\r\n    {\r\n      name: \"crimson\",\r\n      value: [47.03, 70.94, 33.59],\r\n    },\r\n    {\r\n      name: \"cyan\",\r\n      value: [91.12, -48.08, -14.14],\r\n    },\r\n    {\r\n      name: \"darkblue\",\r\n      value: [14.76, 50.43, -68.68],\r\n    },\r\n    {\r\n      name: \"darkcyan\",\r\n      value: [52.21, -30.62, -9],\r\n    },\r\n    {\r\n      name: \"darkgoldenrod\",\r\n      value: [59.22, 9.87, 62.73],\r\n    },\r\n    {\r\n      name: \"darkgray\",\r\n      value: [69.24, 0, -0.01],\r\n    },\r\n    {\r\n      name: \"darkgreen\",\r\n      value: [36.2, -43.37, 41.86],\r\n    },\r\n    {\r\n      name: \"darkgrey\",\r\n      value: [69.24, 0, -0.01],\r\n    },\r\n    {\r\n      name: \"darkkhaki\",\r\n      value: [73.38, -8.79, 39.29],\r\n    },\r\n    {\r\n      name: \"darkmagenta\",\r\n      value: [32.6, 62.56, -38.74],\r\n    },\r\n    {\r\n      name: \"darkolivegreen\",\r\n      value: [42.23, -18.83, 30.6],\r\n    },\r\n    {\r\n      name: \"darkorange\",\r\n      value: [69.48, 36.83, 75.49],\r\n    },\r\n    {\r\n      name: \"darkorchid\",\r\n      value: [43.38, 65.17, -60.11],\r\n    },\r\n    {\r\n      name: \"darkred\",\r\n      value: [28.08, 51.01, 41.29],\r\n    },\r\n    {\r\n      name: \"darksalmon\",\r\n      value: [69.85, 28.18, 27.7],\r\n    },\r\n    {\r\n      name: \"darkseagreen\",\r\n      value: [72.09, -23.82, 18.03],\r\n    },\r\n    {\r\n      name: \"darkslateblue\",\r\n      value: [30.83, 26.06, -42.09],\r\n    },\r\n    {\r\n      name: \"darkslategray\",\r\n      value: [31.26, -11.72, -3.73],\r\n    },\r\n    {\r\n      name: \"darkslategrey\",\r\n      value: [31.26, -11.72, -3.73],\r\n    },\r\n    {\r\n      name: \"darkturquoise\",\r\n      value: [75.29, -40.04, -13.52],\r\n    },\r\n    {\r\n      name: \"darkviolet\",\r\n      value: [39.58, 76.34, -70.38],\r\n    },\r\n    {\r\n      name: \"deeppink\",\r\n      value: [55.95, 84.56, -5.71],\r\n    },\r\n    {\r\n      name: \"deepskyblue\",\r\n      value: [72.55, -17.65, -42.55],\r\n    },\r\n    {\r\n      name: \"dimgray\",\r\n      value: [44.41, 0, -0.01],\r\n    },\r\n    {\r\n      name: \"dimgrey\",\r\n      value: [44.41, 0, -0.01],\r\n    },\r\n    {\r\n      name: \"dodgerblue\",\r\n      value: [59.38, 9.97, -63.39],\r\n    },\r\n    {\r\n      name: \"firebrick\",\r\n      value: [39.11, 55.93, 37.65],\r\n    },\r\n    {\r\n      name: \"floralwhite\",\r\n      value: [98.4, -0.03, 5.37],\r\n    },\r\n    {\r\n      name: \"forestgreen\",\r\n      value: [50.59, -49.59, 45.02],\r\n    },\r\n    {\r\n      name: \"fuchsia\",\r\n      value: [60.32, 98.25, -60.84],\r\n    },\r\n    {\r\n      name: \"gainsboro\",\r\n      value: [87.76, 0, -0.01],\r\n    },\r\n    {\r\n      name: \"ghostwhite\",\r\n      value: [97.76, 1.25, -3.36],\r\n    },\r\n    {\r\n      name: \"gold\",\r\n      value: [86.93, -1.92, 87.14],\r\n    },\r\n    {\r\n      name: \"goldenrod\",\r\n      value: [70.82, 8.52, 68.76],\r\n    },\r\n    {\r\n      name: \"gray\",\r\n      value: [53.59, 0, -0.01],\r\n    },\r\n    {\r\n      name: \"green\",\r\n      value: [46.23, -51.7, 49.9],\r\n    },\r\n    {\r\n      name: \"greenyellow\",\r\n      value: [91.96, -52.48, 81.87],\r\n    },\r\n    {\r\n      name: \"grey\",\r\n      value: [53.59, 0, -0.01],\r\n    },\r\n    {\r\n      name: \"honeydew\",\r\n      value: [98.57, -7.56, 5.47],\r\n    },\r\n    {\r\n      name: \"hotpink\",\r\n      value: [65.48, 64.25, -10.66],\r\n    },\r\n    {\r\n      name: \"indianred\",\r\n      value: [53.39, 44.84, 22.11],\r\n    },\r\n    {\r\n      name: \"indigo\",\r\n      value: [20.47, 51.69, -53.32],\r\n    },\r\n    {\r\n      name: \"ivory\",\r\n      value: [99.64, -2.55, 7.15],\r\n    },\r\n    {\r\n      name: \"khaki\",\r\n      value: [90.33, -9.01, 44.97],\r\n    },\r\n    {\r\n      name: \"lavender\",\r\n      value: [91.83, 3.71, -9.67],\r\n    },\r\n    {\r\n      name: \"lavenderblush\",\r\n      value: [96.07, 5.89, -0.6],\r\n    },\r\n    {\r\n      name: \"lawngreen\",\r\n      value: [88.88, -67.86, 84.95],\r\n    },\r\n    {\r\n      name: \"lemonchiffon\",\r\n      value: [97.65, -5.42, 22.23],\r\n    },\r\n    {\r\n      name: \"lightblue\",\r\n      value: [83.81, -10.89, -11.49],\r\n    },\r\n    {\r\n      name: \"lightcoral\",\r\n      value: [66.15, 42.82, 19.55],\r\n    },\r\n    {\r\n      name: \"lightcyan\",\r\n      value: [97.87, -9.94, -3.38],\r\n    },\r\n    {\r\n      name: \"lightgoldenrodyellow\",\r\n      value: [97.37, -6.48, 19.23],\r\n    },\r\n    {\r\n      name: \"lightgray\",\r\n      value: [84.56, 0, -0.01],\r\n    },\r\n    {\r\n      name: \"lightgreen\",\r\n      value: [86.55, -46.33, 36.94],\r\n    },\r\n    {\r\n      name: \"lightgrey\",\r\n      value: [84.56, 0, -0.01],\r\n    },\r\n    {\r\n      name: \"lightpink\",\r\n      value: [81.05, 27.97, 5.03],\r\n    },\r\n    {\r\n      name: \"lightsalmon\",\r\n      value: [74.7, 31.48, 34.54],\r\n    },\r\n    {\r\n      name: \"lightseagreen\",\r\n      value: [65.79, -37.51, -6.34],\r\n    },\r\n    {\r\n      name: \"lightskyblue\",\r\n      value: [79.73, -10.82, -28.51],\r\n    },\r\n    {\r\n      name: \"lightslategray\",\r\n      value: [55.92, -2.24, -11.11],\r\n    },\r\n    {\r\n      name: \"lightslategrey\",\r\n      value: [55.92, -2.24, -11.11],\r\n    },\r\n    {\r\n      name: \"lightsteelblue\",\r\n      value: [78.45, -1.28, -15.22],\r\n    },\r\n    {\r\n      name: \"lightyellow\",\r\n      value: [99.28, -5.1, 14.83],\r\n    },\r\n    {\r\n      name: \"lime\",\r\n      value: [87.74, -86.18, 83.18],\r\n    },\r\n    {\r\n      name: \"limegreen\",\r\n      value: [72.61, -67.13, 61.44],\r\n    },\r\n    {\r\n      name: \"linen\",\r\n      value: [95.31, 1.68, 6.01],\r\n    },\r\n    {\r\n      name: \"magenta\",\r\n      value: [60.32, 98.25, -60.84],\r\n    },\r\n    {\r\n      name: \"maroon\",\r\n      value: [25.53, 48.06, 38.06],\r\n    },\r\n    {\r\n      name: \"mediumaquamarine\",\r\n      value: [75.69, -38.33, 8.3],\r\n    },\r\n    {\r\n      name: \"mediumblue\",\r\n      value: [24.98, 67.18, -91.5],\r\n    },\r\n    {\r\n      name: \"mediumorchid\",\r\n      value: [53.64, 59.07, -47.41],\r\n    },\r\n    {\r\n      name: \"mediumpurple\",\r\n      value: [54.98, 36.81, -50.1],\r\n    },\r\n    {\r\n      name: \"mediumseagreen\",\r\n      value: [65.27, -48.22, 24.29],\r\n    },\r\n    {\r\n      name: \"mediumslateblue\",\r\n      value: [52.16, 41.08, -65.41],\r\n    },\r\n    {\r\n      name: \"mediumspringgreen\",\r\n      value: [87.34, -70.68, 32.46],\r\n    },\r\n    {\r\n      name: \"mediumturquoise\",\r\n      value: [76.88, -37.35, -8.36],\r\n    },\r\n    {\r\n      name: \"mediumvioletred\",\r\n      value: [44.76, 71.01, -15.18],\r\n    },\r\n    {\r\n      name: \"midnightblue\",\r\n      value: [15.86, 31.72, -49.58],\r\n    },\r\n    {\r\n      name: \"mintcream\",\r\n      value: [99.16, -4.16, 1.24],\r\n    },\r\n    {\r\n      name: \"mistyrose\",\r\n      value: [92.66, 8.75, 4.83],\r\n    },\r\n    {\r\n      name: \"moccasin\",\r\n      value: [91.72, 2.44, 26.35],\r\n    },\r\n    {\r\n      name: \"navajowhite\",\r\n      value: [90.1, 4.51, 28.26],\r\n    },\r\n    {\r\n      name: \"navy\",\r\n      value: [12.98, 47.51, -64.7],\r\n    },\r\n    {\r\n      name: \"oldlace\",\r\n      value: [96.78, 0.18, 8.16],\r\n    },\r\n    {\r\n      name: \"olive\",\r\n      value: [51.87, -12.93, 56.68],\r\n    },\r\n    {\r\n      name: \"olivedrab\",\r\n      value: [54.65, -28.22, 49.69],\r\n    },\r\n    {\r\n      name: \"orange\",\r\n      value: [74.93, 23.94, 78.96],\r\n    },\r\n    {\r\n      name: \"orangered\",\r\n      value: [57.57, 67.8, 68.97],\r\n    },\r\n    {\r\n      name: \"orchid\",\r\n      value: [62.8, 55.29, -34.42],\r\n    },\r\n    {\r\n      name: \"palegoldenrod\",\r\n      value: [91.14, -7.35, 30.96],\r\n    },\r\n    {\r\n      name: \"palegreen\",\r\n      value: [90.75, -48.3, 38.52],\r\n    },\r\n    {\r\n      name: \"paleturquoise\",\r\n      value: [90.06, -19.63, -6.41],\r\n    },\r\n    {\r\n      name: \"palevioletred\",\r\n      value: [60.56, 45.53, 0.39],\r\n    },\r\n    {\r\n      name: \"papayawhip\",\r\n      value: [95.08, 1.27, 14.52],\r\n    },\r\n    {\r\n      name: \"peachpuff\",\r\n      value: [89.35, 8.09, 21.01],\r\n    },\r\n    {\r\n      name: \"peru\",\r\n      value: [61.75, 21.4, 47.92],\r\n    },\r\n    {\r\n      name: \"pink\",\r\n      value: [83.58, 24.15, 3.32],\r\n    },\r\n    {\r\n      name: \"plum\",\r\n      value: [73.37, 32.54, -22],\r\n    },\r\n    {\r\n      name: \"powderblue\",\r\n      value: [86.13, -14.09, -8.02],\r\n    },\r\n    {\r\n      name: \"purple\",\r\n      value: [29.78, 58.94, -36.5],\r\n    },\r\n    {\r\n      name: \"red\",\r\n      value: [53.23, 80.11, 67.22],\r\n    },\r\n    {\r\n      name: \"rosybrown\",\r\n      value: [63.61, 17.02, 6.6],\r\n    },\r\n    {\r\n      name: \"royalblue\",\r\n      value: [47.83, 26.27, -65.27],\r\n    },\r\n    {\r\n      name: \"saddlebrown\",\r\n      value: [37.47, 26.45, 40.99],\r\n    },\r\n    {\r\n      name: \"salmon\",\r\n      value: [67.26, 45.23, 29.09],\r\n    },\r\n    {\r\n      name: \"sandybrown\",\r\n      value: [73.95, 23.03, 46.79],\r\n    },\r\n    {\r\n      name: \"seagreen\",\r\n      value: [51.54, -39.71, 20.05],\r\n    },\r\n    {\r\n      name: \"seashell\",\r\n      value: [97.12, 2.17, 4.54],\r\n    },\r\n    {\r\n      name: \"sienna\",\r\n      value: [43.8, 29.33, 35.64],\r\n    },\r\n    {\r\n      name: \"silver\",\r\n      value: [77.7, 0, -0.01],\r\n    },\r\n    {\r\n      name: \"skyblue\",\r\n      value: [79.21, -14.83, -21.28],\r\n    },\r\n    {\r\n      name: \"slateblue\",\r\n      value: [45.34, 36.05, -57.78],\r\n    },\r\n    {\r\n      name: \"slategray\",\r\n      value: [52.84, -2.14, -10.58],\r\n    },\r\n    {\r\n      name: \"slategrey\",\r\n      value: [52.84, -2.14, -10.58],\r\n    },\r\n    {\r\n      name: \"snow\",\r\n      value: [98.64, 1.66, 0.58],\r\n    },\r\n    {\r\n      name: \"springgreen\",\r\n      value: [88.47, -76.9, 47.03],\r\n    },\r\n    {\r\n      name: \"steelblue\",\r\n      value: [52.47, -4.07, -32.2],\r\n    },\r\n    {\r\n      name: \"tan\",\r\n      value: [74.97, 5.02, 24.42],\r\n    },\r\n    {\r\n      name: \"teal\",\r\n      value: [48.26, -28.84, -8.48],\r\n    },\r\n    {\r\n      name: \"thistle\",\r\n      value: [80.08, 13.22, -9.24],\r\n    },\r\n    {\r\n      name: \"tomato\",\r\n      value: [62.2, 57.86, 46.42],\r\n    },\r\n    {\r\n      name: \"turquoise\",\r\n      value: [81.27, -44.08, -4.03],\r\n    },\r\n    {\r\n      name: \"violet\",\r\n      value: [69.69, 56.37, -36.82],\r\n    },\r\n    {\r\n      name: \"wheat\",\r\n      value: [89.35, 1.51, 24],\r\n    },\r\n    {\r\n      name: \"white\",\r\n      value: [100, 0.01, -0.01],\r\n    },\r\n    {\r\n      name: \"whitesmoke\",\r\n      value: [96.54, 0.01, -0.01],\r\n    },\r\n    {\r\n      name: \"yellow\",\r\n      value: [97.14, -21.56, 94.48],\r\n    },\r\n    {\r\n      name: \"yellowgreen\",\r\n      value: [76.54, -37.99, 66.59],\r\n    },\r\n  ] as { name: string; value: [number, number, number] }[];\r\n\r\n  static getMeanMedian = (colors: Color[], options: Options) => {\r\n    const averagingMethod = options.averagingMethod;\r\n    const numberOfPixels = colors.length;\r\n\r\n    const mean = new Color();\r\n    const median = new Color();\r\n\r\n    if (numberOfPixels === 0) return [mean, median];\r\n\r\n    const colorChannels = [\"r\", \"g\", \"b\", \"a\"] as const;\r\n\r\n    for (let i = 0; i < colorChannels.length; i++) {\r\n      const channel = colorChannels[i];\r\n\r\n      const values = [] as number[];\r\n\r\n      for (let i = 0; i < colors.length; i++) values.push(colors[i][channel]);\r\n\r\n      const sortedValues = values.sort();\r\n\r\n      if (averagingMethod === \"squared\") {\r\n        let totalSquaredValue = 0;\r\n\r\n        for (let i = 0; i < values.length; i++) totalSquaredValue += Color.squaredValues[values[i]];\r\n\r\n        const meanSquaredValue = totalSquaredValue / numberOfPixels;\r\n        const meanValue = Math.sqrt(meanSquaredValue);\r\n\r\n        mean[channel] = meanValue;\r\n      }\r\n\r\n      if (averagingMethod === \"simple\") {\r\n        let totalValue = 0;\r\n\r\n        for (let i = 0; i < values.length; i++) totalValue += values[i];\r\n\r\n        const meanValue = totalValue / numberOfPixels;\r\n\r\n        mean[channel] = meanValue;\r\n      }\r\n\r\n      const medianIndex = Math.floor(sortedValues.length / 2);\r\n\r\n      median[channel] = sortedValues[medianIndex];\r\n    }\r\n\r\n    return [mean, median];\r\n  };\r\n\r\n  static getLightestDarkest = (colors: Color[]) => {\r\n    if (colors.length === 0) return [new Color(), new Color()];\r\n\r\n    const sRGBtoLinear = (channel: number) => {\r\n      if (channel <= 0.04045) return channel / 12.92;\r\n\r\n      return Math.pow((channel + 0.055) / 1.055, 2.4);\r\n    };\r\n\r\n    const lightnessValues = colors.map((color) => {\r\n      const lR = sRGBtoLinear(color.r / 255);\r\n      const lG = sRGBtoLinear(color.g / 255);\r\n      const lB = sRGBtoLinear(color.b / 255);\r\n\r\n      const luminance = 0.2126 * lR + 0.7152 * lG + 0.0722 * lB;\r\n\r\n      if (luminance <= 216 / 24389) return luminance * (24389 / 27);\r\n      return Math.pow(luminance, 1 / 3) * 116 - 16;\r\n    });\r\n\r\n    const lightnestValue = lightnessValues.reduce((max, v) => Math.max(max, v), -1);\r\n    const darkestValue = lightnessValues.reduce((max, v) => Math.min(max, v), 256);\r\n\r\n    const lightestIndex = lightnessValues.indexOf(lightnestValue);\r\n    const darkestIndex = lightnessValues.indexOf(darkestValue);\r\n\r\n    const lightestColor = colors[lightestIndex];\r\n    const darkestColor = colors[darkestIndex];\r\n\r\n    return [\r\n      new Color(lightestColor.r, lightestColor.g, lightestColor.b, lightestColor.a),\r\n      new Color(darkestColor.r, darkestColor.g, darkestColor.b, darkestColor.a),\r\n    ];\r\n  };\r\n\r\n  static blendColors = (background: Color, foreground: Color) => {\r\n    const normalFgAlpha = foreground.a / 255;\r\n    const normalBgAlpha = 1 - normalFgAlpha;\r\n\r\n    const channels = [\"r\", \"g\", \"b\"] as const;\r\n\r\n    const rgb = channels.map((c) => background[c] * normalBgAlpha + foreground[c] * normalFgAlpha);\r\n\r\n    return new Color(...rgb);\r\n  };\r\n\r\n  r = 0; // 0-255\r\n  g = 0; // 0-255;\r\n  b = 0; // 0-255;\r\n  a = 0; // 0-255;\r\n\r\n  constructor(a?: number | string, b?: number, c?: number, d?: number) {\r\n    if (arguments.length === 1) {\r\n      if (typeof a === \"string\" && a[0] === \"#\") {\r\n        let hex = a;\r\n\r\n        if (hex.length === 4) hex = \"#\" + hex[1] + hex[1] + hex[2] + hex[2] + hex[3] + hex[3];\r\n\r\n        if (hex.length === 7 || hex.length === 9) {\r\n          this.r = parseInt(hex[1] + hex[2], 16);\r\n          this.g = parseInt(hex[3] + hex[4], 16);\r\n          this.b = parseInt(hex[5] + hex[6], 16);\r\n\r\n          if (hex.length === 9) this.a = parseInt(hex[7] + hex[8], 16);\r\n          else this.a = 255;\r\n        }\r\n\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (arguments.length === 3 || arguments.length === 4) {\r\n      const alpha = d == null ? 255 : d;\r\n\r\n      if (typeof a === \"number\" && typeof b === \"number\" && typeof c === \"number\") {\r\n        this.r = a;\r\n        this.g = b;\r\n        this.b = c;\r\n      }\r\n\r\n      this.a = alpha;\r\n    }\r\n  }\r\n\r\n  getClosedNamedColor = () => {\r\n    const { r, g, b } = this;\r\n\r\n    const lab = rgb2lab([r, g, b]);\r\n\r\n    let smallestDeltaE = 101;\r\n    let closestColorName = \"\";\r\n\r\n    Color.namedColorsLab.forEach((namedColor) => {\r\n      const deltaE = getDeltaE(lab, namedColor.value);\r\n\r\n      if (deltaE < smallestDeltaE) {\r\n        smallestDeltaE = deltaE;\r\n        closestColorName = namedColor.name;\r\n      }\r\n    });\r\n\r\n    return closestColorName;\r\n  };\r\n\r\n  get rgb(): [number, number, number] {\r\n    const { r, g, b } = this;\r\n\r\n    return [r, g, b];\r\n  }\r\n\r\n  get rgba(): [number, number, number, number] {\r\n    const { r, g, b, a } = this;\r\n\r\n    return [r, g, b, a];\r\n  }\r\n\r\n  toRgb() {\r\n    const { r, g, b } = this;\r\n\r\n    const rgb = [r, g, b].map((value) => Math.round(value));\r\n\r\n    return `rgb(${rgb.join(\", \")})`;\r\n  }\r\n\r\n  toRgba() {\r\n    const { r, g, b, a } = this;\r\n\r\n    const rgba = [r, g, b].map((value) => Math.round(value));\r\n    rgba.push(round(a / 255, 2));\r\n\r\n    return `rgba(${rgba.join(\", \")})`;\r\n  }\r\n\r\n  private hex = (value: number) => (\"0\" + Math.round(value).toString(16)).slice(-2);\r\n\r\n  toHex6() {\r\n    const { r, g, b, hex } = this;\r\n\r\n    return \"#\" + hex(r) + hex(g) + hex(b);\r\n  }\r\n\r\n  toHex8() {\r\n    const { r, g, b, a, hex } = this;\r\n\r\n    return \"#\" + hex(r) + hex(g) + hex(b) + hex(a);\r\n  }\r\n\r\n  private getHsl = () => {\r\n    const { r, g, b } = this;\r\n\r\n    const nR = r / 255;\r\n    const nG = g / 255;\r\n    const nB = b / 255;\r\n\r\n    const max = Math.max(nR, nG, nB);\r\n    const min = Math.min(nR, nG, nB);\r\n    const delta = max - min;\r\n\r\n    let hue, lightness, saturation;\r\n\r\n    // hue\r\n    if (delta === 0) hue = 0;\r\n    else if (nR === max) hue = ((nG - nB) / delta) % 6;\r\n    else if (nG === max) hue = (nB - nR) / delta + 2;\r\n    else hue = (nR - nG) / delta + 4;\r\n\r\n    hue = Math.round(hue * 60);\r\n\r\n    if (hue < 0) hue += 360;\r\n\r\n    // lightness\r\n    lightness = (max + min) / 2;\r\n\r\n    // saturation\r\n    if (delta === 0) saturation = 0;\r\n    else saturation = delta / (1 - Math.abs(2 * lightness - 1));\r\n\r\n    lightness = round(lightness * 100, 1);\r\n    saturation = round(saturation * 100, 1);\r\n\r\n    return [hue, saturation, lightness];\r\n  };\r\n\r\n  toHsl() {\r\n    const [hue, saturation, lightness] = this.getHsl();\r\n\r\n    return `hsl(${hue}, ${saturation}%, ${lightness}%)`;\r\n  }\r\n\r\n  toHsla() {\r\n    const { a } = this;\r\n\r\n    const [hue, saturation, lightness] = this.getHsl();\r\n\r\n    const alpha = round(a / 255, 2);\r\n\r\n    return `hsla(${hue}, ${saturation}%, ${lightness}%, ${alpha})`;\r\n  }\r\n}\r\n","class OptionsProxy {\r\n  [key: string]: any;\r\n\r\n  constructor() {\r\n    return new Proxy(this as unknown as Options, {\r\n      get: (target, name) => {\r\n        const field = target.fieldHashmap[name.toString()];\r\n\r\n        if (field) return field.value;\r\n\r\n        return target[name as keyof Options];\r\n      },\r\n    });\r\n  }\r\n}\r\n\r\nexport default class Options extends OptionsProxy {\r\n  readonly fieldArray: (HTMLInputElement | HTMLSelectElement)[];\r\n  readonly fieldHashmap: {\r\n    [key: string]: HTMLInputElement | HTMLSelectElement;\r\n  };\r\n  readonly fieldToBeforeChangeCallback: {\r\n    [key: string]: () => void;\r\n  };\r\n\r\n  callback?: () => void;\r\n\r\n  constructor(optionFields: (HTMLInputElement | HTMLSelectElement)[], callback?: () => void) {\r\n    super();\r\n\r\n    this.fieldArray = optionFields;\r\n    this.fieldHashmap = {};\r\n    this.fieldToBeforeChangeCallback = {};\r\n\r\n    optionFields.forEach((field) => {\r\n      this.fieldHashmap[field.name] = field;\r\n    });\r\n\r\n    if (callback) this.onChange = callback;\r\n\r\n    this.restore();\r\n  }\r\n\r\n  onBeforeChange = (name: string, newBeforeChangeCallback: () => void) => {\r\n    const { fieldHashmap, fieldToBeforeChangeCallback, callback } = this;\r\n\r\n    const field = fieldHashmap[name];\r\n\r\n    if (!field) return;\r\n\r\n    const beforeChangeCallback = fieldToBeforeChangeCallback[name];\r\n\r\n    if (callback) field.removeEventListener(\"change\", callback);\r\n    if (beforeChangeCallback) field.removeEventListener(\"change\", beforeChangeCallback);\r\n\r\n    field.addEventListener(\"change\", newBeforeChangeCallback);\r\n\r\n    if (callback) field.addEventListener(\"change\", callback);\r\n\r\n    fieldToBeforeChangeCallback[name] = newBeforeChangeCallback;\r\n  };\r\n\r\n  triggerAllBeforeChangeCallbacks = () => {\r\n    const { fieldArray, fieldToBeforeChangeCallback } = this;\r\n\r\n    fieldArray.forEach((field) => {\r\n      const beforeChangeCallback = fieldToBeforeChangeCallback[field.name];\r\n\r\n      if (beforeChangeCallback) beforeChangeCallback();\r\n    });\r\n  };\r\n\r\n  save = () => {\r\n    const { fieldArray } = this;\r\n\r\n    const optionsString = fieldArray.reduce((optionsObject, field) => {\r\n      if (field.type !== \"file\") optionsObject[field.name] = field.value;\r\n\r\n      return optionsObject;\r\n    }, {} as { [key: string]: string });\r\n\r\n    localStorage.setItem(\"options\", JSON.stringify(optionsString));\r\n  };\r\n\r\n  restore = () => {\r\n    const { fieldArray } = this;\r\n    const optionsString = localStorage.getItem(\"options\");\r\n\r\n    if (!optionsString) return;\r\n\r\n    try {\r\n      const optionsObject = JSON.parse(optionsString);\r\n\r\n      fieldArray.forEach((field) => {\r\n        if (optionsObject[field.name]) field.value = optionsObject[field.name];\r\n      });\r\n    } catch (e) {\r\n      localStorage.removeItem(\"options\");\r\n    }\r\n  };\r\n\r\n  set onChange(newCallback: () => void) {\r\n    const { fieldArray, callback } = this;\r\n\r\n    fieldArray.forEach((field) => {\r\n      if (callback) field.removeEventListener(\"change\", callback);\r\n      field.addEventListener(\"change\", newCallback);\r\n    });\r\n\r\n    this.callback = newCallback;\r\n  }\r\n}\r\n","import Color from \"./Color.ts\";\r\nimport { clamp, debounce, toast } from \"./Util.ts\";\r\n\r\nexport default class Preview {\r\n  readonly preview: HTMLCanvasElement;\r\n  readonly uploader: HTMLInputElement;\r\n\r\n  private context: CanvasRenderingContext2D;\r\n  private image: HTMLImageElement;\r\n  private colors: Promise<{ r: number; g: number; b: number; a: number }[]> | [];\r\n  private loadingToast: (() => void) | undefined;\r\n\r\n  private opacity: number | undefined;\r\n  private backgroundColor: Color | undefined;\r\n\r\n  constructor(previewElement: HTMLCanvasElement, uploaderElement: HTMLInputElement) {\r\n    const image = new Image();\r\n    image.addEventListener(\"load\", this.handleUpdateImage);\r\n\r\n    uploaderElement.addEventListener(\"change\", this.handleReadUpload);\r\n\r\n    this.preview = previewElement;\r\n    this.uploader = uploaderElement;\r\n\r\n    const context = previewElement.getContext(\"2d\");\r\n    if (!context) throw \"Failed to get 2D context from canvas element.\";\r\n\r\n    this.context = context;\r\n    this.image = image;\r\n    this.colors = [];\r\n  }\r\n\r\n  handleReadUpload = () => {\r\n    const { uploader, image } = this;\r\n\r\n    this.loadingToast = toast(\"Loading selected image...\", true);\r\n\r\n    requestAnimationFrame(() => {\r\n      const fileReader = new FileReader();\r\n\r\n      fileReader.addEventListener(\"load\", (e) => {\r\n        if (!e.target || !e.target.result) throw \"Failed to read uploaded file.\";\r\n\r\n        image.src = e.target.result.toString();\r\n      });\r\n\r\n      if (!uploader.files) throw \"Asked to read image file but found no file was uploaded.\";\r\n\r\n      fileReader.readAsDataURL(uploader.files[0]);\r\n    });\r\n  };\r\n\r\n  _handleUpdateImage = () => {\r\n    const { preview, context, image, loadingToast, opacity, backgroundColor } = this;\r\n    let { width, height } = image;\r\n\r\n    if (!width) width = 300;\r\n    if (!height) height = 200;\r\n\r\n    const done = (imageData: Uint8ClampedArray) => {\r\n      if (loadingToast) {\r\n        loadingToast();\r\n        delete this.loadingToast;\r\n      }\r\n\r\n      this.colors = new Promise((resolve) => {\r\n        requestAnimationFrame(() => {\r\n          requestAnimationFrame(() => {\r\n            const colors = [];\r\n\r\n            for (let i = 0; i < imageData.length; i += 4) {\r\n              const r = imageData[i + 0];\r\n              const g = imageData[i + 1];\r\n              const b = imageData[i + 2];\r\n              const a = imageData[i + 3];\r\n\r\n              colors.push({ r, g, b, a });\r\n            }\r\n\r\n            resolve(colors);\r\n          });\r\n        });\r\n      });\r\n    };\r\n\r\n    preview.width = width;\r\n    preview.height = height;\r\n\r\n    context.clearRect(0, 0, width, height);\r\n    context.drawImage(image, 0, 0);\r\n\r\n    const imageData = context.getImageData(0, 0, width, height);\r\n    const values = imageData.data;\r\n\r\n    if (opacity == null && backgroundColor == null) {\r\n      done(values);\r\n      return true;\r\n    }\r\n\r\n    // Handle Opacity\r\n\r\n    if (opacity != null) {\r\n      for (let i = 0; i < values.length; i += 4) {\r\n        const alpha = values[i + 3] * opacity;\r\n        const clampedAlpha = clamp(alpha, 0, 255);\r\n\r\n        values[i + 3] = clampedAlpha;\r\n      }\r\n\r\n      context.putImageData(imageData, 0, 0);\r\n\r\n      if (!backgroundColor) {\r\n        done(values);\r\n        return true;\r\n      }\r\n    }\r\n\r\n    // Handle Background Color\r\n\r\n    if (backgroundColor != null) {\r\n      const offscreenCanvas = new OffscreenCanvas(width, height);\r\n      const offscreenContext = offscreenCanvas.getContext(\"2d\");\r\n\r\n      if (!offscreenContext) throw \"Failed to get 2D context of offscreen canvas.\";\r\n\r\n      offscreenContext.fillStyle = backgroundColor.toRgba();\r\n      offscreenContext.fillRect(0, 0, width, height);\r\n      offscreenContext.drawImage(preview, 0, 0);\r\n\r\n      context.drawImage(offscreenCanvas, 0, 0);\r\n\r\n      done(context.getImageData(0, 0, width, height).data);\r\n    }\r\n  };\r\n\r\n  handleUpdateImage = debounce(this._handleUpdateImage);\r\n\r\n  loadExampleImage = () => {\r\n    this.loadingToast = toast(\"Loading example image...\", true);\r\n\r\n    requestAnimationFrame(() => {\r\n      this.image.src = \"./example.png\";\r\n    });\r\n  };\r\n\r\n  getColorsAt = async (startX: number, startY: number, width: number, height: number) => {\r\n    const { preview } = this;\r\n\r\n    const colors = await this.colors;\r\n\r\n    const targetColors = [];\r\n\r\n    for (let y = startY; y < startY + height; y++) {\r\n      for (let x = startX; x < startX + width; x++) {\r\n        const i = y * preview.width + x;\r\n\r\n        if (i < 0 || i > colors.length) continue;\r\n\r\n        targetColors.push(colors[i]);\r\n      }\r\n    }\r\n\r\n    return targetColors;\r\n  };\r\n\r\n  setBackgroundColor = (color: Color) => {\r\n    if (color.a === 0) delete this.backgroundColor;\r\n    else this.backgroundColor = color;\r\n\r\n    this.handleUpdateImage();\r\n  };\r\n\r\n  setOpacity = (opacity: number) => {\r\n    if (opacity === 1) delete this.opacity;\r\n    else this.opacity = opacity;\r\n\r\n    this.handleUpdateImage();\r\n  };\r\n}\r\n","import Color from \"./Color.ts\";\r\nimport Options from \"./Options.ts\";\r\nimport { toast } from \"./Util.ts\";\r\n\r\ntype resultElementInfo = {\r\n  textElement: HTMLInputElement;\r\n  foregroundElement: HTMLElement;\r\n  backgroundElement: HTMLElement;\r\n};\r\n\r\nexport default class Results {\r\n  readonly resultElementArray: resultElementInfo[];\r\n  readonly resultElementHashmap: { [key: string]: resultElementInfo };\r\n\r\n  constructor(resultFields: HTMLElement[]) {\r\n    this.resultElementArray = [];\r\n    this.resultElementHashmap = {};\r\n\r\n    resultFields.forEach((resultField) => {\r\n      const textElement = resultField.querySelector(\"input\") as HTMLInputElement;\r\n      const foregroundElement = resultField.querySelector(\".foreground\") as HTMLElement;\r\n      const backgroundElement = resultField.querySelector(\".background\") as HTMLElement;\r\n      const copyButton = resultField.querySelector(\".copy\");\r\n\r\n      if (copyButton) {\r\n        copyButton.addEventListener(\"click\", (e) => {\r\n          e.preventDefault();\r\n          navigator.clipboard.writeText(textElement.value);\r\n          toast(`Copied ${textElement.value}`);\r\n        });\r\n      }\r\n\r\n      const proxiedTextElement = new Proxy(textElement, {\r\n        set: (target, name, value) => {\r\n          if (name === \"value\") foregroundElement.style.backgroundColor = value;\r\n\r\n          // @ts-expect-error continue with default behavior\r\n          target[name] = value;\r\n          return true;\r\n        },\r\n      });\r\n\r\n      const name = textElement.name.split(\"ResultText\")[0];\r\n      const info = {\r\n        textElement: proxiedTextElement,\r\n        foregroundElement,\r\n        backgroundElement,\r\n      };\r\n\r\n      this.resultElementHashmap[name] = info;\r\n      this.resultElementArray.push(info);\r\n    });\r\n  }\r\n\r\n  setBackgroundColor = (color: Color) => {\r\n    const { resultElementArray } = this;\r\n\r\n    const backgroundColor = color.toRgba();\r\n\r\n    resultElementArray.forEach((info) => {\r\n      info.backgroundElement.style.backgroundColor = backgroundColor;\r\n    });\r\n  };\r\n\r\n  setResult = (type: string, color: Color, options: Options) => {\r\n    const { resultElementHashmap } = this;\r\n    const resultFormat = options.resultFormat;\r\n    const hideAlphaChannel = options.hideAlphaChannel;\r\n\r\n    let includeAlpha = false;\r\n    if (hideAlphaChannel === \"always\") includeAlpha = false;\r\n    else if (hideAlphaChannel === \"never\") includeAlpha = true;\r\n    else if (color.a !== 255) includeAlpha = true;\r\n\r\n    let value = \"\";\r\n\r\n    if (resultFormat === \"rgb\") value = includeAlpha ? color.toRgba() : color.toRgb();\r\n    if (resultFormat === \"hex\") value = includeAlpha ? color.toHex8() : color.toHex6();\r\n    if (resultFormat === \"hsl\") value = includeAlpha ? color.toHsla() : color.toHsl();\r\n    if (resultFormat === \"svg\") value = color.getClosedNamedColor();\r\n\r\n    if (!value) throw `Invalid resultFormat option: ${resultFormat.toString()}`;\r\n\r\n    resultElementHashmap[type].textElement.value = value;\r\n  };\r\n}\r\n","export default class Selection {\r\n  readonly outline: HTMLElement;\r\n  readonly target: HTMLCanvasElement;\r\n\r\n  callback: (() => void) | undefined;\r\n\r\n  private isInProgress = false;\r\n  private startPosition = { x: 0, y: 0 };\r\n  private endPosition = { x: 0, y: 0 };\r\n\r\n  info:\r\n    | {\r\n        top: number;\r\n        left: number;\r\n        bottom: number;\r\n        right: number;\r\n        width: number;\r\n        height: number;\r\n      }\r\n    | undefined;\r\n\r\n  constructor(borderElement: HTMLElement, targetElement: HTMLCanvasElement, callback?: () => void) {\r\n    targetElement.onmousedown = this.handleSelect;\r\n    targetElement.onmouseup = this.handleSelect;\r\n    targetElement.onmousemove = this.handleSelect;\r\n    targetElement.onmouseleave = this.handleSelect;\r\n\r\n    targetElement.ontouchstart = this.handleTouch;\r\n    targetElement.ontouchend = this.handleTouch;\r\n    targetElement.ontouchmove = this.handleTouch;\r\n\r\n    this.outline = borderElement;\r\n    this.target = targetElement;\r\n\r\n    if (callback) this.onSelectionEnd = callback;\r\n  }\r\n\r\n  handleTouch = (e: TouchEvent) => {\r\n    const { targetTouches, changedTouches, type } = e;\r\n\r\n    if (targetTouches.length !== 2) return;\r\n    else e.preventDefault();\r\n\r\n    const { target, updateInfo, updateOutline, callback } = this;\r\n\r\n    const touches = type === \"touchend\" ? changedTouches : targetTouches;\r\n    const boundingRect = target.getBoundingClientRect();\r\n\r\n    const x1 = Math.round(touches[0].clientX - boundingRect.left);\r\n    const y1 = Math.round(touches[0].clientY - boundingRect.top);\r\n\r\n    const x2 = Math.round(touches[1].clientX - boundingRect.left);\r\n    const y2 = Math.round(touches[1].clientY - boundingRect.top);\r\n\r\n    this.startPosition = { x: x1, y: y1 };\r\n    this.endPosition = { x: x2, y: y2 };\r\n\r\n    updateInfo();\r\n    updateOutline();\r\n\r\n    if (callback) callback();\r\n  };\r\n\r\n  handleSelect = (e: MouseEvent) => {\r\n    const { type, button, clientX, clientY } = e;\r\n    const { target, isInProgress, updateInfo, updateOutline, callback } = this;\r\n\r\n    if (button !== null && button !== 0) return;\r\n\r\n    const boundingRect = target.getBoundingClientRect();\r\n    const x = Math.round(clientX - boundingRect.left);\r\n    const y = Math.round(clientY - boundingRect.top);\r\n\r\n    if (type === \"mousedown\") {\r\n      this.startPosition = { x, y };\r\n      this.isInProgress = true;\r\n      return;\r\n    }\r\n\r\n    if (!isInProgress) return;\r\n\r\n    if (type === \"mousemove\" || type === \"mouseup\" || type === \"mouseleave\") {\r\n      this.endPosition = { x, y };\r\n\r\n      updateInfo();\r\n      updateOutline();\r\n\r\n      if (callback) callback();\r\n    }\r\n\r\n    if (type === \"mouseup\" || type === \"mouseleave\") this.isInProgress = false;\r\n  };\r\n\r\n  set onSelectionEnd(callback: () => void) {\r\n    this.callback = callback;\r\n  }\r\n\r\n  updateInfo = () => {\r\n    const { startPosition, endPosition, target } = this;\r\n\r\n    const top = Math.max(Math.min(startPosition.y, endPosition.y), 0);\r\n    const left = Math.max(Math.min(startPosition.x, endPosition.x), 0);\r\n    const bottom = Math.min(Math.max(startPosition.y, endPosition.y), target.height);\r\n    const right = Math.min(Math.max(startPosition.x, endPosition.x), target.width);\r\n\r\n    const width = Math.max(right - left, 1);\r\n    const height = Math.max(bottom - top, 1);\r\n\r\n    this.info = { top, left, bottom, right, width, height };\r\n  };\r\n\r\n  updateOutline = () => {\r\n    const { outline, info } = this;\r\n\r\n    if (!info) return;\r\n\r\n    const { top, left, width, height } = info;\r\n\r\n    const cssText = `top:${top}px; left:${left}px; width:${width}px; height:${height}px;`;\r\n\r\n    outline.style.cssText = cssText;\r\n  };\r\n\r\n  clear = () => {\r\n    const { outline } = this;\r\n\r\n    outline.style.cssText = \"\";\r\n\r\n    delete this.info;\r\n  };\r\n}\r\n","export const debounce = (func: (...args: any[]) => any, timeout = 100) => {\r\n  let timer: number;\r\n\r\n  return (...args: any[]) => {\r\n    clearTimeout(timer);\r\n    timer = setTimeout(() => func.apply(this, args), timeout);\r\n  };\r\n};\r\n\r\nexport const round = (value: number, decimalPlaces = 0) =>\r\n  +(Math.round(+(value + `e+${decimalPlaces}`)) + `e-${decimalPlaces}`);\r\n\r\nexport const clamp = (value: number, min: number, max: number) =>\r\n  Math.max(Math.min(value, max), min);\r\n\r\nexport const toast = (message: string, persist = false) => {\r\n  const toast = document.createElement(\"div\");\r\n\r\n  toast.textContent = message;\r\n  toast.className = `toast ${persist ? \"\" : \"fade-out\"}`;\r\n  toast.setAttribute(\"role\", \"status\");\r\n\r\n  const toastContainer = document.querySelector(\".toast-container\");\r\n\r\n  if (toastContainer) {\r\n    toastContainer.appendChild(toast);\r\n\r\n    if (persist) {\r\n      return () => {\r\n        requestAnimationFrame(() => toastContainer.removeChild(toast));\r\n      };\r\n    } else {\r\n      setTimeout(() => {\r\n        toastContainer.removeChild(toast);\r\n      }, 1500);\r\n    }\r\n  }\r\n};\r\n","import Color from \"./classes/Color.ts\";\r\nimport Options from \"./classes/Options.ts\";\r\nimport Preview from \"./classes/Preview.ts\";\r\nimport Selection from \"./classes/Selection.ts\";\r\nimport Results from \"./classes/Results.ts\";\r\nimport { debounce, toast } from \"./classes/Util.ts\";\r\n\r\nfunction init() {\r\n  const $ = (selector: string): HTMLElement[] => Array.from(document.querySelectorAll(selector));\r\n\r\n  const optionsForm = $(\".options\")[0] as HTMLFormElement;\r\n  const resultsForm = $(\".results\")[0] as HTMLFormElement;\r\n\r\n  optionsForm.reset();\r\n  resultsForm.reset();\r\n\r\n  optionsForm.addEventListener(\"submit\", (e) => {\r\n    e.preventDefault();\r\n    calculate();\r\n  });\r\n\r\n  const optionFields = $(\".options :is(input, select)\") as (HTMLInputElement | HTMLSelectElement)[];\r\n  const resultFields = $(\".results .field\") as HTMLInputElement[];\r\n\r\n  const previewElement = $(\".preview\")[0] as HTMLCanvasElement;\r\n  const uploaderElement = $(\"input[name=imageUpload]\")[0] as HTMLInputElement;\r\n  const selectorElement = $(\".selector\")[0];\r\n\r\n  const options = new Options(optionFields);\r\n  const preview = new Preview(previewElement, uploaderElement);\r\n  const results = new Results(resultFields);\r\n  const selection = new Selection(selectorElement, previewElement);\r\n\r\n  const calculate = debounce(async () => {\r\n    if (!selection.info) return;\r\n\r\n    const { top, left, width, height } = selection.info;\r\n\r\n    const selectedColors = (await preview.getColorsAt(left, top, width, height)) as Color[];\r\n\r\n    const [meanColor, medianColor] = Color.getMeanMedian(selectedColors, options);\r\n    const [lightestColor, darkestColor] = Color.getLightestDarkest(selectedColors);\r\n\r\n    results.setResult(\"mean\", meanColor, options);\r\n    results.setResult(\"median\", medianColor, options);\r\n    results.setResult(\"lightest\", lightestColor, options);\r\n    results.setResult(\"darkest\", darkestColor, options);\r\n  });\r\n\r\n  uploaderElement.addEventListener(\"change\", selection.clear);\r\n\r\n  const exampleImageButton = $(\"#example-image-button\")[0];\r\n  const resetButton = $(\"button[type=reset]\")[0];\r\n  const saveButton = $(\"button[name=save\")[0];\r\n\r\n  exampleImageButton.addEventListener(\"click\", (e) => {\r\n    e.preventDefault();\r\n    selection.clear();\r\n    preview.loadExampleImage();\r\n  });\r\n\r\n  resetButton.addEventListener(\"click\", (e) => {\r\n    e.preventDefault();\r\n    optionsForm.reset();\r\n    options.triggerAllBeforeChangeCallbacks();\r\n    calculate();\r\n    toast(\"Options reset!\");\r\n  });\r\n\r\n  saveButton.addEventListener(\"click\", (e) => {\r\n    e.preventDefault();\r\n    options.save();\r\n    toast(\"Options saved!\");\r\n  });\r\n\r\n  options.onBeforeChange(\"opacityPercentage\", () => {\r\n    const opacityPercent = options.opacityPercentage;\r\n\r\n    preview.setOpacity(opacityPercent / 100);\r\n  });\r\n\r\n  const handleBackgroundSettingsChanged = () => {\r\n    const transparencyType = options.transparencyType;\r\n\r\n    let backgroundColor = null;\r\n\r\n    if (transparencyType === \"straight\") backgroundColor = new Color(0, 0, 0, 0);\r\n    if (transparencyType === \"premultiplied\") backgroundColor = new Color(options.backgroundColor);\r\n\r\n    if (!backgroundColor) throw `Invalid transparency type option: ${transparencyType.toString()}`;\r\n\r\n    preview.setBackgroundColor(backgroundColor);\r\n    results.setBackgroundColor(backgroundColor);\r\n\r\n    calculate();\r\n  };\r\n\r\n  options.onBeforeChange(\"backgroundColor\", handleBackgroundSettingsChanged);\r\n  options.onBeforeChange(\"transparencyType\", handleBackgroundSettingsChanged);\r\n\r\n  options.triggerAllBeforeChangeCallbacks();\r\n\r\n  selection.onSelectionEnd = calculate;\r\n  options.onChange = calculate;\r\n}\r\n\r\nwindow.onload = () => requestAnimationFrame(init);\r\n"]}