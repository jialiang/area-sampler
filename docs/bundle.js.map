{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/rgb-lab/color.js","src/classes/Color.ts","src/classes/Options.ts","src/classes/Preview.ts","src/classes/Results.ts","src/classes/Selection.ts","src/classes/Util.ts","src/index.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","lab2rgb","h","M","Math","pow","max","min","rgb2lab","deltaE","sqrt","w","s","2","_rgbLab","_Util","_typeof","Symbol","iterator","constructor","prototype","_slicedToArray","Array","isArray","l","m","next","Object","done","push","value","return","_unsupportedIterableToArray","TypeError","_construct","Reflect","construct","sham","Proxy","Boolean","valueOf","bind","apply","Function","_setPrototypeOf","arguments","setPrototypeOf","__proto__","_toConsumableArray","_arrayLikeToArray","from","toString","slice","name","test","_defineProperties","enumerable","configurable","writable","defineProperty","_toPropertyKey","key","_defineProperty","toPrimitive","String","Number","get","this","g","b","map","round","concat","join","hex","getHsl","Color","namedColorsLab","forEach","abs","rgba","parseInt","default","keys","averagingMethod","v","sort","y","squaredValues","d","floor","indexOf","OptionsProxy","_createClass","_classCallCheck","fieldHashmap","Options","_inherits","_createSuper","_assertThisInitialized","fieldToBeforeChangeCallback","callback","removeEventListener","addEventListener","fieldArray","reduce","type","localStorage","setItem","JSON","stringify","getItem","parse","removeItem","onChange","restore","set","_Color","__esModule","uploader","image","FileReader","target","result","src","files","readAsDataURL","preview","context","opacity","backgroundColor","width","height","clearRect","drawImage","getImageData","data","colors","clamp","putImageData","OffscreenCanvas","getContext","fillStyle","toRgba","fillRect","handleUpdateImage","Image","handleReadUpload","Preview","resultElementArray","backgroundElement","style","resultElementHashmap","resultFormat","hideAlphaChannel","toRgb","toHex8","toHex6","toHsla","toHsl","getClosedNamedColor","textElement","querySelector","preventDefault","navigator","clipboard","writeText","toast","split","foregroundElement","Results","debounce","Selection","x","targetTouches","changedTouches","updateInfo","updateOutline","getBoundingClientRect","clientX","left","clientY","top","startPosition","endPosition","button","isInProgress","info","bottom","right","outline","cssText","onmousedown","handleSelect","onmouseup","onmousemove","onmouseleave","ontouchstart","handleTouch","ontouchend","ontouchmove","onSelectionEnd","clearTimeout","window","setTimeout","document","createElement","textContent","className","setAttribute","appendChild","removeChild","_interopRequireDefault","_Options","_Preview","_Selection","_Results","init","querySelectorAll","transparencyType","setBackgroundColor","reset","_","getColorsAt","getMeanMedian","getLightestDarkest","setResult","clear","loadExampleImage","triggerAllBeforeChangeCallbacks","save","onBeforeChange","opacityPercentage","setOpacity","onload","requestAnimationFrame"],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","exports.lab2rgb=function(t){var a,h,M,r=(t[0]+16)/116,o=t[1]/500+r,n=r-t[2]/200;return h=-.9689*(o=.95047*(o*o*o>.008856?o*o*o:(o-16/116)/7.787))+1.8758*(r=1*(r*r*r>.008856?r*r*r:(r-16/116)/7.787))+.0415*(n=1.08883*(n*n*n>.008856?n*n*n:(n-16/116)/7.787)),M=.0557*o+-.204*r+1.057*n,a=(a=3.2406*o+-1.5372*r+-.4986*n)>.0031308?1.055*Math.pow(a,1/2.4)-.055:12.92*a,h=h>.0031308?1.055*Math.pow(h,1/2.4)-.055:12.92*h,M=M>.0031308?1.055*Math.pow(M,1/2.4)-.055:12.92*M,[255*Math.max(0,Math.min(1,a)),255*Math.max(0,Math.min(1,h)),255*Math.max(0,Math.min(1,M))]},exports.rgb2lab=function(t){var a,h,M,r=t[0]/255,o=t[1]/255,n=t[2]/255;return h=(.2126*(r=r>.04045?Math.pow((r+.055)/1.055,2.4):r/12.92)+.7152*(o=o>.04045?Math.pow((o+.055)/1.055,2.4):o/12.92)+.0722*(n=n>.04045?Math.pow((n+.055)/1.055,2.4):n/12.92))/1,M=(.0193*r+.1192*o+.9505*n)/1.08883,a=(a=(.4124*r+.3576*o+.1805*n)/.95047)>.008856?Math.pow(a,1/3):7.787*a+16/116,[116*(h=h>.008856?Math.pow(h,1/3):7.787*h+16/116)-16,500*(a-h),200*(h-(M=M>.008856?Math.pow(M,1/3):7.787*M+16/116))]},exports.deltaE=function(t,a){var h=t[0]-a[0],M=t[1]-a[1],r=t[2]-a[2],o=Math.sqrt(t[1]*t[1]+t[2]*t[2]),n=o-Math.sqrt(a[1]*a[1]+a[2]*a[2]),p=M*M+r*r-n*n,w=h/1,e=n/(1+.045*o),s=(p=p<0?0:Math.sqrt(p))/(1+.015*o),i=w*w+e*e+s*s;return i<0?0:Math.sqrt(i)};\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbG9yLmpzIl0sIm5hbWVzIjpbImV4cG9ydHMiLCJsYWIycmdiIiwibGFiIiwiciIsImciLCJiIiwieSIsIngiLCJ6IiwiTWF0aCIsInBvdyIsIm1heCIsIm1pbiIsInJnYjJsYWIiLCJyZ2IiLCJkZWx0YUUiLCJsYWJBIiwibGFiQiIsImRlbHRhTCIsImRlbHRhQSIsImRlbHRhQiIsImMxIiwic3FydCIsImRlbHRhQyIsImRlbHRhSCIsImRlbHRhTEtsc2wiLCJkZWx0YUNrY3NjIiwiZGVsdGFIa2hzaCIsImkiXSwibWFwcGluZ3MiOiJBQUdBQSxRQUFRQyxRQUFVLFNBQWlCQyxHQUNqQyxJQUdJQyxFQUFHQyxFQUFHQyxFQUhOQyxHQUFLSixFQUFJLEdBQUssSUFBTSxJQUNwQkssRUFBSUwsRUFBSSxHQUFLLElBQU1JLEVBQ25CRSxFQUFJRixFQUFJSixFQUFJLEdBQUssSUFlckIsT0FQQUUsR0FBUyxPQUxURyxFQUFJLFFBQVlBLEVBQUlBLEVBQUlBLEVBQUksUUFBWUEsRUFBSUEsRUFBSUEsR0FBS0EsRUFBSSxHQUFHLEtBQU8sUUFLNUMsUUFKdkJELEVBQUksR0FBWUEsRUFBSUEsRUFBSUEsRUFBSSxRQUFZQSxFQUFJQSxFQUFJQSxHQUFLQSxFQUFJLEdBQUcsS0FBTyxRQUk5QixPQUhyQ0UsRUFBSSxTQUFZQSxFQUFJQSxFQUFJQSxFQUFJLFFBQVlBLEVBQUlBLEVBQUlBLEdBQUtBLEVBQUksR0FBRyxLQUFPLFFBSW5FSCxFQUFTLE1BQUxFLEdBQW1CLEtBQUxELEVBQW1CLE1BQUxFLEVBRWhDTCxHQUpBQSxFQUFTLE9BQUxJLEdBQW1CLE9BQUxELEdBQW1CLE1BQUxFLEdBSXZCLFNBQWMsTUFBUUMsS0FBS0MsSUFBSVAsRUFBRyxFQUFFLEtBQU8sS0FBUyxNQUFRQSxFQUNyRUMsRUFBS0EsRUFBSSxTQUFjLE1BQVFLLEtBQUtDLElBQUlOLEVBQUcsRUFBRSxLQUFPLEtBQVMsTUFBUUEsRUFDckVDLEVBQUtBLEVBQUksU0FBYyxNQUFRSSxLQUFLQyxJQUFJTCxFQUFHLEVBQUUsS0FBTyxLQUFTLE1BQVFBLEVBRTlELENBQStCLElBQTlCSSxLQUFLRSxJQUFJLEVBQUdGLEtBQUtHLElBQUksRUFBR1QsSUFDTSxJQUE5Qk0sS0FBS0UsSUFBSSxFQUFHRixLQUFLRyxJQUFJLEVBQUdSLElBQ00sSUFBOUJLLEtBQUtFLElBQUksRUFBR0YsS0FBS0csSUFBSSxFQUFHUCxNQUlsQ0wsUUFBUWEsUUFBVSxTQUFpQkMsR0FDakMsSUFHSVAsRUFBR0QsRUFBR0UsRUFITkwsRUFBSVcsRUFBSSxHQUFLLElBQ2JWLEVBQUlVLEVBQUksR0FBSyxJQUNiVCxFQUFJUyxFQUFJLEdBQUssSUFlakIsT0FQQVIsR0FBUyxPQUxUSCxFQUFLQSxFQUFJLE9BQVdNLEtBQUtDLEtBQUtQLEVBQUksTUFBUyxNQUFPLEtBQU9BLEVBQUksT0FLdkMsT0FKdEJDLEVBQUtBLEVBQUksT0FBV0ssS0FBS0MsS0FBS04sRUFBSSxNQUFTLE1BQU8sS0FBT0EsRUFBSSxPQUkxQixPQUhuQ0MsRUFBS0EsRUFBSSxPQUFXSSxLQUFLQyxLQUFLTCxFQUFJLE1BQVMsTUFBTyxLQUFPQSxFQUFJLFFBR2hCLEVBQzdDRyxHQUFTLE1BQUpMLEVBQWlCLE1BQUpDLEVBQWlCLE1BQUpDLEdBQWMsUUFFN0NFLEdBSkFBLEdBQVMsTUFBSkosRUFBaUIsTUFBSkMsRUFBaUIsTUFBSkMsR0FBYyxRQUlwQyxRQUFZSSxLQUFLQyxJQUFJSCxFQUFHLEVBQUUsR0FBTSxNQUFRQSxFQUFLLEdBQUcsSUFJbEQsQ0FBRSxLQUhURCxFQUFLQSxFQUFJLFFBQVlHLEtBQUtDLElBQUlKLEVBQUcsRUFBRSxHQUFNLE1BQVFBLEVBQUssR0FBRyxLQUdyQyxHQUFJLEtBQU9DLEVBQUlELEdBQUksS0FBT0EsR0FGOUNFLEVBQUtBLEVBQUksUUFBWUMsS0FBS0MsSUFBSUYsRUFBRyxFQUFFLEdBQU0sTUFBUUEsRUFBSyxHQUFHLFFBUTNEUixRQUFRZSxPQUFTLFNBQWdCQyxFQUFNQyxHQUNyQyxJQUFJQyxFQUFTRixFQUFLLEdBQUtDLEVBQUssR0FDeEJFLEVBQVNILEVBQUssR0FBS0MsRUFBSyxHQUN4QkcsRUFBU0osRUFBSyxHQUFLQyxFQUFLLEdBQ3hCSSxFQUFLWixLQUFLYSxLQUFLTixFQUFLLEdBQUtBLEVBQUssR0FBS0EsRUFBSyxHQUFLQSxFQUFLLElBRWxETyxFQUFTRixFQURKWixLQUFLYSxLQUFLTCxFQUFLLEdBQUtBLEVBQUssR0FBS0EsRUFBSyxHQUFLQSxFQUFLLElBRWxETyxFQUFTTCxFQUFTQSxFQUFTQyxFQUFTQSxFQUFTRyxFQUFTQSxFQUl0REUsRUFBYVAsRUFBUyxFQUN0QlEsRUFBYUgsR0FIUixFQUFNLEtBQVFGLEdBSW5CTSxHQUxKSCxFQUFTQSxFQUFTLEVBQUksRUFBSWYsS0FBS2EsS0FBS0UsS0FFM0IsRUFBTSxLQUFRSCxHQUluQk8sRUFBSUgsRUFBYUEsRUFBYUMsRUFBYUEsRUFBYUMsRUFBYUEsRUFDekUsT0FBT0MsRUFBSSxFQUFJLEVBQUluQixLQUFLYSxLQUFLTSIsImZpbGUiOiJDOlxcVXNlcnNcXEppYSBMaWFuZ1xcRGVza3RvcFxcQWxsXFxHaXRcXGFyZWEtc2FtcGxlclxcbm9kZV9tb2R1bGVzXFxyZ2ItbGFiXFxjb2xvci5qcyJ9","import { rgb2lab, deltaE as getDeltaE } from \"rgb-lab\";\r\n\r\nimport Options from \"./Options.ts\";\r\nimport { round } from \"./Util.ts\";\r\n\r\nexport default class Color {\r\n  static squaredValues = [...Array(256).keys()].map((value) => value * value);\r\n\r\n  static namedColorsLab = [\r\n    {\r\n      name: \"aliceblue\",\r\n      value: [97.18, -1.34, -4.27],\r\n    },\r\n    {\r\n      name: \"antiquewhite\",\r\n      value: [93.73, 1.84, 11.52],\r\n    },\r\n    {\r\n      name: \"aqua\",\r\n      value: [91.12, -48.08, -14.14],\r\n    },\r\n    {\r\n      name: \"aquamarine\",\r\n      value: [92.04, -45.52, 9.71],\r\n    },\r\n    {\r\n      name: \"azure\",\r\n      value: [98.93, -4.88, -1.7],\r\n    },\r\n    {\r\n      name: \"beige\",\r\n      value: [95.95, -4.19, 12.04],\r\n    },\r\n    {\r\n      name: \"bisque\",\r\n      value: [92.01, 4.43, 19],\r\n    },\r\n    {\r\n      name: \"black\",\r\n      value: [0, 0, 0],\r\n    },\r\n    {\r\n      name: \"blanchedalmond\",\r\n      value: [93.92, 2.13, 17.02],\r\n    },\r\n    {\r\n      name: \"blue\",\r\n      value: [32.3, 79.2, -107.86],\r\n    },\r\n    {\r\n      name: \"blueviolet\",\r\n      value: [42.19, 69.86, -74.77],\r\n    },\r\n    {\r\n      name: \"brown\",\r\n      value: [37.52, 49.7, 30.54],\r\n    },\r\n    {\r\n      name: \"burlywood\",\r\n      value: [77.02, 7.05, 30.01],\r\n    },\r\n    {\r\n      name: \"cadetblue\",\r\n      value: [61.15, -19.68, -7.43],\r\n    },\r\n    {\r\n      name: \"chartreuse\",\r\n      value: [89.87, -68.07, 85.78],\r\n    },\r\n    {\r\n      name: \"chocolate\",\r\n      value: [55.99, 37.06, 56.74],\r\n    },\r\n    {\r\n      name: \"coral\",\r\n      value: [67.29, 45.36, 47.49],\r\n    },\r\n    {\r\n      name: \"cornflowerblue\",\r\n      value: [61.93, 9.34, -49.31],\r\n    },\r\n    {\r\n      name: \"cornsilk\",\r\n      value: [97.46, -2.21, 14.28],\r\n    },\r\n    {\r\n      name: \"crimson\",\r\n      value: [47.03, 70.94, 33.59],\r\n    },\r\n    {\r\n      name: \"cyan\",\r\n      value: [91.12, -48.08, -14.14],\r\n    },\r\n    {\r\n      name: \"darkblue\",\r\n      value: [14.76, 50.43, -68.68],\r\n    },\r\n    {\r\n      name: \"darkcyan\",\r\n      value: [52.21, -30.62, -9],\r\n    },\r\n    {\r\n      name: \"darkgoldenrod\",\r\n      value: [59.22, 9.87, 62.73],\r\n    },\r\n    {\r\n      name: \"darkgray\",\r\n      value: [69.24, 0, -0.01],\r\n    },\r\n    {\r\n      name: \"darkgreen\",\r\n      value: [36.2, -43.37, 41.86],\r\n    },\r\n    {\r\n      name: \"darkgrey\",\r\n      value: [69.24, 0, -0.01],\r\n    },\r\n    {\r\n      name: \"darkkhaki\",\r\n      value: [73.38, -8.79, 39.29],\r\n    },\r\n    {\r\n      name: \"darkmagenta\",\r\n      value: [32.6, 62.56, -38.74],\r\n    },\r\n    {\r\n      name: \"darkolivegreen\",\r\n      value: [42.23, -18.83, 30.6],\r\n    },\r\n    {\r\n      name: \"darkorange\",\r\n      value: [69.48, 36.83, 75.49],\r\n    },\r\n    {\r\n      name: \"darkorchid\",\r\n      value: [43.38, 65.17, -60.11],\r\n    },\r\n    {\r\n      name: \"darkred\",\r\n      value: [28.08, 51.01, 41.29],\r\n    },\r\n    {\r\n      name: \"darksalmon\",\r\n      value: [69.85, 28.18, 27.7],\r\n    },\r\n    {\r\n      name: \"darkseagreen\",\r\n      value: [72.09, -23.82, 18.03],\r\n    },\r\n    {\r\n      name: \"darkslateblue\",\r\n      value: [30.83, 26.06, -42.09],\r\n    },\r\n    {\r\n      name: \"darkslategray\",\r\n      value: [31.26, -11.72, -3.73],\r\n    },\r\n    {\r\n      name: \"darkslategrey\",\r\n      value: [31.26, -11.72, -3.73],\r\n    },\r\n    {\r\n      name: \"darkturquoise\",\r\n      value: [75.29, -40.04, -13.52],\r\n    },\r\n    {\r\n      name: \"darkviolet\",\r\n      value: [39.58, 76.34, -70.38],\r\n    },\r\n    {\r\n      name: \"deeppink\",\r\n      value: [55.95, 84.56, -5.71],\r\n    },\r\n    {\r\n      name: \"deepskyblue\",\r\n      value: [72.55, -17.65, -42.55],\r\n    },\r\n    {\r\n      name: \"dimgray\",\r\n      value: [44.41, 0, -0.01],\r\n    },\r\n    {\r\n      name: \"dimgrey\",\r\n      value: [44.41, 0, -0.01],\r\n    },\r\n    {\r\n      name: \"dodgerblue\",\r\n      value: [59.38, 9.97, -63.39],\r\n    },\r\n    {\r\n      name: \"firebrick\",\r\n      value: [39.11, 55.93, 37.65],\r\n    },\r\n    {\r\n      name: \"floralwhite\",\r\n      value: [98.4, -0.03, 5.37],\r\n    },\r\n    {\r\n      name: \"forestgreen\",\r\n      value: [50.59, -49.59, 45.02],\r\n    },\r\n    {\r\n      name: \"fuchsia\",\r\n      value: [60.32, 98.25, -60.84],\r\n    },\r\n    {\r\n      name: \"gainsboro\",\r\n      value: [87.76, 0, -0.01],\r\n    },\r\n    {\r\n      name: \"ghostwhite\",\r\n      value: [97.76, 1.25, -3.36],\r\n    },\r\n    {\r\n      name: \"gold\",\r\n      value: [86.93, -1.92, 87.14],\r\n    },\r\n    {\r\n      name: \"goldenrod\",\r\n      value: [70.82, 8.52, 68.76],\r\n    },\r\n    {\r\n      name: \"gray\",\r\n      value: [53.59, 0, -0.01],\r\n    },\r\n    {\r\n      name: \"green\",\r\n      value: [46.23, -51.7, 49.9],\r\n    },\r\n    {\r\n      name: \"greenyellow\",\r\n      value: [91.96, -52.48, 81.87],\r\n    },\r\n    {\r\n      name: \"grey\",\r\n      value: [53.59, 0, -0.01],\r\n    },\r\n    {\r\n      name: \"honeydew\",\r\n      value: [98.57, -7.56, 5.47],\r\n    },\r\n    {\r\n      name: \"hotpink\",\r\n      value: [65.48, 64.25, -10.66],\r\n    },\r\n    {\r\n      name: \"indianred\",\r\n      value: [53.39, 44.84, 22.11],\r\n    },\r\n    {\r\n      name: \"indigo\",\r\n      value: [20.47, 51.69, -53.32],\r\n    },\r\n    {\r\n      name: \"ivory\",\r\n      value: [99.64, -2.55, 7.15],\r\n    },\r\n    {\r\n      name: \"khaki\",\r\n      value: [90.33, -9.01, 44.97],\r\n    },\r\n    {\r\n      name: \"lavender\",\r\n      value: [91.83, 3.71, -9.67],\r\n    },\r\n    {\r\n      name: \"lavenderblush\",\r\n      value: [96.07, 5.89, -0.6],\r\n    },\r\n    {\r\n      name: \"lawngreen\",\r\n      value: [88.88, -67.86, 84.95],\r\n    },\r\n    {\r\n      name: \"lemonchiffon\",\r\n      value: [97.65, -5.42, 22.23],\r\n    },\r\n    {\r\n      name: \"lightblue\",\r\n      value: [83.81, -10.89, -11.49],\r\n    },\r\n    {\r\n      name: \"lightcoral\",\r\n      value: [66.15, 42.82, 19.55],\r\n    },\r\n    {\r\n      name: \"lightcyan\",\r\n      value: [97.87, -9.94, -3.38],\r\n    },\r\n    {\r\n      name: \"lightgoldenrodyellow\",\r\n      value: [97.37, -6.48, 19.23],\r\n    },\r\n    {\r\n      name: \"lightgray\",\r\n      value: [84.56, 0, -0.01],\r\n    },\r\n    {\r\n      name: \"lightgreen\",\r\n      value: [86.55, -46.33, 36.94],\r\n    },\r\n    {\r\n      name: \"lightgrey\",\r\n      value: [84.56, 0, -0.01],\r\n    },\r\n    {\r\n      name: \"lightpink\",\r\n      value: [81.05, 27.97, 5.03],\r\n    },\r\n    {\r\n      name: \"lightsalmon\",\r\n      value: [74.7, 31.48, 34.54],\r\n    },\r\n    {\r\n      name: \"lightseagreen\",\r\n      value: [65.79, -37.51, -6.34],\r\n    },\r\n    {\r\n      name: \"lightskyblue\",\r\n      value: [79.73, -10.82, -28.51],\r\n    },\r\n    {\r\n      name: \"lightslategray\",\r\n      value: [55.92, -2.24, -11.11],\r\n    },\r\n    {\r\n      name: \"lightslategrey\",\r\n      value: [55.92, -2.24, -11.11],\r\n    },\r\n    {\r\n      name: \"lightsteelblue\",\r\n      value: [78.45, -1.28, -15.22],\r\n    },\r\n    {\r\n      name: \"lightyellow\",\r\n      value: [99.28, -5.1, 14.83],\r\n    },\r\n    {\r\n      name: \"lime\",\r\n      value: [87.74, -86.18, 83.18],\r\n    },\r\n    {\r\n      name: \"limegreen\",\r\n      value: [72.61, -67.13, 61.44],\r\n    },\r\n    {\r\n      name: \"linen\",\r\n      value: [95.31, 1.68, 6.01],\r\n    },\r\n    {\r\n      name: \"magenta\",\r\n      value: [60.32, 98.25, -60.84],\r\n    },\r\n    {\r\n      name: \"maroon\",\r\n      value: [25.53, 48.06, 38.06],\r\n    },\r\n    {\r\n      name: \"mediumaquamarine\",\r\n      value: [75.69, -38.33, 8.3],\r\n    },\r\n    {\r\n      name: \"mediumblue\",\r\n      value: [24.98, 67.18, -91.5],\r\n    },\r\n    {\r\n      name: \"mediumorchid\",\r\n      value: [53.64, 59.07, -47.41],\r\n    },\r\n    {\r\n      name: \"mediumpurple\",\r\n      value: [54.98, 36.81, -50.1],\r\n    },\r\n    {\r\n      name: \"mediumseagreen\",\r\n      value: [65.27, -48.22, 24.29],\r\n    },\r\n    {\r\n      name: \"mediumslateblue\",\r\n      value: [52.16, 41.08, -65.41],\r\n    },\r\n    {\r\n      name: \"mediumspringgreen\",\r\n      value: [87.34, -70.68, 32.46],\r\n    },\r\n    {\r\n      name: \"mediumturquoise\",\r\n      value: [76.88, -37.35, -8.36],\r\n    },\r\n    {\r\n      name: \"mediumvioletred\",\r\n      value: [44.76, 71.01, -15.18],\r\n    },\r\n    {\r\n      name: \"midnightblue\",\r\n      value: [15.86, 31.72, -49.58],\r\n    },\r\n    {\r\n      name: \"mintcream\",\r\n      value: [99.16, -4.16, 1.24],\r\n    },\r\n    {\r\n      name: \"mistyrose\",\r\n      value: [92.66, 8.75, 4.83],\r\n    },\r\n    {\r\n      name: \"moccasin\",\r\n      value: [91.72, 2.44, 26.35],\r\n    },\r\n    {\r\n      name: \"navajowhite\",\r\n      value: [90.1, 4.51, 28.26],\r\n    },\r\n    {\r\n      name: \"navy\",\r\n      value: [12.98, 47.51, -64.7],\r\n    },\r\n    {\r\n      name: \"oldlace\",\r\n      value: [96.78, 0.18, 8.16],\r\n    },\r\n    {\r\n      name: \"olive\",\r\n      value: [51.87, -12.93, 56.68],\r\n    },\r\n    {\r\n      name: \"olivedrab\",\r\n      value: [54.65, -28.22, 49.69],\r\n    },\r\n    {\r\n      name: \"orange\",\r\n      value: [74.93, 23.94, 78.96],\r\n    },\r\n    {\r\n      name: \"orangered\",\r\n      value: [57.57, 67.8, 68.97],\r\n    },\r\n    {\r\n      name: \"orchid\",\r\n      value: [62.8, 55.29, -34.42],\r\n    },\r\n    {\r\n      name: \"palegoldenrod\",\r\n      value: [91.14, -7.35, 30.96],\r\n    },\r\n    {\r\n      name: \"palegreen\",\r\n      value: [90.75, -48.3, 38.52],\r\n    },\r\n    {\r\n      name: \"paleturquoise\",\r\n      value: [90.06, -19.63, -6.41],\r\n    },\r\n    {\r\n      name: \"palevioletred\",\r\n      value: [60.56, 45.53, 0.39],\r\n    },\r\n    {\r\n      name: \"papayawhip\",\r\n      value: [95.08, 1.27, 14.52],\r\n    },\r\n    {\r\n      name: \"peachpuff\",\r\n      value: [89.35, 8.09, 21.01],\r\n    },\r\n    {\r\n      name: \"peru\",\r\n      value: [61.75, 21.4, 47.92],\r\n    },\r\n    {\r\n      name: \"pink\",\r\n      value: [83.58, 24.15, 3.32],\r\n    },\r\n    {\r\n      name: \"plum\",\r\n      value: [73.37, 32.54, -22],\r\n    },\r\n    {\r\n      name: \"powderblue\",\r\n      value: [86.13, -14.09, -8.02],\r\n    },\r\n    {\r\n      name: \"purple\",\r\n      value: [29.78, 58.94, -36.5],\r\n    },\r\n    {\r\n      name: \"red\",\r\n      value: [53.23, 80.11, 67.22],\r\n    },\r\n    {\r\n      name: \"rosybrown\",\r\n      value: [63.61, 17.02, 6.6],\r\n    },\r\n    {\r\n      name: \"royalblue\",\r\n      value: [47.83, 26.27, -65.27],\r\n    },\r\n    {\r\n      name: \"saddlebrown\",\r\n      value: [37.47, 26.45, 40.99],\r\n    },\r\n    {\r\n      name: \"salmon\",\r\n      value: [67.26, 45.23, 29.09],\r\n    },\r\n    {\r\n      name: \"sandybrown\",\r\n      value: [73.95, 23.03, 46.79],\r\n    },\r\n    {\r\n      name: \"seagreen\",\r\n      value: [51.54, -39.71, 20.05],\r\n    },\r\n    {\r\n      name: \"seashell\",\r\n      value: [97.12, 2.17, 4.54],\r\n    },\r\n    {\r\n      name: \"sienna\",\r\n      value: [43.8, 29.33, 35.64],\r\n    },\r\n    {\r\n      name: \"silver\",\r\n      value: [77.7, 0, -0.01],\r\n    },\r\n    {\r\n      name: \"skyblue\",\r\n      value: [79.21, -14.83, -21.28],\r\n    },\r\n    {\r\n      name: \"slateblue\",\r\n      value: [45.34, 36.05, -57.78],\r\n    },\r\n    {\r\n      name: \"slategray\",\r\n      value: [52.84, -2.14, -10.58],\r\n    },\r\n    {\r\n      name: \"slategrey\",\r\n      value: [52.84, -2.14, -10.58],\r\n    },\r\n    {\r\n      name: \"snow\",\r\n      value: [98.64, 1.66, 0.58],\r\n    },\r\n    {\r\n      name: \"springgreen\",\r\n      value: [88.47, -76.9, 47.03],\r\n    },\r\n    {\r\n      name: \"steelblue\",\r\n      value: [52.47, -4.07, -32.2],\r\n    },\r\n    {\r\n      name: \"tan\",\r\n      value: [74.97, 5.02, 24.42],\r\n    },\r\n    {\r\n      name: \"teal\",\r\n      value: [48.26, -28.84, -8.48],\r\n    },\r\n    {\r\n      name: \"thistle\",\r\n      value: [80.08, 13.22, -9.24],\r\n    },\r\n    {\r\n      name: \"tomato\",\r\n      value: [62.2, 57.86, 46.42],\r\n    },\r\n    {\r\n      name: \"turquoise\",\r\n      value: [81.27, -44.08, -4.03],\r\n    },\r\n    {\r\n      name: \"violet\",\r\n      value: [69.69, 56.37, -36.82],\r\n    },\r\n    {\r\n      name: \"wheat\",\r\n      value: [89.35, 1.51, 24],\r\n    },\r\n    {\r\n      name: \"white\",\r\n      value: [100, 0.01, -0.01],\r\n    },\r\n    {\r\n      name: \"whitesmoke\",\r\n      value: [96.54, 0.01, -0.01],\r\n    },\r\n    {\r\n      name: \"yellow\",\r\n      value: [97.14, -21.56, 94.48],\r\n    },\r\n    {\r\n      name: \"yellowgreen\",\r\n      value: [76.54, -37.99, 66.59],\r\n    },\r\n  ] as { name: string; value: [number, number, number] }[];\r\n\r\n  static getMeanMedian = (colors: Color[], options: Options) => {\r\n    const averagingMethod = options.averagingMethod;\r\n    const numberOfPixels = colors.length;\r\n\r\n    const mean = new Color();\r\n    const median = new Color();\r\n\r\n    if (numberOfPixels === 0) return [mean, median];\r\n\r\n    const colorChannels = [\"r\", \"g\", \"b\", \"a\"] as const;\r\n\r\n    for (let i = 0; i < colorChannels.length; i++) {\r\n      const channel = colorChannels[i];\r\n\r\n      const values = [] as number[];\r\n\r\n      for (let i = 0; i < colors.length; i++) values.push(colors[i][channel]);\r\n\r\n      const sortedValues = values.sort();\r\n\r\n      if (averagingMethod === \"squared\") {\r\n        let totalSquaredValue = 0;\r\n\r\n        for (let i = 0; i < values.length; i++) totalSquaredValue += Color.squaredValues[values[i]];\r\n\r\n        const meanSquaredValue = totalSquaredValue / numberOfPixels;\r\n        const meanValue = Math.sqrt(meanSquaredValue);\r\n\r\n        mean[channel] = meanValue;\r\n      }\r\n\r\n      if (averagingMethod === \"simple\") {\r\n        let totalValue = 0;\r\n\r\n        for (let i = 0; i < values.length; i++) totalValue += values[i];\r\n\r\n        const meanValue = totalValue / numberOfPixels;\r\n\r\n        mean[channel] = meanValue;\r\n      }\r\n\r\n      const medianIndex = Math.floor(sortedValues.length / 2);\r\n\r\n      median[channel] = sortedValues[medianIndex];\r\n    }\r\n\r\n    return [mean, median];\r\n  };\r\n\r\n  static getLightestDarkest = (colors: Color[]) => {\r\n    if (colors.length === 0) return [new Color(), new Color()];\r\n\r\n    const sRGBtoLinear = (channel: number) => {\r\n      if (channel <= 0.04045) return channel / 12.92;\r\n\r\n      return Math.pow((channel + 0.055) / 1.055, 2.4);\r\n    };\r\n\r\n    const lightnessValues = colors.map((color) => {\r\n      const lR = sRGBtoLinear(color.r / 255);\r\n      const lG = sRGBtoLinear(color.g / 255);\r\n      const lB = sRGBtoLinear(color.b / 255);\r\n\r\n      const luminance = 0.2126 * lR + 0.7152 * lG + 0.0722 * lB;\r\n\r\n      if (luminance <= 216 / 24389) return luminance * (24389 / 27);\r\n      return Math.pow(luminance, 1 / 3) * 116 - 16;\r\n    });\r\n\r\n    const lightnestValue = Math.max(...lightnessValues);\r\n    const darkestValue = Math.min(...lightnessValues);\r\n\r\n    const lightestIndex = lightnessValues.indexOf(lightnestValue);\r\n    const darkestIndex = lightnessValues.indexOf(darkestValue);\r\n\r\n    return [new Color(colors[lightestIndex]), new Color(colors[darkestIndex])];\r\n  };\r\n\r\n  static blendColors = (background: Color, foreground: Color) => {\r\n    const normalFgAlpha = foreground.a / 255;\r\n    const normalBgAlpha = 1 - normalFgAlpha;\r\n\r\n    const channels = [\"r\", \"g\", \"b\"] as const;\r\n\r\n    const rgb = channels.map((c) => background[c] * normalBgAlpha + foreground[c] * normalFgAlpha);\r\n\r\n    return new Color(...rgb);\r\n  };\r\n\r\n  r = 0; // 0-255\r\n  g = 0; // 0-255;\r\n  b = 0; // 0-255;\r\n  a = 0; // 0-255;\r\n\r\n  constructor(a?: number | string | Color, b?: number, c?: number, d?: number) {\r\n    if (arguments.length === 1) {\r\n      if (a instanceof Color) return new Color(...a.rgba);\r\n\r\n      if (typeof a === \"string\" && a[0] === \"#\") {\r\n        let hex = a;\r\n\r\n        if (hex.length === 4) hex = \"#\" + hex[1] + hex[1] + hex[2] + hex[2] + hex[3] + hex[3];\r\n\r\n        if (hex.length === 7 || hex.length === 9) {\r\n          this.r = parseInt(hex[1] + hex[2], 16);\r\n          this.g = parseInt(hex[3] + hex[4], 16);\r\n          this.b = parseInt(hex[5] + hex[6], 16);\r\n\r\n          if (hex.length === 9) this.a = parseInt(hex[7] + hex[8], 16);\r\n          else this.a = 255;\r\n        }\r\n\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (arguments.length === 3 || arguments.length === 4) {\r\n      const alpha = d == null ? 255 : d;\r\n\r\n      if (typeof a === \"number\" && typeof b === \"number\" && typeof c === \"number\") {\r\n        this.r = a;\r\n        this.g = b;\r\n        this.b = c;\r\n      }\r\n\r\n      this.a = alpha;\r\n    }\r\n  }\r\n\r\n  getClosedNamedColor = () => {\r\n    const { r, g, b } = this;\r\n\r\n    const lab = rgb2lab([r, g, b]);\r\n\r\n    let smallestDeltaE = 101;\r\n    let closestColorName = \"\";\r\n\r\n    Color.namedColorsLab.forEach((namedColor) => {\r\n      const deltaE = getDeltaE(lab, namedColor.value);\r\n\r\n      if (deltaE < smallestDeltaE) {\r\n        smallestDeltaE = deltaE;\r\n        closestColorName = namedColor.name;\r\n      }\r\n    });\r\n\r\n    return closestColorName;\r\n  };\r\n\r\n  get rgb(): [number, number, number] {\r\n    const { r, g, b } = this;\r\n\r\n    return [r, g, b];\r\n  }\r\n\r\n  get rgba(): [number, number, number, number] {\r\n    const { r, g, b, a } = this;\r\n\r\n    return [r, g, b, a];\r\n  }\r\n\r\n  toRgb() {\r\n    const { r, g, b } = this;\r\n\r\n    const rgb = [r, g, b].map((value) => Math.round(value));\r\n\r\n    return `rgb(${rgb.join(\", \")})`;\r\n  }\r\n\r\n  toRgba() {\r\n    const { r, g, b, a } = this;\r\n\r\n    const rgba = [r, g, b].map((value) => Math.round(value));\r\n    rgba.push(round(a / 255, 2));\r\n\r\n    return `rgba(${rgba.join(\", \")})`;\r\n  }\r\n\r\n  private hex = (value: number) => (\"0\" + Math.round(value).toString(16)).slice(-2);\r\n\r\n  toHex6() {\r\n    const { r, g, b, hex } = this;\r\n\r\n    return \"#\" + hex(r) + hex(g) + hex(b);\r\n  }\r\n\r\n  toHex8() {\r\n    const { r, g, b, a, hex } = this;\r\n\r\n    return \"#\" + hex(r) + hex(g) + hex(b) + hex(a);\r\n  }\r\n\r\n  private getHsl = () => {\r\n    const { r, g, b } = this;\r\n\r\n    const nR = r / 255;\r\n    const nG = g / 255;\r\n    const nB = b / 255;\r\n\r\n    const max = Math.max(nR, nG, nB);\r\n    const min = Math.min(nR, nG, nB);\r\n    const delta = max - min;\r\n\r\n    let hue, lightness, saturation;\r\n\r\n    // hue\r\n    if (delta === 0) hue = 0;\r\n    else if (nR === max) hue = ((nG - nB) / delta) % 6;\r\n    else if (nG === max) hue = (nB - nR) / delta + 2;\r\n    else hue = (nR - nG) / delta + 4;\r\n\r\n    hue = Math.round(hue * 60);\r\n\r\n    if (hue < 0) hue += 360;\r\n\r\n    // lightness\r\n    lightness = (max + min) / 2;\r\n\r\n    // saturation\r\n    if (delta === 0) saturation = 0;\r\n    else saturation = delta / (1 - Math.abs(2 * lightness - 1));\r\n\r\n    lightness = round(lightness * 100, 1);\r\n    saturation = round(saturation * 100, 1);\r\n\r\n    return [hue, saturation, lightness];\r\n  };\r\n\r\n  toHsl() {\r\n    const [hue, saturation, lightness] = this.getHsl();\r\n\r\n    return `hsl(${hue}, ${saturation}%, ${lightness}%)`;\r\n  }\r\n\r\n  toHsla() {\r\n    const { a } = this;\r\n\r\n    const [hue, saturation, lightness] = this.getHsl();\r\n\r\n    const alpha = round(a / 255, 2);\r\n\r\n    return `hsla(${hue}, ${saturation}%, ${lightness}%, ${alpha})`;\r\n  }\r\n}\r\n","class OptionsProxy {\r\n  [key: string]: any;\r\n\r\n  constructor() {\r\n    return new Proxy(this as unknown as Options, {\r\n      get: (target, name) => {\r\n        const field = target.fieldHashmap[name.toString()];\r\n\r\n        if (field) return field.value;\r\n\r\n        return target[name as keyof Options];\r\n      },\r\n    });\r\n  }\r\n}\r\n\r\nexport default class Options extends OptionsProxy {\r\n  readonly fieldArray: (HTMLInputElement | HTMLSelectElement)[];\r\n  readonly fieldHashmap: {\r\n    [key: string]: HTMLInputElement | HTMLSelectElement;\r\n  };\r\n  readonly fieldToBeforeChangeCallback: {\r\n    [key: string]: () => void;\r\n  };\r\n\r\n  callback?: () => void;\r\n\r\n  constructor(optionFields: (HTMLInputElement | HTMLSelectElement)[], callback?: () => void) {\r\n    super();\r\n\r\n    this.fieldArray = optionFields;\r\n    this.fieldHashmap = {};\r\n    this.fieldToBeforeChangeCallback = {};\r\n\r\n    optionFields.forEach((field) => {\r\n      this.fieldHashmap[field.name] = field;\r\n    });\r\n\r\n    if (callback) this.onChange = callback;\r\n\r\n    this.restore();\r\n  }\r\n\r\n  onBeforeChange = (name: string, newBeforeChangeCallback: () => void) => {\r\n    const { fieldHashmap, fieldToBeforeChangeCallback, callback } = this;\r\n\r\n    const field = fieldHashmap[name];\r\n\r\n    if (!field) return;\r\n\r\n    const beforeChangeCallback = fieldToBeforeChangeCallback[name];\r\n\r\n    if (callback) field.removeEventListener(\"change\", callback);\r\n    if (beforeChangeCallback) field.removeEventListener(\"change\", beforeChangeCallback);\r\n\r\n    field.addEventListener(\"change\", newBeforeChangeCallback);\r\n\r\n    if (callback) field.addEventListener(\"change\", callback);\r\n\r\n    fieldToBeforeChangeCallback[name] = newBeforeChangeCallback;\r\n  };\r\n\r\n  triggerAllBeforeChangeCallbacks = () => {\r\n    const { fieldArray, fieldToBeforeChangeCallback } = this;\r\n\r\n    fieldArray.forEach((field) => {\r\n      const beforeChangeCallback = fieldToBeforeChangeCallback[field.name];\r\n\r\n      if (beforeChangeCallback) beforeChangeCallback();\r\n    });\r\n  };\r\n\r\n  save = () => {\r\n    const { fieldArray } = this;\r\n\r\n    const optionsString = fieldArray.reduce((optionsObject, field) => {\r\n      if (field.type !== \"file\") optionsObject[field.name] = field.value;\r\n\r\n      return optionsObject;\r\n    }, {} as { [key: string]: string });\r\n\r\n    localStorage.setItem(\"options\", JSON.stringify(optionsString));\r\n  };\r\n\r\n  restore = () => {\r\n    const { fieldArray } = this;\r\n    const optionsString = localStorage.getItem(\"options\");\r\n\r\n    if (!optionsString) return;\r\n\r\n    try {\r\n      const optionsObject = JSON.parse(optionsString);\r\n\r\n      fieldArray.forEach((field) => {\r\n        if (optionsObject[field.name]) field.value = optionsObject[field.name];\r\n      });\r\n    } catch (e) {\r\n      localStorage.removeItem(\"options\");\r\n    }\r\n  };\r\n\r\n  set onChange(newCallback: () => void) {\r\n    const { fieldArray, callback } = this;\r\n\r\n    fieldArray.forEach((field) => {\r\n      if (callback) field.removeEventListener(\"change\", callback);\r\n      field.addEventListener(\"change\", newCallback);\r\n    });\r\n\r\n    this.callback = newCallback;\r\n  }\r\n}\r\n","import Color from \"./Color.ts\";\r\nimport { clamp } from \"./Util.ts\";\r\n\r\nexport default class Preview {\r\n  readonly preview: HTMLCanvasElement;\r\n  readonly uploader: HTMLInputElement;\r\n\r\n  private context: CanvasRenderingContext2D;\r\n  private image: HTMLImageElement;\r\n  private colors: Color[];\r\n\r\n  private opacity: number | undefined;\r\n  private backgroundColor: Color | undefined;\r\n\r\n  constructor(previewElement: HTMLCanvasElement, uploaderElement: HTMLInputElement) {\r\n    const image = new Image();\r\n    image.addEventListener(\"load\", this.handleUpdateImage);\r\n\r\n    uploaderElement.addEventListener(\"change\", this.handleReadUpload);\r\n\r\n    this.preview = previewElement;\r\n    this.uploader = uploaderElement;\r\n\r\n    const context = previewElement.getContext(\"2d\");\r\n    if (!context) throw \"Failed to get 2D context from canvas element.\";\r\n\r\n    this.context = context;\r\n    this.image = image;\r\n    this.colors = [];\r\n  }\r\n\r\n  handleReadUpload = () => {\r\n    const { uploader, image } = this;\r\n\r\n    const fileReader = new FileReader();\r\n\r\n    fileReader.addEventListener(\"load\", (e) => {\r\n      if (!e.target || !e.target.result) throw \"Failed to read uploaded file.\";\r\n\r\n      image.src = e.target.result.toString();\r\n    });\r\n\r\n    if (!uploader.files) throw \"Asked to read image file but found no file was uploaded.\";\r\n\r\n    fileReader.readAsDataURL(uploader.files[0]);\r\n  };\r\n\r\n  handleUpdateImage = () => {\r\n    const { preview, context, image, opacity, backgroundColor } = this;\r\n    let { width, height } = image;\r\n\r\n    if (!width) width = 300;\r\n    if (!height) height = 200;\r\n\r\n    const imageDataToColorArray = (imageData: Uint8ClampedArray) => {\r\n      const colors = [];\r\n\r\n      for (let i = 0; i < imageData.length; i += 4) {\r\n        const r = imageData[i + 0];\r\n        const g = imageData[i + 1];\r\n        const b = imageData[i + 2];\r\n        const a = imageData[i + 3];\r\n\r\n        colors.push(new Color(r, g, b, a));\r\n      }\r\n\r\n      return colors;\r\n    };\r\n\r\n    preview.width = width;\r\n    preview.height = height;\r\n\r\n    context.clearRect(0, 0, width, height);\r\n    context.drawImage(image, 0, 0);\r\n\r\n    const imageData = context.getImageData(0, 0, width, height);\r\n    const values = imageData.data;\r\n\r\n    if (opacity == null && backgroundColor == null) {\r\n      this.colors = imageDataToColorArray(values);\r\n      return true;\r\n    }\r\n\r\n    // Handle Opacity\r\n\r\n    if (opacity != null) {\r\n      for (let i = 0; i < values.length; i += 4) {\r\n        const alpha = values[i + 3] * opacity;\r\n        const clampedAlpha = clamp(alpha, 0, 255);\r\n\r\n        values[i + 3] = clampedAlpha;\r\n      }\r\n\r\n      context.putImageData(imageData, 0, 0);\r\n\r\n      if (!backgroundColor) {\r\n        this.colors = imageDataToColorArray(values);\r\n        return true;\r\n      }\r\n    }\r\n\r\n    // Handle Background Color\r\n\r\n    if (backgroundColor != null) {\r\n      const offscreenCanvas = new OffscreenCanvas(width, height);\r\n      const offscreenContext = offscreenCanvas.getContext(\"2d\");\r\n\r\n      if (!offscreenContext) throw \"Failed to get 2D context of offscreen canvas.\";\r\n\r\n      offscreenContext.fillStyle = backgroundColor.toRgba();\r\n      offscreenContext.fillRect(0, 0, width, height);\r\n      offscreenContext.drawImage(preview, 0, 0);\r\n\r\n      context.drawImage(offscreenCanvas, 0, 0);\r\n\r\n      this.colors = imageDataToColorArray(context.getImageData(0, 0, width, height).data);\r\n    }\r\n  };\r\n\r\n  loadExampleImage = () => {\r\n    this.image.src = \"./example.png\";\r\n  };\r\n\r\n  getColorsAt = (startX: number, startY: number, width: number, height: number) => {\r\n    const { preview, colors } = this;\r\n\r\n    const targetColors = [];\r\n\r\n    for (let y = startY; y < startY + height; y++) {\r\n      for (let x = startX; x < startX + width; x++) {\r\n        const i = y * preview.width + x;\r\n\r\n        if (i < 0 || i > colors.length) continue;\r\n\r\n        targetColors.push(colors[i]);\r\n      }\r\n    }\r\n\r\n    return targetColors;\r\n  };\r\n\r\n  setBackgroundColor = (color: Color) => {\r\n    if (color.a === 0) delete this.backgroundColor;\r\n    else this.backgroundColor = color;\r\n\r\n    this.handleUpdateImage();\r\n  };\r\n\r\n  setOpacity = (opacity: number) => {\r\n    if (opacity === 1) delete this.opacity;\r\n    else this.opacity = opacity;\r\n\r\n    this.handleUpdateImage();\r\n  };\r\n}\r\n","import Color from \"./Color.ts\";\r\nimport Options from \"./Options.ts\";\r\nimport { toast } from \"./Util.ts\";\r\n\r\ntype resultElementInfo = {\r\n  textElement: HTMLInputElement;\r\n  foregroundElement: HTMLElement;\r\n  backgroundElement: HTMLElement;\r\n};\r\n\r\nexport default class Results {\r\n  readonly resultElementArray: resultElementInfo[];\r\n  readonly resultElementHashmap: { [key: string]: resultElementInfo };\r\n\r\n  constructor(resultFields: HTMLElement[]) {\r\n    this.resultElementArray = [];\r\n    this.resultElementHashmap = {};\r\n\r\n    resultFields.forEach((resultField) => {\r\n      const textElement = resultField.querySelector(\"input\") as HTMLInputElement;\r\n      const foregroundElement = resultField.querySelector(\".foreground\") as HTMLElement;\r\n      const backgroundElement = resultField.querySelector(\".background\") as HTMLElement;\r\n      const copyButton = resultField.querySelector(\".copy\");\r\n\r\n      if (copyButton) {\r\n        copyButton.addEventListener(\"click\", (e) => {\r\n          e.preventDefault();\r\n          navigator.clipboard.writeText(textElement.value);\r\n          toast(`Copied ${textElement.value}`);\r\n        });\r\n      }\r\n\r\n      const proxiedTextElement = new Proxy(textElement, {\r\n        set: (target, name, value) => {\r\n          if (name === \"value\") foregroundElement.style.backgroundColor = value;\r\n\r\n          // @ts-expect-error continue with default behavior\r\n          target[name] = value;\r\n          return true;\r\n        },\r\n      });\r\n\r\n      const name = textElement.name.split(\"ResultText\")[0];\r\n      const info = {\r\n        textElement: proxiedTextElement,\r\n        foregroundElement,\r\n        backgroundElement,\r\n      };\r\n\r\n      this.resultElementHashmap[name] = info;\r\n      this.resultElementArray.push(info);\r\n    });\r\n  }\r\n\r\n  setBackgroundColor = (color: Color) => {\r\n    const { resultElementArray } = this;\r\n\r\n    const backgroundColor = color.toRgba();\r\n\r\n    resultElementArray.forEach((info) => {\r\n      info.backgroundElement.style.backgroundColor = backgroundColor;\r\n    });\r\n  };\r\n\r\n  setResult = (type: string, color: Color, options: Options) => {\r\n    const { resultElementHashmap } = this;\r\n    const resultFormat = options.resultFormat;\r\n    const hideAlphaChannel = options.hideAlphaChannel;\r\n\r\n    let includeAlpha = false;\r\n    if (hideAlphaChannel === \"always\") includeAlpha = false;\r\n    else if (hideAlphaChannel === \"never\") includeAlpha = true;\r\n    else if (color.a !== 255) includeAlpha = true;\r\n\r\n    let value = \"\";\r\n\r\n    if (resultFormat === \"rgb\") value = includeAlpha ? color.toRgba() : color.toRgb();\r\n    if (resultFormat === \"hex\") value = includeAlpha ? color.toHex8() : color.toHex6();\r\n    if (resultFormat === \"hsl\") value = includeAlpha ? color.toHsla() : color.toHsl();\r\n    if (resultFormat === \"svg\") value = color.getClosedNamedColor();\r\n\r\n    if (!value) throw `Invalid resultFormat option: ${resultFormat.toString()}`;\r\n\r\n    resultElementHashmap[type].textElement.value = value;\r\n  };\r\n}\r\n","import { debounce } from \"./Util.ts\";\r\n\r\nexport default class Selection {\r\n  readonly outline: HTMLElement;\r\n  readonly target: HTMLCanvasElement;\r\n\r\n  callback: (() => void) | undefined;\r\n\r\n  private isInProgress = false;\r\n  private startPosition = { x: 0, y: 0 };\r\n  private endPosition = { x: 0, y: 0 };\r\n\r\n  info:\r\n    | {\r\n        top: number;\r\n        left: number;\r\n        bottom: number;\r\n        right: number;\r\n        width: number;\r\n        height: number;\r\n      }\r\n    | undefined;\r\n\r\n  constructor(borderElement: HTMLElement, targetElement: HTMLCanvasElement, callback?: () => void) {\r\n    targetElement.onmousedown = this.handleSelect;\r\n    targetElement.onmouseup = this.handleSelect;\r\n    targetElement.onmousemove = this.handleSelect;\r\n    targetElement.onmouseleave = this.handleSelect;\r\n\r\n    targetElement.ontouchstart = this.handleTouch;\r\n    targetElement.ontouchend = this.handleTouch;\r\n    targetElement.ontouchmove = this.handleTouch;\r\n\r\n    this.outline = borderElement;\r\n    this.target = targetElement;\r\n\r\n    if (callback) this.onSelectionEnd = callback;\r\n  }\r\n\r\n  handleTouch = (e: TouchEvent) => {\r\n    const { targetTouches, changedTouches, type } = e;\r\n\r\n    if (targetTouches.length !== 2) return;\r\n    else e.preventDefault();\r\n\r\n    const { target, updateInfo, updateOutline, callback } = this;\r\n\r\n    const touches = type === \"touchend\" ? changedTouches : targetTouches;\r\n    const boundingRect = target.getBoundingClientRect();\r\n\r\n    const x1 = Math.round(touches[0].clientX - boundingRect.left);\r\n    const y1 = Math.round(touches[0].clientY - boundingRect.top);\r\n\r\n    const x2 = Math.round(touches[1].clientX - boundingRect.left);\r\n    const y2 = Math.round(touches[1].clientY - boundingRect.top);\r\n\r\n    this.startPosition = { x: x1, y: y1 };\r\n    this.endPosition = { x: x2, y: y2 };\r\n\r\n    updateInfo();\r\n    updateOutline();\r\n\r\n    if (callback) callback();\r\n  };\r\n\r\n  handleSelect = (e: MouseEvent) => {\r\n    const { type, button, clientX, clientY } = e;\r\n    const { target, isInProgress, updateInfo, updateOutline, callback } = this;\r\n\r\n    if (button !== null && button !== 0) return;\r\n\r\n    const boundingRect = target.getBoundingClientRect();\r\n    const x = Math.round(clientX - boundingRect.left);\r\n    const y = Math.round(clientY - boundingRect.top);\r\n\r\n    if (type === \"mousedown\") {\r\n      this.startPosition = { x, y };\r\n      this.isInProgress = true;\r\n      return;\r\n    }\r\n\r\n    if (!isInProgress) return;\r\n\r\n    if (type === \"mousemove\" || type === \"mouseup\" || type === \"mouseleave\") {\r\n      this.endPosition = { x, y };\r\n\r\n      updateInfo();\r\n      updateOutline();\r\n\r\n      if (callback) callback();\r\n    }\r\n\r\n    if (type === \"mouseup\" || type === \"mouseleave\") this.isInProgress = false;\r\n  };\r\n\r\n  set onSelectionEnd(callback: () => void) {\r\n    this.callback = debounce(callback);\r\n  }\r\n\r\n  updateInfo = () => {\r\n    const { startPosition, endPosition, target } = this;\r\n\r\n    const top = Math.max(Math.min(startPosition.y, endPosition.y), 0);\r\n    const left = Math.max(Math.min(startPosition.x, endPosition.x), 0);\r\n    const bottom = Math.min(Math.max(startPosition.y, endPosition.y), target.height);\r\n    const right = Math.min(Math.max(startPosition.x, endPosition.x), target.width);\r\n\r\n    const width = Math.max(right - left, 1);\r\n    const height = Math.max(bottom - top, 1);\r\n\r\n    this.info = { top, left, bottom, right, width, height };\r\n  };\r\n\r\n  updateOutline = () => {\r\n    const { outline, info } = this;\r\n\r\n    if (!info) return;\r\n\r\n    const { top, left, width, height } = info;\r\n\r\n    const cssText = `top:${top}px; left:${left}px; width:${width}px; height:${height}px;`;\r\n\r\n    outline.style.cssText = cssText;\r\n  };\r\n\r\n  clear = () => {\r\n    const { outline } = this;\r\n\r\n    outline.style.cssText = \"\";\r\n\r\n    delete this.info;\r\n  };\r\n}\r\n","export const debounce = (func: (...args: any[]) => any, timeout = 150) => {\r\n  let timer: number;\r\n\r\n  return (...args: any[]) => {\r\n    clearTimeout(timer);\r\n    timer = window.setTimeout(() => func.apply(this, args), timeout);\r\n  };\r\n};\r\n\r\nexport const round = (value: number, decimalPlaces = 0) =>\r\n  +(Math.round(+(value + `e+${decimalPlaces}`)) + `e-${decimalPlaces}`);\r\n\r\nexport const clamp = (value: number, min: number, max: number) =>\r\n  Math.max(Math.min(value, max), min);\r\n\r\nexport const toast = (message: string) => {\r\n  const toast = document.createElement(\"div\");\r\n\r\n  toast.textContent = message;\r\n  toast.className = \"toast\";\r\n  toast.setAttribute(\"role\", \"status\");\r\n\r\n  const toastContainer = document.querySelector(\".toast-container\");\r\n\r\n  if (toastContainer) {\r\n    toastContainer.appendChild(toast);\r\n\r\n    setTimeout(() => {\r\n      toastContainer.removeChild(toast);\r\n    }, 1500);\r\n  }\r\n};\r\n","import Color from \"./classes/Color.ts\";\r\nimport Options from \"./classes/Options.ts\";\r\nimport Preview from \"./classes/Preview.ts\";\r\nimport Selection from \"./classes/Selection.ts\";\r\nimport Results from \"./classes/Results.ts\";\r\nimport { toast } from \"./classes/Util.ts\";\r\n\r\nfunction init() {\r\n  const $ = (selector: string): HTMLElement[] => Array.from(document.querySelectorAll(selector));\r\n\r\n  const optionsForm = $(\".options\")[0] as HTMLFormElement;\r\n  const resultsForm = $(\".results\")[0] as HTMLFormElement;\r\n\r\n  optionsForm.reset();\r\n  resultsForm.reset();\r\n\r\n  optionsForm.addEventListener(\"submit\", (e) => {\r\n    e.preventDefault();\r\n    calculate();\r\n  });\r\n\r\n  const optionFields = $(\".options :is(input, select)\") as (HTMLInputElement | HTMLSelectElement)[];\r\n  const resultFields = $(\".results .field\") as HTMLInputElement[];\r\n\r\n  const previewElement = $(\".preview\")[0] as HTMLCanvasElement;\r\n  const uploaderElement = $(\"input[name=imageUpload]\")[0] as HTMLInputElement;\r\n  const selectorElement = $(\".selector\")[0];\r\n\r\n  const options = new Options(optionFields);\r\n  const preview = new Preview(previewElement, uploaderElement);\r\n  const results = new Results(resultFields);\r\n  const selection = new Selection(selectorElement, previewElement);\r\n\r\n  const calculate = () => {\r\n    if (!selection.info) return;\r\n\r\n    const { top, left, width, height } = selection.info;\r\n\r\n    const selectedColors = preview.getColorsAt(left, top, width, height);\r\n\r\n    const [meanColor, medianColor] = Color.getMeanMedian(selectedColors, options);\r\n    const [lightestColor, darkestColor] = Color.getLightestDarkest(selectedColors);\r\n\r\n    results.setResult(\"mean\", meanColor, options);\r\n    results.setResult(\"median\", medianColor, options);\r\n    results.setResult(\"lightest\", lightestColor, options);\r\n    results.setResult(\"darkest\", darkestColor, options);\r\n  };\r\n\r\n  uploaderElement.addEventListener(\"change\", selection.clear);\r\n\r\n  const exampleImageButton = $(\"#example-image-button\")[0];\r\n  const resetButton = $(\"button[type=reset]\")[0];\r\n  const saveButton = $(\"button[name=save\")[0];\r\n\r\n  exampleImageButton.addEventListener(\"click\", (e) => {\r\n    e.preventDefault();\r\n    selection.clear();\r\n    preview.loadExampleImage();\r\n  });\r\n\r\n  resetButton.addEventListener(\"click\", (e) => {\r\n    e.preventDefault();\r\n    optionsForm.reset();\r\n    options.triggerAllBeforeChangeCallbacks();\r\n    calculate();\r\n    toast(\"Options reset!\");\r\n  });\r\n\r\n  saveButton.addEventListener(\"click\", (e) => {\r\n    e.preventDefault();\r\n    options.save();\r\n    toast(\"Options saved!\");\r\n  });\r\n\r\n  options.onBeforeChange(\"opacityPercentage\", () => {\r\n    const opacityPercent = options.opacityPercentage;\r\n\r\n    preview.setOpacity(opacityPercent / 100);\r\n  });\r\n\r\n  const handleBackgroundSettingsChanged = () => {\r\n    const transparencyType = options.transparencyType;\r\n\r\n    let backgroundColor = null;\r\n\r\n    if (transparencyType === \"straight\") backgroundColor = new Color(0, 0, 0, 0);\r\n    if (transparencyType === \"premultiplied\") backgroundColor = new Color(options.backgroundColor);\r\n\r\n    if (!backgroundColor) throw `Invalid transparency type option: ${transparencyType.toString()}`;\r\n\r\n    preview.setBackgroundColor(backgroundColor),\r\n      results.setBackgroundColor(backgroundColor),\r\n      calculate();\r\n  };\r\n\r\n  options.onBeforeChange(\"backgroundColor\", handleBackgroundSettingsChanged);\r\n  options.onBeforeChange(\"transparencyType\", handleBackgroundSettingsChanged);\r\n\r\n  options.triggerAllBeforeChangeCallbacks();\r\n\r\n  selection.onSelectionEnd = calculate;\r\n  options.onChange = calculate;\r\n}\r\n\r\nwindow.onload = () => requestAnimationFrame(init);\r\n"]}